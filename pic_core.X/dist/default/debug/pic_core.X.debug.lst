

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Mar 30 23:01:40 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 18/12/2023 GMT
    72                           ; 
    73                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F57Q43 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   0004E0                     bsr             equ	1248
   106   0004E9                     fsr0            equ	1257
   107   0004EA                     fsr0h           equ	1258
   108   0004E9                     fsr0l           equ	1257
   109   0004E1                     fsr1            equ	1249
   110   0004E2                     fsr1h           equ	1250
   111   0004E1                     fsr1l           equ	1249
   112   0004D9                     fsr2            equ	1241
   113   0004DA                     fsr2h           equ	1242
   114   0004D9                     fsr2l           equ	1241
   115   0004EF                     indf0           equ	1263
   116   0004E7                     indf1           equ	1255
   117   0004DF                     indf2           equ	1247
   118   0004D6                     intcon          equ	1238
   119   000041                     nvmcon          equ	65
   120   0004F9                     pcl             equ	1273
   121   0004FA                     pclath          equ	1274
   122   0004FB                     pclatu          equ	1275
   123   0004EB                     plusw0          equ	1259
   124   0004E3                     plusw1          equ	1251
   125   0004DB                     plusw2          equ	1243
   126   0004ED                     postdec0        equ	1261
   127   0004E5                     postdec1        equ	1253
   128   0004DD                     postdec2        equ	1245
   129   0004EE                     postinc0        equ	1262
   130   0004E6                     postinc1        equ	1254
   131   0004DE                     postinc2        equ	1246
   132   0004EC                     preinc0         equ	1260
   133   0004E4                     preinc1         equ	1252
   134   0004DC                     preinc2         equ	1244
   135   0004F3                     prod            equ	1267
   136   0004F4                     prodh           equ	1268
   137   0004F3                     prodl           equ	1267
   138   0004D8                     status          equ	1240
   139   0004F5                     tablat          equ	1269
   140   0004F6                     tblptr          equ	1270
   141   0004F7                     tblptrh         equ	1271
   142   0004F6                     tblptrl         equ	1270
   143   0004F8                     tblptru         equ	1272
   144   0004FD                     tosl            equ	1277
   145   0004E8                     wreg            equ	1256
   146   000039                     CLKRCON         equ	57	;# 
   147   00003A                     CLKRCLK         equ	58	;# 
   148   000040                     NVMCON0         equ	64	;# 
   149   000041                     NVMCON1         equ	65	;# 
   150   000042                     NVMLOCK         equ	66	;# 
   151   000043                     NVMADR          equ	67	;# 
   152   000043                     NVMADRL         equ	67	;# 
   153   000044                     NVMADRH         equ	68	;# 
   154   000045                     NVMADRU         equ	69	;# 
   155   000046                     NVMDAT          equ	70	;# 
   156   000046                     NVMDATL         equ	70	;# 
   157   000047                     NVMDATH         equ	71	;# 
   158   000048                     VREGCON         equ	72	;# 
   159   000049                     BORCON          equ	73	;# 
   160   00004A                     HLVDCON0        equ	74	;# 
   161   00004B                     HLVDCON1        equ	75	;# 
   162   00004C                     ZCDCON          equ	76	;# 
   163   000060                     PMD0            equ	96	;# 
   164   000061                     PMD1            equ	97	;# 
   165   000063                     PMD3            equ	99	;# 
   166   000064                     PMD4            equ	100	;# 
   167   000065                     PMD5            equ	101	;# 
   168   000066                     PMD6            equ	102	;# 
   169   000067                     PMD7            equ	103	;# 
   170   000068                     PMD8            equ	104	;# 
   171   00006A                     MD1CON0         equ	106	;# 
   172   00006B                     MD1CON1         equ	107	;# 
   173   00006C                     MD1SRC          equ	108	;# 
   174   00006D                     MD1CARL         equ	109	;# 
   175   00006E                     MD1CARH         equ	110	;# 
   176   00006F                     CMOUT           equ	111	;# 
   177   000070                     CM1CON0         equ	112	;# 
   178   000071                     CM1CON1         equ	113	;# 
   179   000072                     CM1NCH          equ	114	;# 
   180   000073                     CM1PCH          equ	115	;# 
   181   000074                     CM2CON0         equ	116	;# 
   182   000075                     CM2CON1         equ	117	;# 
   183   000076                     CM2NCH          equ	118	;# 
   184   000077                     CM2PCH          equ	119	;# 
   185   000078                     WDTCON0         equ	120	;# 
   186   000079                     WDTCON1         equ	121	;# 
   187   00007A                     WDTPS           equ	122	;# 
   188   00007A                     WDTPSL          equ	122	;# 
   189   00007B                     WDTPSH          equ	123	;# 
   190   00007C                     WDTTMR          equ	124	;# 
   191   00007D                     DAC1DAT         equ	125	;# 
   192   00007D                     DAC1DATL        equ	125	;# 
   193   00007F                     DAC1CON         equ	127	;# 
   194   000080                     SPI1RXB         equ	128	;# 
   195   000081                     SPI1TXB         equ	129	;# 
   196   000082                     SPI1TCNT        equ	130	;# 
   197   000082                     SPI1TCNTL       equ	130	;# 
   198   000083                     SPI1TCNTH       equ	131	;# 
   199   000084                     SPI1CON0        equ	132	;# 
   200   000085                     SPI1CON1        equ	133	;# 
   201   000086                     SPI1CON2        equ	134	;# 
   202   000087                     SPI1STATUS      equ	135	;# 
   203   000088                     SPI1TWIDTH      equ	136	;# 
   204   000089                     SPI1BAUD        equ	137	;# 
   205   00008A                     SPI1INTF        equ	138	;# 
   206   00008B                     SPI1INTE        equ	139	;# 
   207   00008C                     SPI1CLK         equ	140	;# 
   208   00008D                     SPI2RXB         equ	141	;# 
   209   00008E                     SPI2TXB         equ	142	;# 
   210   00008F                     SPI2TCNT        equ	143	;# 
   211   00008F                     SPI2TCNTL       equ	143	;# 
   212   000090                     SPI2TCNTH       equ	144	;# 
   213   000091                     SPI2CON0        equ	145	;# 
   214   000092                     SPI2CON1        equ	146	;# 
   215   000093                     SPI2CON2        equ	147	;# 
   216   000094                     SPI2STATUS      equ	148	;# 
   217   000095                     SPI2TWIDTH      equ	149	;# 
   218   000096                     SPI2BAUD        equ	150	;# 
   219   000097                     SPI2INTF        equ	151	;# 
   220   000098                     SPI2INTE        equ	152	;# 
   221   000099                     SPI2CLK         equ	153	;# 
   222   0000AC                     ACTCON          equ	172	;# 
   223   0000AD                     OSCCON1         equ	173	;# 
   224   0000AE                     OSCCON2         equ	174	;# 
   225   0000AF                     OSCCON3         equ	175	;# 
   226   0000B0                     OSCTUNE         equ	176	;# 
   227   0000B1                     OSCFRQ          equ	177	;# 
   228   0000B1                     OSCFREQ         equ	177	;# 
   229   0000B2                     OSCSTAT         equ	178	;# 
   230   0000B2                     OSCSTAT1        equ	178	;# 
   231   0000B3                     OSCEN           equ	179	;# 
   232   0000B4                     PRLOCK          equ	180	;# 
   233   0000B5                     SCANPR          equ	181	;# 
   234   0000B6                     DMA1PR          equ	182	;# 
   235   0000B7                     DMA2PR          equ	183	;# 
   236   0000B8                     DMA3PR          equ	184	;# 
   237   0000B9                     DMA4PR          equ	185	;# 
   238   0000BA                     DMA5PR          equ	186	;# 
   239   0000BB                     DMA6PR          equ	187	;# 
   240   0000BE                     MAINPR          equ	190	;# 
   241   0000BF                     ISRPR           equ	191	;# 
   242   0000D4                     CLCDATA         equ	212	;# 
   243   0000D5                     CLCSELECT       equ	213	;# 
   244   0000D6                     CLCnCON         equ	214	;# 
   245   0000D7                     CLCnPOL         equ	215	;# 
   246   0000D8                     CLCnSEL0        equ	216	;# 
   247   0000D9                     CLCnSEL1        equ	217	;# 
   248   0000DA                     CLCnSEL2        equ	218	;# 
   249   0000DB                     CLCnSEL3        equ	219	;# 
   250   0000DC                     CLCnGLS0        equ	220	;# 
   251   0000DD                     CLCnGLS1        equ	221	;# 
   252   0000DE                     CLCnGLS2        equ	222	;# 
   253   0000DF                     CLCnGLS3        equ	223	;# 
   254   0000E8                     DMASELECT       equ	232	;# 
   255   0000E9                     DMAnBUF         equ	233	;# 
   256   0000EA                     DMAnDCNT        equ	234	;# 
   257   0000EA                     DMAnDCNTL       equ	234	;# 
   258   0000EB                     DMAnDCNTH       equ	235	;# 
   259   0000EC                     DMAnDPTR        equ	236	;# 
   260   0000EC                     DMAnDPTRL       equ	236	;# 
   261   0000ED                     DMAnDPTRH       equ	237	;# 
   262   0000EE                     DMAnDSZ         equ	238	;# 
   263   0000EE                     DMAnDSZL        equ	238	;# 
   264   0000EF                     DMAnDSZH        equ	239	;# 
   265   0000F0                     DMAnDSA         equ	240	;# 
   266   0000F0                     DMAnDSAL        equ	240	;# 
   267   0000F1                     DMAnDSAH        equ	241	;# 
   268   0000F2                     DMAnSCNT        equ	242	;# 
   269   0000F2                     DMAnSCNTL       equ	242	;# 
   270   0000F3                     DMAnSCNTH       equ	243	;# 
   271   0000F4                     DMAnSPTR        equ	244	;# 
   272   0000F4                     DMAnSPTRL       equ	244	;# 
   273   0000F5                     DMAnSPTRH       equ	245	;# 
   274   0000F6                     DMAnSPTRU       equ	246	;# 
   275   0000F7                     DMAnSSZ         equ	247	;# 
   276   0000F7                     DMAnSSZL        equ	247	;# 
   277   0000F8                     DMAnSSZH        equ	248	;# 
   278   0000F9                     DMAnSSA         equ	249	;# 
   279   0000F9                     DMAnSSAL        equ	249	;# 
   280   0000FA                     DMAnSSAH        equ	250	;# 
   281   0000FB                     DMAnSSAU        equ	251	;# 
   282   0000FC                     DMAnCON0        equ	252	;# 
   283   0000FD                     DMAnCON1        equ	253	;# 
   284   0000FE                     DMAnAIRQ        equ	254	;# 
   285   0000FF                     DMAnSIRQ        equ	255	;# 
   286   000200                     PPSLOCK         equ	512	;# 
   287   000201                     RA0PPS          equ	513	;# 
   288   000202                     RA1PPS          equ	514	;# 
   289   000203                     RA2PPS          equ	515	;# 
   290   000204                     RA3PPS          equ	516	;# 
   291   000205                     RA4PPS          equ	517	;# 
   292   000206                     RA5PPS          equ	518	;# 
   293   000207                     RA6PPS          equ	519	;# 
   294   000208                     RA7PPS          equ	520	;# 
   295   000209                     RB0PPS          equ	521	;# 
   296   00020A                     RB1PPS          equ	522	;# 
   297   00020B                     RB2PPS          equ	523	;# 
   298   00020C                     RB3PPS          equ	524	;# 
   299   00020D                     RB4PPS          equ	525	;# 
   300   00020E                     RB5PPS          equ	526	;# 
   301   00020F                     RB6PPS          equ	527	;# 
   302   000210                     RB7PPS          equ	528	;# 
   303   000211                     RC0PPS          equ	529	;# 
   304   000212                     RC1PPS          equ	530	;# 
   305   000213                     RC2PPS          equ	531	;# 
   306   000214                     RC3PPS          equ	532	;# 
   307   000215                     RC4PPS          equ	533	;# 
   308   000216                     RC5PPS          equ	534	;# 
   309   000217                     RC6PPS          equ	535	;# 
   310   000218                     RC7PPS          equ	536	;# 
   311   000219                     RD0PPS          equ	537	;# 
   312   00021A                     RD1PPS          equ	538	;# 
   313   00021B                     RD2PPS          equ	539	;# 
   314   00021C                     RD3PPS          equ	540	;# 
   315   00021D                     RD4PPS          equ	541	;# 
   316   00021E                     RD5PPS          equ	542	;# 
   317   00021F                     RD6PPS          equ	543	;# 
   318   000220                     RD7PPS          equ	544	;# 
   319   000221                     RE0PPS          equ	545	;# 
   320   000222                     RE1PPS          equ	546	;# 
   321   000223                     RE2PPS          equ	547	;# 
   322   000229                     RF0PPS          equ	553	;# 
   323   00022A                     RF1PPS          equ	554	;# 
   324   00022B                     RF2PPS          equ	555	;# 
   325   00022C                     RF3PPS          equ	556	;# 
   326   00022D                     RF4PPS          equ	557	;# 
   327   00022E                     RF5PPS          equ	558	;# 
   328   00022F                     RF6PPS          equ	559	;# 
   329   000230                     RF7PPS          equ	560	;# 
   330   00023E                     INT0PPS         equ	574	;# 
   331   00023F                     INT1PPS         equ	575	;# 
   332   000240                     INT2PPS         equ	576	;# 
   333   000241                     T0CKIPPS        equ	577	;# 
   334   000242                     T1CKIPPS        equ	578	;# 
   335   000243                     T1GPPS          equ	579	;# 
   336   000244                     T3CKIPPS        equ	580	;# 
   337   000245                     T3GPPS          equ	581	;# 
   338   000246                     T5CKIPPS        equ	582	;# 
   339   000247                     T5GPPS          equ	583	;# 
   340   000248                     T2INPPS         equ	584	;# 
   341   000249                     T4INPPS         equ	585	;# 
   342   00024A                     T6INPPS         equ	586	;# 
   343   00024F                     CCP1PPS         equ	591	;# 
   344   000250                     CCP2PPS         equ	592	;# 
   345   000251                     CCP3PPS         equ	593	;# 
   346   000253                     PWM1ERSPPS      equ	595	;# 
   347   000254                     PWM2ERSPPS      equ	596	;# 
   348   000255                     PWM3ERSPPS      equ	597	;# 
   349   000257                     PWMIN0PPS       equ	599	;# 
   350   000258                     PWMIN1PPS       equ	600	;# 
   351   000259                     SMT1WINPPS      equ	601	;# 
   352   00025A                     SMT1SIGPPS      equ	602	;# 
   353   00025B                     CWG1PPS         equ	603	;# 
   354   00025B                     CWG1INPPS       equ	603	;# 
   355   00025C                     CWG2PPS         equ	604	;# 
   356   00025C                     CWG2INPPS       equ	604	;# 
   357   00025D                     CWG3PPS         equ	605	;# 
   358   00025D                     CWG3INPPS       equ	605	;# 
   359   00025E                     MD1CARLPPS      equ	606	;# 
   360   00025E                     MDCARLPPS       equ	606	;# 
   361   00025F                     MD1CARHPPS      equ	607	;# 
   362   00025F                     MDCARHPPS       equ	607	;# 
   363   000260                     MD1SRCPPS       equ	608	;# 
   364   000260                     MDSRCPPS        equ	608	;# 
   365   000261                     CLCIN0PPS       equ	609	;# 
   366   000262                     CLCIN1PPS       equ	610	;# 
   367   000263                     CLCIN2PPS       equ	611	;# 
   368   000264                     CLCIN3PPS       equ	612	;# 
   369   000265                     CLCIN4PPS       equ	613	;# 
   370   000266                     CLCIN5PPS       equ	614	;# 
   371   000267                     CLCIN6PPS       equ	615	;# 
   372   000268                     CLCIN7PPS       equ	616	;# 
   373   000269                     ADACTPPS        equ	617	;# 
   374   00026A                     SPI1SCKPPS      equ	618	;# 
   375   00026B                     SPI1SDIPPS      equ	619	;# 
   376   00026C                     SPI1SSPPS       equ	620	;# 
   377   00026D                     SPI2SCKPPS      equ	621	;# 
   378   00026E                     SPI2SDIPPS      equ	622	;# 
   379   00026F                     SPI2SSPPS       equ	623	;# 
   380   000270                     I2C1SDAPPS      equ	624	;# 
   381   000271                     I2C1SCLPPS      equ	625	;# 
   382   000272                     U1RXPPS         equ	626	;# 
   383   000273                     U1CTSPPS        equ	627	;# 
   384   000274                     U2RXPPS         equ	628	;# 
   385   000275                     U2CTSPPS        equ	629	;# 
   386   000276                     U3RXPPS         equ	630	;# 
   387   000277                     U3CTSPPS        equ	631	;# 
   388   000278                     U4RXPPS         equ	632	;# 
   389   000279                     U4CTSPPS        equ	633	;# 
   390   00027A                     U5RXPPS         equ	634	;# 
   391   00027B                     U5CTSPPS        equ	635	;# 
   392   000286                     RC4I2C          equ	646	;# 
   393   000287                     RC3I2C          equ	647	;# 
   394   000288                     RB2I2C          equ	648	;# 
   395   000289                     RB1I2C          equ	649	;# 
   396   00028B                     I2C1RXB         equ	651	;# 
   397   00028C                     I2C1TXB         equ	652	;# 
   398   00028D                     I2C1CNT         equ	653	;# 
   399   00028E                     I2C1ADB0        equ	654	;# 
   400   00028F                     I2C1ADB1        equ	655	;# 
   401   000290                     I2C1ADR0        equ	656	;# 
   402   000291                     I2C1ADR1        equ	657	;# 
   403   000292                     I2C1ADR2        equ	658	;# 
   404   000293                     I2C1ADR3        equ	659	;# 
   405   000294                     I2C1CON0        equ	660	;# 
   406   000295                     I2C1CON1        equ	661	;# 
   407   000296                     I2C1CON2        equ	662	;# 
   408   000297                     I2C1ERR         equ	663	;# 
   409   000298                     I2C1STAT0       equ	664	;# 
   410   000299                     I2C1STAT1       equ	665	;# 
   411   00029A                     I2C1PIR         equ	666	;# 
   412   00029B                     I2C1PIE         equ	667	;# 
   413   00029C                     I2C1CLK         equ	668	;# 
   414   00029D                     I2C1BTO         equ	669	;# 
   415   0002A1                     U1RXB           equ	673	;# 
   416   0002A1                     U1RXBL          equ	673	;# 
   417   0002A2                     U1RXCHK         equ	674	;# 
   418   0002A3                     U1TXB           equ	675	;# 
   419   0002A3                     U1TXBL          equ	675	;# 
   420   0002A4                     U1TXCHK         equ	676	;# 
   421   0002A5                     U1P1            equ	677	;# 
   422   0002A5                     U1P1L           equ	677	;# 
   423   0002A6                     U1P1H           equ	678	;# 
   424   0002A7                     U1P2            equ	679	;# 
   425   0002A7                     U1P2L           equ	679	;# 
   426   0002A8                     U1P2H           equ	680	;# 
   427   0002A9                     U1P3            equ	681	;# 
   428   0002A9                     U1P3L           equ	681	;# 
   429   0002AA                     U1P3H           equ	682	;# 
   430   0002AB                     U1CON0          equ	683	;# 
   431   0002AC                     U1CON1          equ	684	;# 
   432   0002AD                     U1CON2          equ	685	;# 
   433   0002AE                     U1BRG           equ	686	;# 
   434   0002AE                     U1BRGL          equ	686	;# 
   435   0002AF                     U1BRGH          equ	687	;# 
   436   0002B0                     U1FIFO          equ	688	;# 
   437   0002B1                     U1UIR           equ	689	;# 
   438   0002B2                     U1ERRIR         equ	690	;# 
   439   0002B3                     U1ERRIE         equ	691	;# 
   440   0002B4                     U2RXB           equ	692	;# 
   441   0002B4                     U2RXBL          equ	692	;# 
   442   0002B6                     U2TXB           equ	694	;# 
   443   0002B6                     U2TXBL          equ	694	;# 
   444   0002B8                     U2P1            equ	696	;# 
   445   0002B8                     U2P1L           equ	696	;# 
   446   0002BA                     U2P2            equ	698	;# 
   447   0002BA                     U2P2L           equ	698	;# 
   448   0002BC                     U2P3            equ	700	;# 
   449   0002BC                     U2P3L           equ	700	;# 
   450   0002BE                     U2CON0          equ	702	;# 
   451   0002BF                     U2CON1          equ	703	;# 
   452   0002C0                     U2CON2          equ	704	;# 
   453   0002C1                     U2BRG           equ	705	;# 
   454   0002C1                     U2BRGL          equ	705	;# 
   455   0002C2                     U2BRGH          equ	706	;# 
   456   0002C3                     U2FIFO          equ	707	;# 
   457   0002C4                     U2UIR           equ	708	;# 
   458   0002C5                     U2ERRIR         equ	709	;# 
   459   0002C6                     U2ERRIE         equ	710	;# 
   460   0002C7                     U3RXB           equ	711	;# 
   461   0002C7                     U3RXBL          equ	711	;# 
   462   0002C9                     U3TXB           equ	713	;# 
   463   0002C9                     U3TXBL          equ	713	;# 
   464   0002CB                     U3P1            equ	715	;# 
   465   0002CB                     U3P1L           equ	715	;# 
   466   0002CD                     U3P2            equ	717	;# 
   467   0002CD                     U3P2L           equ	717	;# 
   468   0002CF                     U3P3            equ	719	;# 
   469   0002CF                     U3P3L           equ	719	;# 
   470   0002D1                     U3CON0          equ	721	;# 
   471   0002D2                     U3CON1          equ	722	;# 
   472   0002D3                     U3CON2          equ	723	;# 
   473   0002D4                     U3BRG           equ	724	;# 
   474   0002D4                     U3BRGL          equ	724	;# 
   475   0002D5                     U3BRGH          equ	725	;# 
   476   0002D6                     U3FIFO          equ	726	;# 
   477   0002D7                     U3UIR           equ	727	;# 
   478   0002D8                     U3ERRIR         equ	728	;# 
   479   0002D9                     U3ERRIE         equ	729	;# 
   480   0002DA                     U4RXB           equ	730	;# 
   481   0002DA                     U4RXBL          equ	730	;# 
   482   0002DC                     U4TXB           equ	732	;# 
   483   0002DC                     U4TXBL          equ	732	;# 
   484   0002DE                     U4P1            equ	734	;# 
   485   0002DE                     U4P1L           equ	734	;# 
   486   0002E0                     U4P2            equ	736	;# 
   487   0002E0                     U4P2L           equ	736	;# 
   488   0002E2                     U4P3            equ	738	;# 
   489   0002E2                     U4P3L           equ	738	;# 
   490   0002E4                     U4CON0          equ	740	;# 
   491   0002E5                     U4CON1          equ	741	;# 
   492   0002E6                     U4CON2          equ	742	;# 
   493   0002E7                     U4BRG           equ	743	;# 
   494   0002E7                     U4BRGL          equ	743	;# 
   495   0002E8                     U4BRGH          equ	744	;# 
   496   0002E9                     U4FIFO          equ	745	;# 
   497   0002EA                     U4UIR           equ	746	;# 
   498   0002EB                     U4ERRIR         equ	747	;# 
   499   0002EC                     U4ERRIE         equ	748	;# 
   500   0002ED                     U5RXB           equ	749	;# 
   501   0002ED                     U5RXBL          equ	749	;# 
   502   0002EF                     U5TXB           equ	751	;# 
   503   0002EF                     U5TXBL          equ	751	;# 
   504   0002F1                     U5P1            equ	753	;# 
   505   0002F1                     U5P1L           equ	753	;# 
   506   0002F3                     U5P2            equ	755	;# 
   507   0002F3                     U5P2L           equ	755	;# 
   508   0002F5                     U5P3            equ	757	;# 
   509   0002F5                     U5P3L           equ	757	;# 
   510   0002F7                     U5CON0          equ	759	;# 
   511   0002F8                     U5CON1          equ	760	;# 
   512   0002F9                     U5CON2          equ	761	;# 
   513   0002FA                     U5BRG           equ	762	;# 
   514   0002FA                     U5BRGL          equ	762	;# 
   515   0002FB                     U5BRGH          equ	763	;# 
   516   0002FC                     U5FIFO          equ	764	;# 
   517   0002FD                     U5UIR           equ	765	;# 
   518   0002FE                     U5ERRIR         equ	766	;# 
   519   0002FF                     U5ERRIE         equ	767	;# 
   520   000300                     SMT1TMR         equ	768	;# 
   521   000300                     SMT1TMRL        equ	768	;# 
   522   000301                     SMT1TMRH        equ	769	;# 
   523   000302                     SMT1TMRU        equ	770	;# 
   524   000303                     SMT1CPR         equ	771	;# 
   525   000303                     SMT1CPRL        equ	771	;# 
   526   000304                     SMT1CPRH        equ	772	;# 
   527   000305                     SMT1CPRU        equ	773	;# 
   528   000306                     SMT1CPW         equ	774	;# 
   529   000306                     SMT1CPWL        equ	774	;# 
   530   000307                     SMT1CPWH        equ	775	;# 
   531   000308                     SMT1CPWU        equ	776	;# 
   532   000309                     SMT1PR          equ	777	;# 
   533   000309                     SMT1PRL         equ	777	;# 
   534   00030A                     SMT1PRH         equ	778	;# 
   535   00030B                     SMT1PRU         equ	779	;# 
   536   00030C                     SMT1CON0        equ	780	;# 
   537   00030D                     SMT1CON1        equ	781	;# 
   538   00030E                     SMT1STAT        equ	782	;# 
   539   00030F                     SMT1CLK         equ	783	;# 
   540   000310                     SMT1SIG         equ	784	;# 
   541   000311                     SMT1WIN         equ	785	;# 
   542   000318                     TMR0L           equ	792	;# 
   543   000318                     TMR0            equ	792	;# 
   544   000319                     TMR0H           equ	793	;# 
   545   000319                     PR0             equ	793	;# 
   546   00031A                     T0CON0          equ	794	;# 
   547   00031B                     T0CON1          equ	795	;# 
   548   00031C                     TMR1            equ	796	;# 
   549   00031C                     TMR1L           equ	796	;# 
   550   00031D                     TMR1H           equ	797	;# 
   551   00031E                     T1CON           equ	798	;# 
   552   00031E                     TMR1CON         equ	798	;# 
   553   00031F                     T1GCON          equ	799	;# 
   554   00031F                     TMR1GCON        equ	799	;# 
   555   000320                     T1GATE          equ	800	;# 
   556   000320                     TMR1GATE        equ	800	;# 
   557   000321                     T1CLK           equ	801	;# 
   558   000321                     TMR1CLK         equ	801	;# 
   559   000321                     PR1             equ	801	;# 
   560   000322                     T2TMR           equ	802	;# 
   561   000322                     TMR2            equ	802	;# 
   562   000323                     T2PR            equ	803	;# 
   563   000323                     PR2             equ	803	;# 
   564   000324                     T2CON           equ	804	;# 
   565   000325                     T2HLT           equ	805	;# 
   566   000326                     T2CLKCON        equ	806	;# 
   567   000326                     T2CLK           equ	806	;# 
   568   000327                     T2RST           equ	807	;# 
   569   000328                     TMR3            equ	808	;# 
   570   000328                     TMR3L           equ	808	;# 
   571   000329                     TMR3H           equ	809	;# 
   572   00032A                     T3CON           equ	810	;# 
   573   00032A                     TMR3CON         equ	810	;# 
   574   00032B                     T3GCON          equ	811	;# 
   575   00032B                     TMR3GCON        equ	811	;# 
   576   00032C                     T3GATE          equ	812	;# 
   577   00032C                     TMR3GATE        equ	812	;# 
   578   00032D                     T3CLK           equ	813	;# 
   579   00032D                     TMR3CLK         equ	813	;# 
   580   00032D                     PR3             equ	813	;# 
   581   00032E                     T4TMR           equ	814	;# 
   582   00032E                     TMR4            equ	814	;# 
   583   00032F                     T4PR            equ	815	;# 
   584   00032F                     PR4             equ	815	;# 
   585   000330                     T4CON           equ	816	;# 
   586   000331                     T4HLT           equ	817	;# 
   587   000332                     T4CLKCON        equ	818	;# 
   588   000332                     T4CLK           equ	818	;# 
   589   000333                     T4RST           equ	819	;# 
   590   000334                     TMR5            equ	820	;# 
   591   000334                     TMR5L           equ	820	;# 
   592   000335                     TMR5H           equ	821	;# 
   593   000336                     T5CON           equ	822	;# 
   594   000336                     TMR5CON         equ	822	;# 
   595   000337                     T5GCON          equ	823	;# 
   596   000337                     TMR5GCON        equ	823	;# 
   597   000338                     T5GATE          equ	824	;# 
   598   000338                     TMR5GATE        equ	824	;# 
   599   000339                     T5CLK           equ	825	;# 
   600   000339                     TMR5CLK         equ	825	;# 
   601   000339                     PR5             equ	825	;# 
   602   00033A                     T6TMR           equ	826	;# 
   603   00033A                     TMR6            equ	826	;# 
   604   00033B                     T6PR            equ	827	;# 
   605   00033B                     PR6             equ	827	;# 
   606   00033C                     T6CON           equ	828	;# 
   607   00033D                     T6HLT           equ	829	;# 
   608   00033E                     T6CLKCON        equ	830	;# 
   609   00033E                     T6CLK           equ	830	;# 
   610   00033F                     T6RST           equ	831	;# 
   611   000340                     CCPR1           equ	832	;# 
   612   000340                     CCPR1L          equ	832	;# 
   613   000341                     CCPR1H          equ	833	;# 
   614   000342                     CCP1CON         equ	834	;# 
   615   000343                     CCP1CAP         equ	835	;# 
   616   000344                     CCPR2           equ	836	;# 
   617   000344                     CCPR2L          equ	836	;# 
   618   000345                     CCPR2H          equ	837	;# 
   619   000346                     CCP2CON         equ	838	;# 
   620   000347                     CCP2CAP         equ	839	;# 
   621   000348                     CCPR3           equ	840	;# 
   622   000348                     CCPR3L          equ	840	;# 
   623   000349                     CCPR3H          equ	841	;# 
   624   00034A                     CCP3CON         equ	842	;# 
   625   00034B                     CCP3CAP         equ	843	;# 
   626   00034C                     CCPTMRS0        equ	844	;# 
   627   00034F                     CRCDATA         equ	847	;# 
   628   00034F                     CRCDATL         equ	847	;# 
   629   000350                     CRCDATH         equ	848	;# 
   630   000351                     CRCACC          equ	849	;# 
   631   000351                     CRCACCL         equ	849	;# 
   632   000352                     CRCACCH         equ	850	;# 
   633   000353                     CRCSHFT         equ	851	;# 
   634   000353                     CRCSHIFTL       equ	851	;# 
   635   000354                     CRCSHIFTH       equ	852	;# 
   636   000355                     CRCXOR          equ	853	;# 
   637   000355                     CRCXORL         equ	853	;# 
   638   000356                     CRCXORH         equ	854	;# 
   639   000357                     CRCCON0         equ	855	;# 
   640   000358                     CRCCON1         equ	856	;# 
   641   00035A                     SCANLADR        equ	858	;# 
   642   00035A                     SCANLADRL       equ	858	;# 
   643   00035B                     SCANLADRH       equ	859	;# 
   644   00035C                     SCANLADRU       equ	860	;# 
   645   00035D                     SCANHADR        equ	861	;# 
   646   00035D                     SCANHADRL       equ	861	;# 
   647   00035E                     SCANHADRH       equ	862	;# 
   648   00035F                     SCANHADRU       equ	863	;# 
   649   000360                     SCANCON0        equ	864	;# 
   650   000361                     SCANTRIG        equ	865	;# 
   651   000362                     IPR0            equ	866	;# 
   652   000363                     IPR1            equ	867	;# 
   653   000364                     IPR2            equ	868	;# 
   654   000365                     IPR3            equ	869	;# 
   655   000366                     IPR4            equ	870	;# 
   656   000367                     IPR5            equ	871	;# 
   657   000368                     IPR6            equ	872	;# 
   658   000369                     IPR7            equ	873	;# 
   659   00036A                     IPR8            equ	874	;# 
   660   00036B                     IPR9            equ	875	;# 
   661   00036C                     IPR10           equ	876	;# 
   662   00036D                     IPR11           equ	877	;# 
   663   00036E                     IPR12           equ	878	;# 
   664   00036F                     IPR13           equ	879	;# 
   665   000370                     IPR14           equ	880	;# 
   666   000371                     IPR15           equ	881	;# 
   667   000373                     STATUS_CSHAD    equ	883	;# 
   668   000374                     WREG_CSHAD      equ	884	;# 
   669   000375                     BSR_CSHAD       equ	885	;# 
   670   000376                     SHADCON         equ	886	;# 
   671   000377                     STATUS_SHAD     equ	887	;# 
   672   000378                     WREG_SHAD       equ	888	;# 
   673   000379                     BSR_SHAD        equ	889	;# 
   674   00037A                     PCLATH_SHAD     equ	890	;# 
   675   00037B                     PCLATU_SHAD     equ	891	;# 
   676   00037C                     FSR0SH          equ	892	;# 
   677   00037C                     FSR0L_SHAD      equ	892	;# 
   678   00037D                     FSR0H_SHAD      equ	893	;# 
   679   00037E                     FSR1SH          equ	894	;# 
   680   00037E                     FSR1L_SHAD      equ	894	;# 
   681   00037F                     FSR1H_SHAD      equ	895	;# 
   682   000380                     FSR2SH          equ	896	;# 
   683   000380                     FSR2L_SHAD      equ	896	;# 
   684   000381                     FSR2H_SHAD      equ	897	;# 
   685   000382                     PRODSH          equ	898	;# 
   686   000382                     PRODL_SHAD      equ	898	;# 
   687   000383                     PRODH_SHAD      equ	899	;# 
   688   0003BC                     CWG1CLK         equ	956	;# 
   689   0003BC                     CWG1CLKCON      equ	956	;# 
   690   0003BD                     CWG1ISM         equ	957	;# 
   691   0003BD                     CWG1DAT         equ	957	;# 
   692   0003BE                     CWG1DBR         equ	958	;# 
   693   0003BF                     CWG1DBF         equ	959	;# 
   694   0003C0                     CWG1CON0        equ	960	;# 
   695   0003C1                     CWG1CON1        equ	961	;# 
   696   0003C2                     CWG1AS0         equ	962	;# 
   697   0003C3                     CWG1AS1         equ	963	;# 
   698   0003C4                     CWG1STR         equ	964	;# 
   699   0003C5                     CWG2CLK         equ	965	;# 
   700   0003C5                     CWG2CLKCON      equ	965	;# 
   701   0003C6                     CWG2ISM         equ	966	;# 
   702   0003C6                     CWG2DAT         equ	966	;# 
   703   0003C7                     CWG2DBR         equ	967	;# 
   704   0003C8                     CWG2DBF         equ	968	;# 
   705   0003C9                     CWG2CON0        equ	969	;# 
   706   0003CA                     CWG2CON1        equ	970	;# 
   707   0003CB                     CWG2AS0         equ	971	;# 
   708   0003CC                     CWG2AS1         equ	972	;# 
   709   0003CD                     CWG2STR         equ	973	;# 
   710   0003CE                     CWG3CLK         equ	974	;# 
   711   0003CE                     CWG3CLKCON      equ	974	;# 
   712   0003CF                     CWG3ISM         equ	975	;# 
   713   0003CF                     CWG3DAT         equ	975	;# 
   714   0003D0                     CWG3DBR         equ	976	;# 
   715   0003D1                     CWG3DBF         equ	977	;# 
   716   0003D2                     CWG3CON0        equ	978	;# 
   717   0003D3                     CWG3CON1        equ	979	;# 
   718   0003D4                     CWG3AS0         equ	980	;# 
   719   0003D5                     CWG3AS1         equ	981	;# 
   720   0003D6                     CWG3STR         equ	982	;# 
   721   0003D7                     FVRCON          equ	983	;# 
   722   0003D8                     ADCPCON         equ	984	;# 
   723   0003D8                     ADCP            equ	984	;# 
   724   0003D9                     ADLTH           equ	985	;# 
   725   0003D9                     ADLTHL          equ	985	;# 
   726   0003DA                     ADLTHH          equ	986	;# 
   727   0003DB                     ADUTH           equ	987	;# 
   728   0003DB                     ADUTHL          equ	987	;# 
   729   0003DC                     ADUTHH          equ	988	;# 
   730   0003DD                     ADERR           equ	989	;# 
   731   0003DD                     ADERRL          equ	989	;# 
   732   0003DE                     ADERRH          equ	990	;# 
   733   0003DF                     ADSTPT          equ	991	;# 
   734   0003DF                     ADSTPTL         equ	991	;# 
   735   0003E0                     ADSTPTH         equ	992	;# 
   736   0003E1                     ADFLTR          equ	993	;# 
   737   0003E1                     ADFLTRL         equ	993	;# 
   738   0003E2                     ADFLTRH         equ	994	;# 
   739   0003E3                     ADACC           equ	995	;# 
   740   0003E3                     ADACCL          equ	995	;# 
   741   0003E4                     ADACCH          equ	996	;# 
   742   0003E5                     ADACCU          equ	997	;# 
   743   0003E6                     ADCNT           equ	998	;# 
   744   0003E7                     ADRPT           equ	999	;# 
   745   0003E8                     ADPREV          equ	1000	;# 
   746   0003E8                     ADPREVL         equ	1000	;# 
   747   0003E9                     ADPREVH         equ	1001	;# 
   748   0003EA                     ADRES           equ	1002	;# 
   749   0003EA                     ADRESL          equ	1002	;# 
   750   0003EB                     ADRESH          equ	1003	;# 
   751   0003EC                     ADPCH           equ	1004	;# 
   752   0003EE                     ADACQ           equ	1006	;# 
   753   0003EE                     ADACQL          equ	1006	;# 
   754   0003EF                     ADACQH          equ	1007	;# 
   755   0003F0                     ADCAP           equ	1008	;# 
   756   0003F1                     ADPRE           equ	1009	;# 
   757   0003F1                     ADPREL          equ	1009	;# 
   758   0003F2                     ADPREH          equ	1010	;# 
   759   0003F3                     ADCON0          equ	1011	;# 
   760   0003F4                     ADCON1          equ	1012	;# 
   761   0003F5                     ADCON2          equ	1013	;# 
   762   0003F6                     ADCON3          equ	1014	;# 
   763   0003F7                     ADSTAT          equ	1015	;# 
   764   0003F8                     ADREF           equ	1016	;# 
   765   0003F9                     ADACT           equ	1017	;# 
   766   0003FA                     ADCLK           equ	1018	;# 
   767   000400                     ANSELA          equ	1024	;# 
   768   000401                     WPUA            equ	1025	;# 
   769   000402                     ODCONA          equ	1026	;# 
   770   000403                     SLRCONA         equ	1027	;# 
   771   000404                     INLVLA          equ	1028	;# 
   772   000405                     IOCAP           equ	1029	;# 
   773   000406                     IOCAN           equ	1030	;# 
   774   000407                     IOCAF           equ	1031	;# 
   775   000408                     ANSELB          equ	1032	;# 
   776   000409                     WPUB            equ	1033	;# 
   777   00040A                     ODCONB          equ	1034	;# 
   778   00040B                     SLRCONB         equ	1035	;# 
   779   00040C                     INLVLB          equ	1036	;# 
   780   00040D                     IOCBP           equ	1037	;# 
   781   00040E                     IOCBN           equ	1038	;# 
   782   00040F                     IOCBF           equ	1039	;# 
   783   000410                     ANSELC          equ	1040	;# 
   784   000411                     WPUC            equ	1041	;# 
   785   000412                     ODCONC          equ	1042	;# 
   786   000413                     SLRCONC         equ	1043	;# 
   787   000414                     INLVLC          equ	1044	;# 
   788   000415                     IOCCP           equ	1045	;# 
   789   000416                     IOCCN           equ	1046	;# 
   790   000417                     IOCCF           equ	1047	;# 
   791   000418                     ANSELD          equ	1048	;# 
   792   000419                     WPUD            equ	1049	;# 
   793   00041A                     ODCOND          equ	1050	;# 
   794   00041B                     SLRCOND         equ	1051	;# 
   795   00041C                     INLVLD          equ	1052	;# 
   796   000420                     ANSELE          equ	1056	;# 
   797   000421                     WPUE            equ	1057	;# 
   798   000422                     ODCONE          equ	1058	;# 
   799   000423                     SLRCONE         equ	1059	;# 
   800   000424                     INLVLE          equ	1060	;# 
   801   000425                     IOCEP           equ	1061	;# 
   802   000426                     IOCEN           equ	1062	;# 
   803   000427                     IOCEF           equ	1063	;# 
   804   000428                     ANSELF          equ	1064	;# 
   805   000429                     WPUF            equ	1065	;# 
   806   00042A                     ODCONF          equ	1066	;# 
   807   00042B                     SLRCONF         equ	1067	;# 
   808   00042C                     INLVLF          equ	1068	;# 
   809   000440                     NCO1ACC         equ	1088	;# 
   810   000440                     NCO1ACCL        equ	1088	;# 
   811   000441                     NCO1ACCH        equ	1089	;# 
   812   000442                     NCO1ACCU        equ	1090	;# 
   813   000443                     NCO1INC         equ	1091	;# 
   814   000443                     NCO1INCL        equ	1091	;# 
   815   000444                     NCO1INCH        equ	1092	;# 
   816   000445                     NCO1INCU        equ	1093	;# 
   817   000446                     NCO1CON         equ	1094	;# 
   818   000447                     NCO1CLK         equ	1095	;# 
   819   000448                     NCO2ACC         equ	1096	;# 
   820   000448                     NCO2ACCL        equ	1096	;# 
   821   000449                     NCO2ACCH        equ	1097	;# 
   822   00044A                     NCO2ACCU        equ	1098	;# 
   823   00044B                     NCO2INC         equ	1099	;# 
   824   00044B                     NCO2INCL        equ	1099	;# 
   825   00044C                     NCO2INCH        equ	1100	;# 
   826   00044D                     NCO2INCU        equ	1101	;# 
   827   00044E                     NCO2CON         equ	1102	;# 
   828   00044F                     NCO2CLK         equ	1103	;# 
   829   000450                     NCO3ACC         equ	1104	;# 
   830   000450                     NCO3ACCL        equ	1104	;# 
   831   000451                     NCO3ACCH        equ	1105	;# 
   832   000452                     NCO3ACCU        equ	1106	;# 
   833   000453                     NCO3INC         equ	1107	;# 
   834   000453                     NCO3INCL        equ	1107	;# 
   835   000454                     NCO3INCH        equ	1108	;# 
   836   000455                     NCO3INCU        equ	1109	;# 
   837   000456                     NCO3CON         equ	1110	;# 
   838   000457                     NCO3CLK         equ	1111	;# 
   839   000459                     IVTLOCK         equ	1113	;# 
   840   00045A                     IVTAD           equ	1114	;# 
   841   00045A                     IVTADL          equ	1114	;# 
   842   00045B                     IVTADH          equ	1115	;# 
   843   00045C                     IVTADU          equ	1116	;# 
   844   00045D                     IVTBASE         equ	1117	;# 
   845   00045D                     IVTBASEL        equ	1117	;# 
   846   00045E                     IVTBASEH        equ	1118	;# 
   847   00045F                     IVTBASEU        equ	1119	;# 
   848   000460                     PWM1ERS         equ	1120	;# 
   849   000461                     PWM1CLK         equ	1121	;# 
   850   000462                     PWM1LDS         equ	1122	;# 
   851   000463                     PWM1PR          equ	1123	;# 
   852   000463                     PWM1PRL         equ	1123	;# 
   853   000464                     PWM1PRH         equ	1124	;# 
   854   000465                     PWM1CPRE        equ	1125	;# 
   855   000466                     PWM1PIPOS       equ	1126	;# 
   856   000467                     PWM1GIR         equ	1127	;# 
   857   000468                     PWM1GIE         equ	1128	;# 
   858   000469                     PWM1CON         equ	1129	;# 
   859   00046A                     PWM1S1CFG       equ	1130	;# 
   860   00046B                     PWM1S1P1        equ	1131	;# 
   861   00046B                     PWM1S1P1L       equ	1131	;# 
   862   00046C                     PWM1S1P1H       equ	1132	;# 
   863   00046D                     PWM1S1P2        equ	1133	;# 
   864   00046D                     PWM1S1P2L       equ	1133	;# 
   865   00046E                     PWM1S1P2H       equ	1134	;# 
   866   00046F                     PWM2ERS         equ	1135	;# 
   867   000470                     PWM2CLK         equ	1136	;# 
   868   000471                     PWM2LDS         equ	1137	;# 
   869   000472                     PWM2PR          equ	1138	;# 
   870   000472                     PWM2PRL         equ	1138	;# 
   871   000473                     PWM2PRH         equ	1139	;# 
   872   000474                     PWM2CPRE        equ	1140	;# 
   873   000475                     PWM2PIPOS       equ	1141	;# 
   874   000476                     PWM2GIR         equ	1142	;# 
   875   000477                     PWM2GIE         equ	1143	;# 
   876   000478                     PWM2CON         equ	1144	;# 
   877   000479                     PWM2S1CFG       equ	1145	;# 
   878   00047A                     PWM2S1P1        equ	1146	;# 
   879   00047A                     PWM2S1P1L       equ	1146	;# 
   880   00047B                     PWM2S1P1H       equ	1147	;# 
   881   00047C                     PWM2S1P2        equ	1148	;# 
   882   00047C                     PWM2S1P2L       equ	1148	;# 
   883   00047D                     PWM2S1P2H       equ	1149	;# 
   884   00047E                     PWM3ERS         equ	1150	;# 
   885   00047F                     PWM3CLK         equ	1151	;# 
   886   000480                     PWM3LDS         equ	1152	;# 
   887   000481                     PWM3PR          equ	1153	;# 
   888   000481                     PWM3PRL         equ	1153	;# 
   889   000482                     PWM3PRH         equ	1154	;# 
   890   000483                     PWM3CPRE        equ	1155	;# 
   891   000484                     PWM3PIPOS       equ	1156	;# 
   892   000485                     PWM3GIR         equ	1157	;# 
   893   000486                     PWM3GIE         equ	1158	;# 
   894   000487                     PWM3CON         equ	1159	;# 
   895   000488                     PWM3S1CFG       equ	1160	;# 
   896   000489                     PWM3S1P1        equ	1161	;# 
   897   000489                     PWM3S1P1L       equ	1161	;# 
   898   00048A                     PWM3S1P1H       equ	1162	;# 
   899   00048B                     PWM3S1P2        equ	1163	;# 
   900   00048B                     PWM3S1P2L       equ	1163	;# 
   901   00048C                     PWM3S1P2H       equ	1164	;# 
   902   00049C                     PWMLOAD         equ	1180	;# 
   903   00049D                     PWMEN           equ	1181	;# 
   904   00049E                     PIE0            equ	1182	;# 
   905   00049F                     PIE1            equ	1183	;# 
   906   0004A0                     PIE2            equ	1184	;# 
   907   0004A1                     PIE3            equ	1185	;# 
   908   0004A2                     PIE4            equ	1186	;# 
   909   0004A3                     PIE5            equ	1187	;# 
   910   0004A4                     PIE6            equ	1188	;# 
   911   0004A5                     PIE7            equ	1189	;# 
   912   0004A6                     PIE8            equ	1190	;# 
   913   0004A7                     PIE9            equ	1191	;# 
   914   0004A8                     PIE10           equ	1192	;# 
   915   0004A9                     PIE11           equ	1193	;# 
   916   0004AA                     PIE12           equ	1194	;# 
   917   0004AB                     PIE13           equ	1195	;# 
   918   0004AC                     PIE14           equ	1196	;# 
   919   0004AD                     PIE15           equ	1197	;# 
   920   0004AE                     PIR0            equ	1198	;# 
   921   0004AF                     PIR1            equ	1199	;# 
   922   0004B0                     PIR2            equ	1200	;# 
   923   0004B1                     PIR3            equ	1201	;# 
   924   0004B2                     PIR4            equ	1202	;# 
   925   0004B3                     PIR5            equ	1203	;# 
   926   0004B4                     PIR6            equ	1204	;# 
   927   0004B5                     PIR7            equ	1205	;# 
   928   0004B6                     PIR8            equ	1206	;# 
   929   0004B7                     PIR9            equ	1207	;# 
   930   0004B8                     PIR10           equ	1208	;# 
   931   0004B9                     PIR11           equ	1209	;# 
   932   0004BA                     PIR12           equ	1210	;# 
   933   0004BB                     PIR13           equ	1211	;# 
   934   0004BC                     PIR14           equ	1212	;# 
   935   0004BD                     PIR15           equ	1213	;# 
   936   0004BE                     LATA            equ	1214	;# 
   937   0004BF                     LATB            equ	1215	;# 
   938   0004C0                     LATC            equ	1216	;# 
   939   0004C1                     LATD            equ	1217	;# 
   940   0004C2                     LATE            equ	1218	;# 
   941   0004C3                     LATF            equ	1219	;# 
   942   0004C6                     TRISA           equ	1222	;# 
   943   0004C7                     TRISB           equ	1223	;# 
   944   0004C8                     TRISC           equ	1224	;# 
   945   0004C9                     TRISD           equ	1225	;# 
   946   0004CA                     TRISE           equ	1226	;# 
   947   0004CB                     TRISF           equ	1227	;# 
   948   0004CE                     PORTA           equ	1230	;# 
   949   0004CF                     PORTB           equ	1231	;# 
   950   0004D0                     PORTC           equ	1232	;# 
   951   0004D1                     PORTD           equ	1233	;# 
   952   0004D2                     PORTE           equ	1234	;# 
   953   0004D3                     PORTF           equ	1235	;# 
   954   0004D6                     INTCON0         equ	1238	;# 
   955   0004D7                     INTCON1         equ	1239	;# 
   956   0004D8                     STATUS          equ	1240	;# 
   957   0004D9                     FSR2            equ	1241	;# 
   958   0004D9                     FSR2L           equ	1241	;# 
   959   0004DA                     FSR2H           equ	1242	;# 
   960   0004DB                     PLUSW2          equ	1243	;# 
   961   0004DC                     PREINC2         equ	1244	;# 
   962   0004DD                     POSTDEC2        equ	1245	;# 
   963   0004DE                     POSTINC2        equ	1246	;# 
   964   0004DF                     INDF2           equ	1247	;# 
   965   0004E0                     BSR             equ	1248	;# 
   966   0004E1                     FSR1            equ	1249	;# 
   967   0004E1                     FSR1L           equ	1249	;# 
   968   0004E2                     FSR1H           equ	1250	;# 
   969   0004E3                     PLUSW1          equ	1251	;# 
   970   0004E4                     PREINC1         equ	1252	;# 
   971   0004E5                     POSTDEC1        equ	1253	;# 
   972   0004E6                     POSTINC1        equ	1254	;# 
   973   0004E7                     INDF1           equ	1255	;# 
   974   0004E8                     WREG            equ	1256	;# 
   975   0004E9                     FSR0            equ	1257	;# 
   976   0004E9                     FSR0L           equ	1257	;# 
   977   0004EA                     FSR0H           equ	1258	;# 
   978   0004EB                     PLUSW0          equ	1259	;# 
   979   0004EC                     PREINC0         equ	1260	;# 
   980   0004ED                     POSTDEC0        equ	1261	;# 
   981   0004EE                     POSTINC0        equ	1262	;# 
   982   0004EF                     INDF0           equ	1263	;# 
   983   0004F0                     PCON0           equ	1264	;# 
   984   0004F1                     PCON1           equ	1265	;# 
   985   0004F2                     CPUDOZE         equ	1266	;# 
   986   0004F3                     PROD            equ	1267	;# 
   987   0004F3                     PRODL           equ	1267	;# 
   988   0004F4                     PRODH           equ	1268	;# 
   989   0004F5                     TABLAT          equ	1269	;# 
   990   0004F6                     TBLPTR          equ	1270	;# 
   991   0004F6                     TBLPTRL         equ	1270	;# 
   992   0004F7                     TBLPTRH         equ	1271	;# 
   993   0004F8                     TBLPTRU         equ	1272	;# 
   994   0004F9                     PCLAT           equ	1273	;# 
   995   0004F9                     PCL             equ	1273	;# 
   996   0004FA                     PCLATH          equ	1274	;# 
   997   0004FB                     PCLATU          equ	1275	;# 
   998   0004FC                     STKPTR          equ	1276	;# 
   999   0004FD                     TOS             equ	1277	;# 
  1000   0004FD                     TOSL            equ	1277	;# 
  1001   0004FE                     TOSH            equ	1278	;# 
  1002   0004FF                     TOSU            equ	1279	;# 
  1003   000039                     CLKRCON         equ	57	;# 
  1004   00003A                     CLKRCLK         equ	58	;# 
  1005   000040                     NVMCON0         equ	64	;# 
  1006   000041                     NVMCON1         equ	65	;# 
  1007   000042                     NVMLOCK         equ	66	;# 
  1008   000043                     NVMADR          equ	67	;# 
  1009   000043                     NVMADRL         equ	67	;# 
  1010   000044                     NVMADRH         equ	68	;# 
  1011   000045                     NVMADRU         equ	69	;# 
  1012   000046                     NVMDAT          equ	70	;# 
  1013   000046                     NVMDATL         equ	70	;# 
  1014   000047                     NVMDATH         equ	71	;# 
  1015   000048                     VREGCON         equ	72	;# 
  1016   000049                     BORCON          equ	73	;# 
  1017   00004A                     HLVDCON0        equ	74	;# 
  1018   00004B                     HLVDCON1        equ	75	;# 
  1019   00004C                     ZCDCON          equ	76	;# 
  1020   000060                     PMD0            equ	96	;# 
  1021   000061                     PMD1            equ	97	;# 
  1022   000063                     PMD3            equ	99	;# 
  1023   000064                     PMD4            equ	100	;# 
  1024   000065                     PMD5            equ	101	;# 
  1025   000066                     PMD6            equ	102	;# 
  1026   000067                     PMD7            equ	103	;# 
  1027   000068                     PMD8            equ	104	;# 
  1028   00006A                     MD1CON0         equ	106	;# 
  1029   00006B                     MD1CON1         equ	107	;# 
  1030   00006C                     MD1SRC          equ	108	;# 
  1031   00006D                     MD1CARL         equ	109	;# 
  1032   00006E                     MD1CARH         equ	110	;# 
  1033   00006F                     CMOUT           equ	111	;# 
  1034   000070                     CM1CON0         equ	112	;# 
  1035   000071                     CM1CON1         equ	113	;# 
  1036   000072                     CM1NCH          equ	114	;# 
  1037   000073                     CM1PCH          equ	115	;# 
  1038   000074                     CM2CON0         equ	116	;# 
  1039   000075                     CM2CON1         equ	117	;# 
  1040   000076                     CM2NCH          equ	118	;# 
  1041   000077                     CM2PCH          equ	119	;# 
  1042   000078                     WDTCON0         equ	120	;# 
  1043   000079                     WDTCON1         equ	121	;# 
  1044   00007A                     WDTPS           equ	122	;# 
  1045   00007A                     WDTPSL          equ	122	;# 
  1046   00007B                     WDTPSH          equ	123	;# 
  1047   00007C                     WDTTMR          equ	124	;# 
  1048   00007D                     DAC1DAT         equ	125	;# 
  1049   00007D                     DAC1DATL        equ	125	;# 
  1050   00007F                     DAC1CON         equ	127	;# 
  1051   000080                     SPI1RXB         equ	128	;# 
  1052   000081                     SPI1TXB         equ	129	;# 
  1053   000082                     SPI1TCNT        equ	130	;# 
  1054   000082                     SPI1TCNTL       equ	130	;# 
  1055   000083                     SPI1TCNTH       equ	131	;# 
  1056   000084                     SPI1CON0        equ	132	;# 
  1057   000085                     SPI1CON1        equ	133	;# 
  1058   000086                     SPI1CON2        equ	134	;# 
  1059   000087                     SPI1STATUS      equ	135	;# 
  1060   000088                     SPI1TWIDTH      equ	136	;# 
  1061   000089                     SPI1BAUD        equ	137	;# 
  1062   00008A                     SPI1INTF        equ	138	;# 
  1063   00008B                     SPI1INTE        equ	139	;# 
  1064   00008C                     SPI1CLK         equ	140	;# 
  1065   00008D                     SPI2RXB         equ	141	;# 
  1066   00008E                     SPI2TXB         equ	142	;# 
  1067   00008F                     SPI2TCNT        equ	143	;# 
  1068   00008F                     SPI2TCNTL       equ	143	;# 
  1069   000090                     SPI2TCNTH       equ	144	;# 
  1070   000091                     SPI2CON0        equ	145	;# 
  1071   000092                     SPI2CON1        equ	146	;# 
  1072   000093                     SPI2CON2        equ	147	;# 
  1073   000094                     SPI2STATUS      equ	148	;# 
  1074   000095                     SPI2TWIDTH      equ	149	;# 
  1075   000096                     SPI2BAUD        equ	150	;# 
  1076   000097                     SPI2INTF        equ	151	;# 
  1077   000098                     SPI2INTE        equ	152	;# 
  1078   000099                     SPI2CLK         equ	153	;# 
  1079   0000AC                     ACTCON          equ	172	;# 
  1080   0000AD                     OSCCON1         equ	173	;# 
  1081   0000AE                     OSCCON2         equ	174	;# 
  1082   0000AF                     OSCCON3         equ	175	;# 
  1083   0000B0                     OSCTUNE         equ	176	;# 
  1084   0000B1                     OSCFRQ          equ	177	;# 
  1085   0000B1                     OSCFREQ         equ	177	;# 
  1086   0000B2                     OSCSTAT         equ	178	;# 
  1087   0000B2                     OSCSTAT1        equ	178	;# 
  1088   0000B3                     OSCEN           equ	179	;# 
  1089   0000B4                     PRLOCK          equ	180	;# 
  1090   0000B5                     SCANPR          equ	181	;# 
  1091   0000B6                     DMA1PR          equ	182	;# 
  1092   0000B7                     DMA2PR          equ	183	;# 
  1093   0000B8                     DMA3PR          equ	184	;# 
  1094   0000B9                     DMA4PR          equ	185	;# 
  1095   0000BA                     DMA5PR          equ	186	;# 
  1096   0000BB                     DMA6PR          equ	187	;# 
  1097   0000BE                     MAINPR          equ	190	;# 
  1098   0000BF                     ISRPR           equ	191	;# 
  1099   0000D4                     CLCDATA         equ	212	;# 
  1100   0000D5                     CLCSELECT       equ	213	;# 
  1101   0000D6                     CLCnCON         equ	214	;# 
  1102   0000D7                     CLCnPOL         equ	215	;# 
  1103   0000D8                     CLCnSEL0        equ	216	;# 
  1104   0000D9                     CLCnSEL1        equ	217	;# 
  1105   0000DA                     CLCnSEL2        equ	218	;# 
  1106   0000DB                     CLCnSEL3        equ	219	;# 
  1107   0000DC                     CLCnGLS0        equ	220	;# 
  1108   0000DD                     CLCnGLS1        equ	221	;# 
  1109   0000DE                     CLCnGLS2        equ	222	;# 
  1110   0000DF                     CLCnGLS3        equ	223	;# 
  1111   0000E8                     DMASELECT       equ	232	;# 
  1112   0000E9                     DMAnBUF         equ	233	;# 
  1113   0000EA                     DMAnDCNT        equ	234	;# 
  1114   0000EA                     DMAnDCNTL       equ	234	;# 
  1115   0000EB                     DMAnDCNTH       equ	235	;# 
  1116   0000EC                     DMAnDPTR        equ	236	;# 
  1117   0000EC                     DMAnDPTRL       equ	236	;# 
  1118   0000ED                     DMAnDPTRH       equ	237	;# 
  1119   0000EE                     DMAnDSZ         equ	238	;# 
  1120   0000EE                     DMAnDSZL        equ	238	;# 
  1121   0000EF                     DMAnDSZH        equ	239	;# 
  1122   0000F0                     DMAnDSA         equ	240	;# 
  1123   0000F0                     DMAnDSAL        equ	240	;# 
  1124   0000F1                     DMAnDSAH        equ	241	;# 
  1125   0000F2                     DMAnSCNT        equ	242	;# 
  1126   0000F2                     DMAnSCNTL       equ	242	;# 
  1127   0000F3                     DMAnSCNTH       equ	243	;# 
  1128   0000F4                     DMAnSPTR        equ	244	;# 
  1129   0000F4                     DMAnSPTRL       equ	244	;# 
  1130   0000F5                     DMAnSPTRH       equ	245	;# 
  1131   0000F6                     DMAnSPTRU       equ	246	;# 
  1132   0000F7                     DMAnSSZ         equ	247	;# 
  1133   0000F7                     DMAnSSZL        equ	247	;# 
  1134   0000F8                     DMAnSSZH        equ	248	;# 
  1135   0000F9                     DMAnSSA         equ	249	;# 
  1136   0000F9                     DMAnSSAL        equ	249	;# 
  1137   0000FA                     DMAnSSAH        equ	250	;# 
  1138   0000FB                     DMAnSSAU        equ	251	;# 
  1139   0000FC                     DMAnCON0        equ	252	;# 
  1140   0000FD                     DMAnCON1        equ	253	;# 
  1141   0000FE                     DMAnAIRQ        equ	254	;# 
  1142   0000FF                     DMAnSIRQ        equ	255	;# 
  1143   000200                     PPSLOCK         equ	512	;# 
  1144   000201                     RA0PPS          equ	513	;# 
  1145   000202                     RA1PPS          equ	514	;# 
  1146   000203                     RA2PPS          equ	515	;# 
  1147   000204                     RA3PPS          equ	516	;# 
  1148   000205                     RA4PPS          equ	517	;# 
  1149   000206                     RA5PPS          equ	518	;# 
  1150   000207                     RA6PPS          equ	519	;# 
  1151   000208                     RA7PPS          equ	520	;# 
  1152   000209                     RB0PPS          equ	521	;# 
  1153   00020A                     RB1PPS          equ	522	;# 
  1154   00020B                     RB2PPS          equ	523	;# 
  1155   00020C                     RB3PPS          equ	524	;# 
  1156   00020D                     RB4PPS          equ	525	;# 
  1157   00020E                     RB5PPS          equ	526	;# 
  1158   00020F                     RB6PPS          equ	527	;# 
  1159   000210                     RB7PPS          equ	528	;# 
  1160   000211                     RC0PPS          equ	529	;# 
  1161   000212                     RC1PPS          equ	530	;# 
  1162   000213                     RC2PPS          equ	531	;# 
  1163   000214                     RC3PPS          equ	532	;# 
  1164   000215                     RC4PPS          equ	533	;# 
  1165   000216                     RC5PPS          equ	534	;# 
  1166   000217                     RC6PPS          equ	535	;# 
  1167   000218                     RC7PPS          equ	536	;# 
  1168   000219                     RD0PPS          equ	537	;# 
  1169   00021A                     RD1PPS          equ	538	;# 
  1170   00021B                     RD2PPS          equ	539	;# 
  1171   00021C                     RD3PPS          equ	540	;# 
  1172   00021D                     RD4PPS          equ	541	;# 
  1173   00021E                     RD5PPS          equ	542	;# 
  1174   00021F                     RD6PPS          equ	543	;# 
  1175   000220                     RD7PPS          equ	544	;# 
  1176   000221                     RE0PPS          equ	545	;# 
  1177   000222                     RE1PPS          equ	546	;# 
  1178   000223                     RE2PPS          equ	547	;# 
  1179   000229                     RF0PPS          equ	553	;# 
  1180   00022A                     RF1PPS          equ	554	;# 
  1181   00022B                     RF2PPS          equ	555	;# 
  1182   00022C                     RF3PPS          equ	556	;# 
  1183   00022D                     RF4PPS          equ	557	;# 
  1184   00022E                     RF5PPS          equ	558	;# 
  1185   00022F                     RF6PPS          equ	559	;# 
  1186   000230                     RF7PPS          equ	560	;# 
  1187   00023E                     INT0PPS         equ	574	;# 
  1188   00023F                     INT1PPS         equ	575	;# 
  1189   000240                     INT2PPS         equ	576	;# 
  1190   000241                     T0CKIPPS        equ	577	;# 
  1191   000242                     T1CKIPPS        equ	578	;# 
  1192   000243                     T1GPPS          equ	579	;# 
  1193   000244                     T3CKIPPS        equ	580	;# 
  1194   000245                     T3GPPS          equ	581	;# 
  1195   000246                     T5CKIPPS        equ	582	;# 
  1196   000247                     T5GPPS          equ	583	;# 
  1197   000248                     T2INPPS         equ	584	;# 
  1198   000249                     T4INPPS         equ	585	;# 
  1199   00024A                     T6INPPS         equ	586	;# 
  1200   00024F                     CCP1PPS         equ	591	;# 
  1201   000250                     CCP2PPS         equ	592	;# 
  1202   000251                     CCP3PPS         equ	593	;# 
  1203   000253                     PWM1ERSPPS      equ	595	;# 
  1204   000254                     PWM2ERSPPS      equ	596	;# 
  1205   000255                     PWM3ERSPPS      equ	597	;# 
  1206   000257                     PWMIN0PPS       equ	599	;# 
  1207   000258                     PWMIN1PPS       equ	600	;# 
  1208   000259                     SMT1WINPPS      equ	601	;# 
  1209   00025A                     SMT1SIGPPS      equ	602	;# 
  1210   00025B                     CWG1PPS         equ	603	;# 
  1211   00025B                     CWG1INPPS       equ	603	;# 
  1212   00025C                     CWG2PPS         equ	604	;# 
  1213   00025C                     CWG2INPPS       equ	604	;# 
  1214   00025D                     CWG3PPS         equ	605	;# 
  1215   00025D                     CWG3INPPS       equ	605	;# 
  1216   00025E                     MD1CARLPPS      equ	606	;# 
  1217   00025E                     MDCARLPPS       equ	606	;# 
  1218   00025F                     MD1CARHPPS      equ	607	;# 
  1219   00025F                     MDCARHPPS       equ	607	;# 
  1220   000260                     MD1SRCPPS       equ	608	;# 
  1221   000260                     MDSRCPPS        equ	608	;# 
  1222   000261                     CLCIN0PPS       equ	609	;# 
  1223   000262                     CLCIN1PPS       equ	610	;# 
  1224   000263                     CLCIN2PPS       equ	611	;# 
  1225   000264                     CLCIN3PPS       equ	612	;# 
  1226   000265                     CLCIN4PPS       equ	613	;# 
  1227   000266                     CLCIN5PPS       equ	614	;# 
  1228   000267                     CLCIN6PPS       equ	615	;# 
  1229   000268                     CLCIN7PPS       equ	616	;# 
  1230   000269                     ADACTPPS        equ	617	;# 
  1231   00026A                     SPI1SCKPPS      equ	618	;# 
  1232   00026B                     SPI1SDIPPS      equ	619	;# 
  1233   00026C                     SPI1SSPPS       equ	620	;# 
  1234   00026D                     SPI2SCKPPS      equ	621	;# 
  1235   00026E                     SPI2SDIPPS      equ	622	;# 
  1236   00026F                     SPI2SSPPS       equ	623	;# 
  1237   000270                     I2C1SDAPPS      equ	624	;# 
  1238   000271                     I2C1SCLPPS      equ	625	;# 
  1239   000272                     U1RXPPS         equ	626	;# 
  1240   000273                     U1CTSPPS        equ	627	;# 
  1241   000274                     U2RXPPS         equ	628	;# 
  1242   000275                     U2CTSPPS        equ	629	;# 
  1243   000276                     U3RXPPS         equ	630	;# 
  1244   000277                     U3CTSPPS        equ	631	;# 
  1245   000278                     U4RXPPS         equ	632	;# 
  1246   000279                     U4CTSPPS        equ	633	;# 
  1247   00027A                     U5RXPPS         equ	634	;# 
  1248   00027B                     U5CTSPPS        equ	635	;# 
  1249   000286                     RC4I2C          equ	646	;# 
  1250   000287                     RC3I2C          equ	647	;# 
  1251   000288                     RB2I2C          equ	648	;# 
  1252   000289                     RB1I2C          equ	649	;# 
  1253   00028B                     I2C1RXB         equ	651	;# 
  1254   00028C                     I2C1TXB         equ	652	;# 
  1255   00028D                     I2C1CNT         equ	653	;# 
  1256   00028E                     I2C1ADB0        equ	654	;# 
  1257   00028F                     I2C1ADB1        equ	655	;# 
  1258   000290                     I2C1ADR0        equ	656	;# 
  1259   000291                     I2C1ADR1        equ	657	;# 
  1260   000292                     I2C1ADR2        equ	658	;# 
  1261   000293                     I2C1ADR3        equ	659	;# 
  1262   000294                     I2C1CON0        equ	660	;# 
  1263   000295                     I2C1CON1        equ	661	;# 
  1264   000296                     I2C1CON2        equ	662	;# 
  1265   000297                     I2C1ERR         equ	663	;# 
  1266   000298                     I2C1STAT0       equ	664	;# 
  1267   000299                     I2C1STAT1       equ	665	;# 
  1268   00029A                     I2C1PIR         equ	666	;# 
  1269   00029B                     I2C1PIE         equ	667	;# 
  1270   00029C                     I2C1CLK         equ	668	;# 
  1271   00029D                     I2C1BTO         equ	669	;# 
  1272   0002A1                     U1RXB           equ	673	;# 
  1273   0002A1                     U1RXBL          equ	673	;# 
  1274   0002A2                     U1RXCHK         equ	674	;# 
  1275   0002A3                     U1TXB           equ	675	;# 
  1276   0002A3                     U1TXBL          equ	675	;# 
  1277   0002A4                     U1TXCHK         equ	676	;# 
  1278   0002A5                     U1P1            equ	677	;# 
  1279   0002A5                     U1P1L           equ	677	;# 
  1280   0002A6                     U1P1H           equ	678	;# 
  1281   0002A7                     U1P2            equ	679	;# 
  1282   0002A7                     U1P2L           equ	679	;# 
  1283   0002A8                     U1P2H           equ	680	;# 
  1284   0002A9                     U1P3            equ	681	;# 
  1285   0002A9                     U1P3L           equ	681	;# 
  1286   0002AA                     U1P3H           equ	682	;# 
  1287   0002AB                     U1CON0          equ	683	;# 
  1288   0002AC                     U1CON1          equ	684	;# 
  1289   0002AD                     U1CON2          equ	685	;# 
  1290   0002AE                     U1BRG           equ	686	;# 
  1291   0002AE                     U1BRGL          equ	686	;# 
  1292   0002AF                     U1BRGH          equ	687	;# 
  1293   0002B0                     U1FIFO          equ	688	;# 
  1294   0002B1                     U1UIR           equ	689	;# 
  1295   0002B2                     U1ERRIR         equ	690	;# 
  1296   0002B3                     U1ERRIE         equ	691	;# 
  1297   0002B4                     U2RXB           equ	692	;# 
  1298   0002B4                     U2RXBL          equ	692	;# 
  1299   0002B6                     U2TXB           equ	694	;# 
  1300   0002B6                     U2TXBL          equ	694	;# 
  1301   0002B8                     U2P1            equ	696	;# 
  1302   0002B8                     U2P1L           equ	696	;# 
  1303   0002BA                     U2P2            equ	698	;# 
  1304   0002BA                     U2P2L           equ	698	;# 
  1305   0002BC                     U2P3            equ	700	;# 
  1306   0002BC                     U2P3L           equ	700	;# 
  1307   0002BE                     U2CON0          equ	702	;# 
  1308   0002BF                     U2CON1          equ	703	;# 
  1309   0002C0                     U2CON2          equ	704	;# 
  1310   0002C1                     U2BRG           equ	705	;# 
  1311   0002C1                     U2BRGL          equ	705	;# 
  1312   0002C2                     U2BRGH          equ	706	;# 
  1313   0002C3                     U2FIFO          equ	707	;# 
  1314   0002C4                     U2UIR           equ	708	;# 
  1315   0002C5                     U2ERRIR         equ	709	;# 
  1316   0002C6                     U2ERRIE         equ	710	;# 
  1317   0002C7                     U3RXB           equ	711	;# 
  1318   0002C7                     U3RXBL          equ	711	;# 
  1319   0002C9                     U3TXB           equ	713	;# 
  1320   0002C9                     U3TXBL          equ	713	;# 
  1321   0002CB                     U3P1            equ	715	;# 
  1322   0002CB                     U3P1L           equ	715	;# 
  1323   0002CD                     U3P2            equ	717	;# 
  1324   0002CD                     U3P2L           equ	717	;# 
  1325   0002CF                     U3P3            equ	719	;# 
  1326   0002CF                     U3P3L           equ	719	;# 
  1327   0002D1                     U3CON0          equ	721	;# 
  1328   0002D2                     U3CON1          equ	722	;# 
  1329   0002D3                     U3CON2          equ	723	;# 
  1330   0002D4                     U3BRG           equ	724	;# 
  1331   0002D4                     U3BRGL          equ	724	;# 
  1332   0002D5                     U3BRGH          equ	725	;# 
  1333   0002D6                     U3FIFO          equ	726	;# 
  1334   0002D7                     U3UIR           equ	727	;# 
  1335   0002D8                     U3ERRIR         equ	728	;# 
  1336   0002D9                     U3ERRIE         equ	729	;# 
  1337   0002DA                     U4RXB           equ	730	;# 
  1338   0002DA                     U4RXBL          equ	730	;# 
  1339   0002DC                     U4TXB           equ	732	;# 
  1340   0002DC                     U4TXBL          equ	732	;# 
  1341   0002DE                     U4P1            equ	734	;# 
  1342   0002DE                     U4P1L           equ	734	;# 
  1343   0002E0                     U4P2            equ	736	;# 
  1344   0002E0                     U4P2L           equ	736	;# 
  1345   0002E2                     U4P3            equ	738	;# 
  1346   0002E2                     U4P3L           equ	738	;# 
  1347   0002E4                     U4CON0          equ	740	;# 
  1348   0002E5                     U4CON1          equ	741	;# 
  1349   0002E6                     U4CON2          equ	742	;# 
  1350   0002E7                     U4BRG           equ	743	;# 
  1351   0002E7                     U4BRGL          equ	743	;# 
  1352   0002E8                     U4BRGH          equ	744	;# 
  1353   0002E9                     U4FIFO          equ	745	;# 
  1354   0002EA                     U4UIR           equ	746	;# 
  1355   0002EB                     U4ERRIR         equ	747	;# 
  1356   0002EC                     U4ERRIE         equ	748	;# 
  1357   0002ED                     U5RXB           equ	749	;# 
  1358   0002ED                     U5RXBL          equ	749	;# 
  1359   0002EF                     U5TXB           equ	751	;# 
  1360   0002EF                     U5TXBL          equ	751	;# 
  1361   0002F1                     U5P1            equ	753	;# 
  1362   0002F1                     U5P1L           equ	753	;# 
  1363   0002F3                     U5P2            equ	755	;# 
  1364   0002F3                     U5P2L           equ	755	;# 
  1365   0002F5                     U5P3            equ	757	;# 
  1366   0002F5                     U5P3L           equ	757	;# 
  1367   0002F7                     U5CON0          equ	759	;# 
  1368   0002F8                     U5CON1          equ	760	;# 
  1369   0002F9                     U5CON2          equ	761	;# 
  1370   0002FA                     U5BRG           equ	762	;# 
  1371   0002FA                     U5BRGL          equ	762	;# 
  1372   0002FB                     U5BRGH          equ	763	;# 
  1373   0002FC                     U5FIFO          equ	764	;# 
  1374   0002FD                     U5UIR           equ	765	;# 
  1375   0002FE                     U5ERRIR         equ	766	;# 
  1376   0002FF                     U5ERRIE         equ	767	;# 
  1377   000300                     SMT1TMR         equ	768	;# 
  1378   000300                     SMT1TMRL        equ	768	;# 
  1379   000301                     SMT1TMRH        equ	769	;# 
  1380   000302                     SMT1TMRU        equ	770	;# 
  1381   000303                     SMT1CPR         equ	771	;# 
  1382   000303                     SMT1CPRL        equ	771	;# 
  1383   000304                     SMT1CPRH        equ	772	;# 
  1384   000305                     SMT1CPRU        equ	773	;# 
  1385   000306                     SMT1CPW         equ	774	;# 
  1386   000306                     SMT1CPWL        equ	774	;# 
  1387   000307                     SMT1CPWH        equ	775	;# 
  1388   000308                     SMT1CPWU        equ	776	;# 
  1389   000309                     SMT1PR          equ	777	;# 
  1390   000309                     SMT1PRL         equ	777	;# 
  1391   00030A                     SMT1PRH         equ	778	;# 
  1392   00030B                     SMT1PRU         equ	779	;# 
  1393   00030C                     SMT1CON0        equ	780	;# 
  1394   00030D                     SMT1CON1        equ	781	;# 
  1395   00030E                     SMT1STAT        equ	782	;# 
  1396   00030F                     SMT1CLK         equ	783	;# 
  1397   000310                     SMT1SIG         equ	784	;# 
  1398   000311                     SMT1WIN         equ	785	;# 
  1399   000318                     TMR0L           equ	792	;# 
  1400   000318                     TMR0            equ	792	;# 
  1401   000319                     TMR0H           equ	793	;# 
  1402   000319                     PR0             equ	793	;# 
  1403   00031A                     T0CON0          equ	794	;# 
  1404   00031B                     T0CON1          equ	795	;# 
  1405   00031C                     TMR1            equ	796	;# 
  1406   00031C                     TMR1L           equ	796	;# 
  1407   00031D                     TMR1H           equ	797	;# 
  1408   00031E                     T1CON           equ	798	;# 
  1409   00031E                     TMR1CON         equ	798	;# 
  1410   00031F                     T1GCON          equ	799	;# 
  1411   00031F                     TMR1GCON        equ	799	;# 
  1412   000320                     T1GATE          equ	800	;# 
  1413   000320                     TMR1GATE        equ	800	;# 
  1414   000321                     T1CLK           equ	801	;# 
  1415   000321                     TMR1CLK         equ	801	;# 
  1416   000321                     PR1             equ	801	;# 
  1417   000322                     T2TMR           equ	802	;# 
  1418   000322                     TMR2            equ	802	;# 
  1419   000323                     T2PR            equ	803	;# 
  1420   000323                     PR2             equ	803	;# 
  1421   000324                     T2CON           equ	804	;# 
  1422   000325                     T2HLT           equ	805	;# 
  1423   000326                     T2CLKCON        equ	806	;# 
  1424   000326                     T2CLK           equ	806	;# 
  1425   000327                     T2RST           equ	807	;# 
  1426   000328                     TMR3            equ	808	;# 
  1427   000328                     TMR3L           equ	808	;# 
  1428   000329                     TMR3H           equ	809	;# 
  1429   00032A                     T3CON           equ	810	;# 
  1430   00032A                     TMR3CON         equ	810	;# 
  1431   00032B                     T3GCON          equ	811	;# 
  1432   00032B                     TMR3GCON        equ	811	;# 
  1433   00032C                     T3GATE          equ	812	;# 
  1434   00032C                     TMR3GATE        equ	812	;# 
  1435   00032D                     T3CLK           equ	813	;# 
  1436   00032D                     TMR3CLK         equ	813	;# 
  1437   00032D                     PR3             equ	813	;# 
  1438   00032E                     T4TMR           equ	814	;# 
  1439   00032E                     TMR4            equ	814	;# 
  1440   00032F                     T4PR            equ	815	;# 
  1441   00032F                     PR4             equ	815	;# 
  1442   000330                     T4CON           equ	816	;# 
  1443   000331                     T4HLT           equ	817	;# 
  1444   000332                     T4CLKCON        equ	818	;# 
  1445   000332                     T4CLK           equ	818	;# 
  1446   000333                     T4RST           equ	819	;# 
  1447   000334                     TMR5            equ	820	;# 
  1448   000334                     TMR5L           equ	820	;# 
  1449   000335                     TMR5H           equ	821	;# 
  1450   000336                     T5CON           equ	822	;# 
  1451   000336                     TMR5CON         equ	822	;# 
  1452   000337                     T5GCON          equ	823	;# 
  1453   000337                     TMR5GCON        equ	823	;# 
  1454   000338                     T5GATE          equ	824	;# 
  1455   000338                     TMR5GATE        equ	824	;# 
  1456   000339                     T5CLK           equ	825	;# 
  1457   000339                     TMR5CLK         equ	825	;# 
  1458   000339                     PR5             equ	825	;# 
  1459   00033A                     T6TMR           equ	826	;# 
  1460   00033A                     TMR6            equ	826	;# 
  1461   00033B                     T6PR            equ	827	;# 
  1462   00033B                     PR6             equ	827	;# 
  1463   00033C                     T6CON           equ	828	;# 
  1464   00033D                     T6HLT           equ	829	;# 
  1465   00033E                     T6CLKCON        equ	830	;# 
  1466   00033E                     T6CLK           equ	830	;# 
  1467   00033F                     T6RST           equ	831	;# 
  1468   000340                     CCPR1           equ	832	;# 
  1469   000340                     CCPR1L          equ	832	;# 
  1470   000341                     CCPR1H          equ	833	;# 
  1471   000342                     CCP1CON         equ	834	;# 
  1472   000343                     CCP1CAP         equ	835	;# 
  1473   000344                     CCPR2           equ	836	;# 
  1474   000344                     CCPR2L          equ	836	;# 
  1475   000345                     CCPR2H          equ	837	;# 
  1476   000346                     CCP2CON         equ	838	;# 
  1477   000347                     CCP2CAP         equ	839	;# 
  1478   000348                     CCPR3           equ	840	;# 
  1479   000348                     CCPR3L          equ	840	;# 
  1480   000349                     CCPR3H          equ	841	;# 
  1481   00034A                     CCP3CON         equ	842	;# 
  1482   00034B                     CCP3CAP         equ	843	;# 
  1483   00034C                     CCPTMRS0        equ	844	;# 
  1484   00034F                     CRCDATA         equ	847	;# 
  1485   00034F                     CRCDATL         equ	847	;# 
  1486   000350                     CRCDATH         equ	848	;# 
  1487   000351                     CRCACC          equ	849	;# 
  1488   000351                     CRCACCL         equ	849	;# 
  1489   000352                     CRCACCH         equ	850	;# 
  1490   000353                     CRCSHFT         equ	851	;# 
  1491   000353                     CRCSHIFTL       equ	851	;# 
  1492   000354                     CRCSHIFTH       equ	852	;# 
  1493   000355                     CRCXOR          equ	853	;# 
  1494   000355                     CRCXORL         equ	853	;# 
  1495   000356                     CRCXORH         equ	854	;# 
  1496   000357                     CRCCON0         equ	855	;# 
  1497   000358                     CRCCON1         equ	856	;# 
  1498   00035A                     SCANLADR        equ	858	;# 
  1499   00035A                     SCANLADRL       equ	858	;# 
  1500   00035B                     SCANLADRH       equ	859	;# 
  1501   00035C                     SCANLADRU       equ	860	;# 
  1502   00035D                     SCANHADR        equ	861	;# 
  1503   00035D                     SCANHADRL       equ	861	;# 
  1504   00035E                     SCANHADRH       equ	862	;# 
  1505   00035F                     SCANHADRU       equ	863	;# 
  1506   000360                     SCANCON0        equ	864	;# 
  1507   000361                     SCANTRIG        equ	865	;# 
  1508   000362                     IPR0            equ	866	;# 
  1509   000363                     IPR1            equ	867	;# 
  1510   000364                     IPR2            equ	868	;# 
  1511   000365                     IPR3            equ	869	;# 
  1512   000366                     IPR4            equ	870	;# 
  1513   000367                     IPR5            equ	871	;# 
  1514   000368                     IPR6            equ	872	;# 
  1515   000369                     IPR7            equ	873	;# 
  1516   00036A                     IPR8            equ	874	;# 
  1517   00036B                     IPR9            equ	875	;# 
  1518   00036C                     IPR10           equ	876	;# 
  1519   00036D                     IPR11           equ	877	;# 
  1520   00036E                     IPR12           equ	878	;# 
  1521   00036F                     IPR13           equ	879	;# 
  1522   000370                     IPR14           equ	880	;# 
  1523   000371                     IPR15           equ	881	;# 
  1524   000373                     STATUS_CSHAD    equ	883	;# 
  1525   000374                     WREG_CSHAD      equ	884	;# 
  1526   000375                     BSR_CSHAD       equ	885	;# 
  1527   000376                     SHADCON         equ	886	;# 
  1528   000377                     STATUS_SHAD     equ	887	;# 
  1529   000378                     WREG_SHAD       equ	888	;# 
  1530   000379                     BSR_SHAD        equ	889	;# 
  1531   00037A                     PCLATH_SHAD     equ	890	;# 
  1532   00037B                     PCLATU_SHAD     equ	891	;# 
  1533   00037C                     FSR0SH          equ	892	;# 
  1534   00037C                     FSR0L_SHAD      equ	892	;# 
  1535   00037D                     FSR0H_SHAD      equ	893	;# 
  1536   00037E                     FSR1SH          equ	894	;# 
  1537   00037E                     FSR1L_SHAD      equ	894	;# 
  1538   00037F                     FSR1H_SHAD      equ	895	;# 
  1539   000380                     FSR2SH          equ	896	;# 
  1540   000380                     FSR2L_SHAD      equ	896	;# 
  1541   000381                     FSR2H_SHAD      equ	897	;# 
  1542   000382                     PRODSH          equ	898	;# 
  1543   000382                     PRODL_SHAD      equ	898	;# 
  1544   000383                     PRODH_SHAD      equ	899	;# 
  1545   0003BC                     CWG1CLK         equ	956	;# 
  1546   0003BC                     CWG1CLKCON      equ	956	;# 
  1547   0003BD                     CWG1ISM         equ	957	;# 
  1548   0003BD                     CWG1DAT         equ	957	;# 
  1549   0003BE                     CWG1DBR         equ	958	;# 
  1550   0003BF                     CWG1DBF         equ	959	;# 
  1551   0003C0                     CWG1CON0        equ	960	;# 
  1552   0003C1                     CWG1CON1        equ	961	;# 
  1553   0003C2                     CWG1AS0         equ	962	;# 
  1554   0003C3                     CWG1AS1         equ	963	;# 
  1555   0003C4                     CWG1STR         equ	964	;# 
  1556   0003C5                     CWG2CLK         equ	965	;# 
  1557   0003C5                     CWG2CLKCON      equ	965	;# 
  1558   0003C6                     CWG2ISM         equ	966	;# 
  1559   0003C6                     CWG2DAT         equ	966	;# 
  1560   0003C7                     CWG2DBR         equ	967	;# 
  1561   0003C8                     CWG2DBF         equ	968	;# 
  1562   0003C9                     CWG2CON0        equ	969	;# 
  1563   0003CA                     CWG2CON1        equ	970	;# 
  1564   0003CB                     CWG2AS0         equ	971	;# 
  1565   0003CC                     CWG2AS1         equ	972	;# 
  1566   0003CD                     CWG2STR         equ	973	;# 
  1567   0003CE                     CWG3CLK         equ	974	;# 
  1568   0003CE                     CWG3CLKCON      equ	974	;# 
  1569   0003CF                     CWG3ISM         equ	975	;# 
  1570   0003CF                     CWG3DAT         equ	975	;# 
  1571   0003D0                     CWG3DBR         equ	976	;# 
  1572   0003D1                     CWG3DBF         equ	977	;# 
  1573   0003D2                     CWG3CON0        equ	978	;# 
  1574   0003D3                     CWG3CON1        equ	979	;# 
  1575   0003D4                     CWG3AS0         equ	980	;# 
  1576   0003D5                     CWG3AS1         equ	981	;# 
  1577   0003D6                     CWG3STR         equ	982	;# 
  1578   0003D7                     FVRCON          equ	983	;# 
  1579   0003D8                     ADCPCON         equ	984	;# 
  1580   0003D8                     ADCP            equ	984	;# 
  1581   0003D9                     ADLTH           equ	985	;# 
  1582   0003D9                     ADLTHL          equ	985	;# 
  1583   0003DA                     ADLTHH          equ	986	;# 
  1584   0003DB                     ADUTH           equ	987	;# 
  1585   0003DB                     ADUTHL          equ	987	;# 
  1586   0003DC                     ADUTHH          equ	988	;# 
  1587   0003DD                     ADERR           equ	989	;# 
  1588   0003DD                     ADERRL          equ	989	;# 
  1589   0003DE                     ADERRH          equ	990	;# 
  1590   0003DF                     ADSTPT          equ	991	;# 
  1591   0003DF                     ADSTPTL         equ	991	;# 
  1592   0003E0                     ADSTPTH         equ	992	;# 
  1593   0003E1                     ADFLTR          equ	993	;# 
  1594   0003E1                     ADFLTRL         equ	993	;# 
  1595   0003E2                     ADFLTRH         equ	994	;# 
  1596   0003E3                     ADACC           equ	995	;# 
  1597   0003E3                     ADACCL          equ	995	;# 
  1598   0003E4                     ADACCH          equ	996	;# 
  1599   0003E5                     ADACCU          equ	997	;# 
  1600   0003E6                     ADCNT           equ	998	;# 
  1601   0003E7                     ADRPT           equ	999	;# 
  1602   0003E8                     ADPREV          equ	1000	;# 
  1603   0003E8                     ADPREVL         equ	1000	;# 
  1604   0003E9                     ADPREVH         equ	1001	;# 
  1605   0003EA                     ADRES           equ	1002	;# 
  1606   0003EA                     ADRESL          equ	1002	;# 
  1607   0003EB                     ADRESH          equ	1003	;# 
  1608   0003EC                     ADPCH           equ	1004	;# 
  1609   0003EE                     ADACQ           equ	1006	;# 
  1610   0003EE                     ADACQL          equ	1006	;# 
  1611   0003EF                     ADACQH          equ	1007	;# 
  1612   0003F0                     ADCAP           equ	1008	;# 
  1613   0003F1                     ADPRE           equ	1009	;# 
  1614   0003F1                     ADPREL          equ	1009	;# 
  1615   0003F2                     ADPREH          equ	1010	;# 
  1616   0003F3                     ADCON0          equ	1011	;# 
  1617   0003F4                     ADCON1          equ	1012	;# 
  1618   0003F5                     ADCON2          equ	1013	;# 
  1619   0003F6                     ADCON3          equ	1014	;# 
  1620   0003F7                     ADSTAT          equ	1015	;# 
  1621   0003F8                     ADREF           equ	1016	;# 
  1622   0003F9                     ADACT           equ	1017	;# 
  1623   0003FA                     ADCLK           equ	1018	;# 
  1624   000400                     ANSELA          equ	1024	;# 
  1625   000401                     WPUA            equ	1025	;# 
  1626   000402                     ODCONA          equ	1026	;# 
  1627   000403                     SLRCONA         equ	1027	;# 
  1628   000404                     INLVLA          equ	1028	;# 
  1629   000405                     IOCAP           equ	1029	;# 
  1630   000406                     IOCAN           equ	1030	;# 
  1631   000407                     IOCAF           equ	1031	;# 
  1632   000408                     ANSELB          equ	1032	;# 
  1633   000409                     WPUB            equ	1033	;# 
  1634   00040A                     ODCONB          equ	1034	;# 
  1635   00040B                     SLRCONB         equ	1035	;# 
  1636   00040C                     INLVLB          equ	1036	;# 
  1637   00040D                     IOCBP           equ	1037	;# 
  1638   00040E                     IOCBN           equ	1038	;# 
  1639   00040F                     IOCBF           equ	1039	;# 
  1640   000410                     ANSELC          equ	1040	;# 
  1641   000411                     WPUC            equ	1041	;# 
  1642   000412                     ODCONC          equ	1042	;# 
  1643   000413                     SLRCONC         equ	1043	;# 
  1644   000414                     INLVLC          equ	1044	;# 
  1645   000415                     IOCCP           equ	1045	;# 
  1646   000416                     IOCCN           equ	1046	;# 
  1647   000417                     IOCCF           equ	1047	;# 
  1648   000418                     ANSELD          equ	1048	;# 
  1649   000419                     WPUD            equ	1049	;# 
  1650   00041A                     ODCOND          equ	1050	;# 
  1651   00041B                     SLRCOND         equ	1051	;# 
  1652   00041C                     INLVLD          equ	1052	;# 
  1653   000420                     ANSELE          equ	1056	;# 
  1654   000421                     WPUE            equ	1057	;# 
  1655   000422                     ODCONE          equ	1058	;# 
  1656   000423                     SLRCONE         equ	1059	;# 
  1657   000424                     INLVLE          equ	1060	;# 
  1658   000425                     IOCEP           equ	1061	;# 
  1659   000426                     IOCEN           equ	1062	;# 
  1660   000427                     IOCEF           equ	1063	;# 
  1661   000428                     ANSELF          equ	1064	;# 
  1662   000429                     WPUF            equ	1065	;# 
  1663   00042A                     ODCONF          equ	1066	;# 
  1664   00042B                     SLRCONF         equ	1067	;# 
  1665   00042C                     INLVLF          equ	1068	;# 
  1666   000440                     NCO1ACC         equ	1088	;# 
  1667   000440                     NCO1ACCL        equ	1088	;# 
  1668   000441                     NCO1ACCH        equ	1089	;# 
  1669   000442                     NCO1ACCU        equ	1090	;# 
  1670   000443                     NCO1INC         equ	1091	;# 
  1671   000443                     NCO1INCL        equ	1091	;# 
  1672   000444                     NCO1INCH        equ	1092	;# 
  1673   000445                     NCO1INCU        equ	1093	;# 
  1674   000446                     NCO1CON         equ	1094	;# 
  1675   000447                     NCO1CLK         equ	1095	;# 
  1676   000448                     NCO2ACC         equ	1096	;# 
  1677   000448                     NCO2ACCL        equ	1096	;# 
  1678   000449                     NCO2ACCH        equ	1097	;# 
  1679   00044A                     NCO2ACCU        equ	1098	;# 
  1680   00044B                     NCO2INC         equ	1099	;# 
  1681   00044B                     NCO2INCL        equ	1099	;# 
  1682   00044C                     NCO2INCH        equ	1100	;# 
  1683   00044D                     NCO2INCU        equ	1101	;# 
  1684   00044E                     NCO2CON         equ	1102	;# 
  1685   00044F                     NCO2CLK         equ	1103	;# 
  1686   000450                     NCO3ACC         equ	1104	;# 
  1687   000450                     NCO3ACCL        equ	1104	;# 
  1688   000451                     NCO3ACCH        equ	1105	;# 
  1689   000452                     NCO3ACCU        equ	1106	;# 
  1690   000453                     NCO3INC         equ	1107	;# 
  1691   000453                     NCO3INCL        equ	1107	;# 
  1692   000454                     NCO3INCH        equ	1108	;# 
  1693   000455                     NCO3INCU        equ	1109	;# 
  1694   000456                     NCO3CON         equ	1110	;# 
  1695   000457                     NCO3CLK         equ	1111	;# 
  1696   000459                     IVTLOCK         equ	1113	;# 
  1697   00045A                     IVTAD           equ	1114	;# 
  1698   00045A                     IVTADL          equ	1114	;# 
  1699   00045B                     IVTADH          equ	1115	;# 
  1700   00045C                     IVTADU          equ	1116	;# 
  1701   00045D                     IVTBASE         equ	1117	;# 
  1702   00045D                     IVTBASEL        equ	1117	;# 
  1703   00045E                     IVTBASEH        equ	1118	;# 
  1704   00045F                     IVTBASEU        equ	1119	;# 
  1705   000460                     PWM1ERS         equ	1120	;# 
  1706   000461                     PWM1CLK         equ	1121	;# 
  1707   000462                     PWM1LDS         equ	1122	;# 
  1708   000463                     PWM1PR          equ	1123	;# 
  1709   000463                     PWM1PRL         equ	1123	;# 
  1710   000464                     PWM1PRH         equ	1124	;# 
  1711   000465                     PWM1CPRE        equ	1125	;# 
  1712   000466                     PWM1PIPOS       equ	1126	;# 
  1713   000467                     PWM1GIR         equ	1127	;# 
  1714   000468                     PWM1GIE         equ	1128	;# 
  1715   000469                     PWM1CON         equ	1129	;# 
  1716   00046A                     PWM1S1CFG       equ	1130	;# 
  1717   00046B                     PWM1S1P1        equ	1131	;# 
  1718   00046B                     PWM1S1P1L       equ	1131	;# 
  1719   00046C                     PWM1S1P1H       equ	1132	;# 
  1720   00046D                     PWM1S1P2        equ	1133	;# 
  1721   00046D                     PWM1S1P2L       equ	1133	;# 
  1722   00046E                     PWM1S1P2H       equ	1134	;# 
  1723   00046F                     PWM2ERS         equ	1135	;# 
  1724   000470                     PWM2CLK         equ	1136	;# 
  1725   000471                     PWM2LDS         equ	1137	;# 
  1726   000472                     PWM2PR          equ	1138	;# 
  1727   000472                     PWM2PRL         equ	1138	;# 
  1728   000473                     PWM2PRH         equ	1139	;# 
  1729   000474                     PWM2CPRE        equ	1140	;# 
  1730   000475                     PWM2PIPOS       equ	1141	;# 
  1731   000476                     PWM2GIR         equ	1142	;# 
  1732   000477                     PWM2GIE         equ	1143	;# 
  1733   000478                     PWM2CON         equ	1144	;# 
  1734   000479                     PWM2S1CFG       equ	1145	;# 
  1735   00047A                     PWM2S1P1        equ	1146	;# 
  1736   00047A                     PWM2S1P1L       equ	1146	;# 
  1737   00047B                     PWM2S1P1H       equ	1147	;# 
  1738   00047C                     PWM2S1P2        equ	1148	;# 
  1739   00047C                     PWM2S1P2L       equ	1148	;# 
  1740   00047D                     PWM2S1P2H       equ	1149	;# 
  1741   00047E                     PWM3ERS         equ	1150	;# 
  1742   00047F                     PWM3CLK         equ	1151	;# 
  1743   000480                     PWM3LDS         equ	1152	;# 
  1744   000481                     PWM3PR          equ	1153	;# 
  1745   000481                     PWM3PRL         equ	1153	;# 
  1746   000482                     PWM3PRH         equ	1154	;# 
  1747   000483                     PWM3CPRE        equ	1155	;# 
  1748   000484                     PWM3PIPOS       equ	1156	;# 
  1749   000485                     PWM3GIR         equ	1157	;# 
  1750   000486                     PWM3GIE         equ	1158	;# 
  1751   000487                     PWM3CON         equ	1159	;# 
  1752   000488                     PWM3S1CFG       equ	1160	;# 
  1753   000489                     PWM3S1P1        equ	1161	;# 
  1754   000489                     PWM3S1P1L       equ	1161	;# 
  1755   00048A                     PWM3S1P1H       equ	1162	;# 
  1756   00048B                     PWM3S1P2        equ	1163	;# 
  1757   00048B                     PWM3S1P2L       equ	1163	;# 
  1758   00048C                     PWM3S1P2H       equ	1164	;# 
  1759   00049C                     PWMLOAD         equ	1180	;# 
  1760   00049D                     PWMEN           equ	1181	;# 
  1761   00049E                     PIE0            equ	1182	;# 
  1762   00049F                     PIE1            equ	1183	;# 
  1763   0004A0                     PIE2            equ	1184	;# 
  1764   0004A1                     PIE3            equ	1185	;# 
  1765   0004A2                     PIE4            equ	1186	;# 
  1766   0004A3                     PIE5            equ	1187	;# 
  1767   0004A4                     PIE6            equ	1188	;# 
  1768   0004A5                     PIE7            equ	1189	;# 
  1769   0004A6                     PIE8            equ	1190	;# 
  1770   0004A7                     PIE9            equ	1191	;# 
  1771   0004A8                     PIE10           equ	1192	;# 
  1772   0004A9                     PIE11           equ	1193	;# 
  1773   0004AA                     PIE12           equ	1194	;# 
  1774   0004AB                     PIE13           equ	1195	;# 
  1775   0004AC                     PIE14           equ	1196	;# 
  1776   0004AD                     PIE15           equ	1197	;# 
  1777   0004AE                     PIR0            equ	1198	;# 
  1778   0004AF                     PIR1            equ	1199	;# 
  1779   0004B0                     PIR2            equ	1200	;# 
  1780   0004B1                     PIR3            equ	1201	;# 
  1781   0004B2                     PIR4            equ	1202	;# 
  1782   0004B3                     PIR5            equ	1203	;# 
  1783   0004B4                     PIR6            equ	1204	;# 
  1784   0004B5                     PIR7            equ	1205	;# 
  1785   0004B6                     PIR8            equ	1206	;# 
  1786   0004B7                     PIR9            equ	1207	;# 
  1787   0004B8                     PIR10           equ	1208	;# 
  1788   0004B9                     PIR11           equ	1209	;# 
  1789   0004BA                     PIR12           equ	1210	;# 
  1790   0004BB                     PIR13           equ	1211	;# 
  1791   0004BC                     PIR14           equ	1212	;# 
  1792   0004BD                     PIR15           equ	1213	;# 
  1793   0004BE                     LATA            equ	1214	;# 
  1794   0004BF                     LATB            equ	1215	;# 
  1795   0004C0                     LATC            equ	1216	;# 
  1796   0004C1                     LATD            equ	1217	;# 
  1797   0004C2                     LATE            equ	1218	;# 
  1798   0004C3                     LATF            equ	1219	;# 
  1799   0004C6                     TRISA           equ	1222	;# 
  1800   0004C7                     TRISB           equ	1223	;# 
  1801   0004C8                     TRISC           equ	1224	;# 
  1802   0004C9                     TRISD           equ	1225	;# 
  1803   0004CA                     TRISE           equ	1226	;# 
  1804   0004CB                     TRISF           equ	1227	;# 
  1805   0004CE                     PORTA           equ	1230	;# 
  1806   0004CF                     PORTB           equ	1231	;# 
  1807   0004D0                     PORTC           equ	1232	;# 
  1808   0004D1                     PORTD           equ	1233	;# 
  1809   0004D2                     PORTE           equ	1234	;# 
  1810   0004D3                     PORTF           equ	1235	;# 
  1811   0004D6                     INTCON0         equ	1238	;# 
  1812   0004D7                     INTCON1         equ	1239	;# 
  1813   0004D8                     STATUS          equ	1240	;# 
  1814   0004D9                     FSR2            equ	1241	;# 
  1815   0004D9                     FSR2L           equ	1241	;# 
  1816   0004DA                     FSR2H           equ	1242	;# 
  1817   0004DB                     PLUSW2          equ	1243	;# 
  1818   0004DC                     PREINC2         equ	1244	;# 
  1819   0004DD                     POSTDEC2        equ	1245	;# 
  1820   0004DE                     POSTINC2        equ	1246	;# 
  1821   0004DF                     INDF2           equ	1247	;# 
  1822   0004E0                     BSR             equ	1248	;# 
  1823   0004E1                     FSR1            equ	1249	;# 
  1824   0004E1                     FSR1L           equ	1249	;# 
  1825   0004E2                     FSR1H           equ	1250	;# 
  1826   0004E3                     PLUSW1          equ	1251	;# 
  1827   0004E4                     PREINC1         equ	1252	;# 
  1828   0004E5                     POSTDEC1        equ	1253	;# 
  1829   0004E6                     POSTINC1        equ	1254	;# 
  1830   0004E7                     INDF1           equ	1255	;# 
  1831   0004E8                     WREG            equ	1256	;# 
  1832   0004E9                     FSR0            equ	1257	;# 
  1833   0004E9                     FSR0L           equ	1257	;# 
  1834   0004EA                     FSR0H           equ	1258	;# 
  1835   0004EB                     PLUSW0          equ	1259	;# 
  1836   0004EC                     PREINC0         equ	1260	;# 
  1837   0004ED                     POSTDEC0        equ	1261	;# 
  1838   0004EE                     POSTINC0        equ	1262	;# 
  1839   0004EF                     INDF0           equ	1263	;# 
  1840   0004F0                     PCON0           equ	1264	;# 
  1841   0004F1                     PCON1           equ	1265	;# 
  1842   0004F2                     CPUDOZE         equ	1266	;# 
  1843   0004F3                     PROD            equ	1267	;# 
  1844   0004F3                     PRODL           equ	1267	;# 
  1845   0004F4                     PRODH           equ	1268	;# 
  1846   0004F5                     TABLAT          equ	1269	;# 
  1847   0004F6                     TBLPTR          equ	1270	;# 
  1848   0004F6                     TBLPTRL         equ	1270	;# 
  1849   0004F7                     TBLPTRH         equ	1271	;# 
  1850   0004F8                     TBLPTRU         equ	1272	;# 
  1851   0004F9                     PCLAT           equ	1273	;# 
  1852   0004F9                     PCL             equ	1273	;# 
  1853   0004FA                     PCLATH          equ	1274	;# 
  1854   0004FB                     PCLATU          equ	1275	;# 
  1855   0004FC                     STKPTR          equ	1276	;# 
  1856   0004FD                     TOS             equ	1277	;# 
  1857   0004FD                     TOSL            equ	1277	;# 
  1858   0004FE                     TOSH            equ	1278	;# 
  1859   0004FF                     TOSU            equ	1279	;# 
  1860   000039                     CLKRCON         equ	57	;# 
  1861   00003A                     CLKRCLK         equ	58	;# 
  1862   000040                     NVMCON0         equ	64	;# 
  1863   000041                     NVMCON1         equ	65	;# 
  1864   000042                     NVMLOCK         equ	66	;# 
  1865   000043                     NVMADR          equ	67	;# 
  1866   000043                     NVMADRL         equ	67	;# 
  1867   000044                     NVMADRH         equ	68	;# 
  1868   000045                     NVMADRU         equ	69	;# 
  1869   000046                     NVMDAT          equ	70	;# 
  1870   000046                     NVMDATL         equ	70	;# 
  1871   000047                     NVMDATH         equ	71	;# 
  1872   000048                     VREGCON         equ	72	;# 
  1873   000049                     BORCON          equ	73	;# 
  1874   00004A                     HLVDCON0        equ	74	;# 
  1875   00004B                     HLVDCON1        equ	75	;# 
  1876   00004C                     ZCDCON          equ	76	;# 
  1877   000060                     PMD0            equ	96	;# 
  1878   000061                     PMD1            equ	97	;# 
  1879   000063                     PMD3            equ	99	;# 
  1880   000064                     PMD4            equ	100	;# 
  1881   000065                     PMD5            equ	101	;# 
  1882   000066                     PMD6            equ	102	;# 
  1883   000067                     PMD7            equ	103	;# 
  1884   000068                     PMD8            equ	104	;# 
  1885   00006A                     MD1CON0         equ	106	;# 
  1886   00006B                     MD1CON1         equ	107	;# 
  1887   00006C                     MD1SRC          equ	108	;# 
  1888   00006D                     MD1CARL         equ	109	;# 
  1889   00006E                     MD1CARH         equ	110	;# 
  1890   00006F                     CMOUT           equ	111	;# 
  1891   000070                     CM1CON0         equ	112	;# 
  1892   000071                     CM1CON1         equ	113	;# 
  1893   000072                     CM1NCH          equ	114	;# 
  1894   000073                     CM1PCH          equ	115	;# 
  1895   000074                     CM2CON0         equ	116	;# 
  1896   000075                     CM2CON1         equ	117	;# 
  1897   000076                     CM2NCH          equ	118	;# 
  1898   000077                     CM2PCH          equ	119	;# 
  1899   000078                     WDTCON0         equ	120	;# 
  1900   000079                     WDTCON1         equ	121	;# 
  1901   00007A                     WDTPS           equ	122	;# 
  1902   00007A                     WDTPSL          equ	122	;# 
  1903   00007B                     WDTPSH          equ	123	;# 
  1904   00007C                     WDTTMR          equ	124	;# 
  1905   00007D                     DAC1DAT         equ	125	;# 
  1906   00007D                     DAC1DATL        equ	125	;# 
  1907   00007F                     DAC1CON         equ	127	;# 
  1908   000080                     SPI1RXB         equ	128	;# 
  1909   000081                     SPI1TXB         equ	129	;# 
  1910   000082                     SPI1TCNT        equ	130	;# 
  1911   000082                     SPI1TCNTL       equ	130	;# 
  1912   000083                     SPI1TCNTH       equ	131	;# 
  1913   000084                     SPI1CON0        equ	132	;# 
  1914   000085                     SPI1CON1        equ	133	;# 
  1915   000086                     SPI1CON2        equ	134	;# 
  1916   000087                     SPI1STATUS      equ	135	;# 
  1917   000088                     SPI1TWIDTH      equ	136	;# 
  1918   000089                     SPI1BAUD        equ	137	;# 
  1919   00008A                     SPI1INTF        equ	138	;# 
  1920   00008B                     SPI1INTE        equ	139	;# 
  1921   00008C                     SPI1CLK         equ	140	;# 
  1922   00008D                     SPI2RXB         equ	141	;# 
  1923   00008E                     SPI2TXB         equ	142	;# 
  1924   00008F                     SPI2TCNT        equ	143	;# 
  1925   00008F                     SPI2TCNTL       equ	143	;# 
  1926   000090                     SPI2TCNTH       equ	144	;# 
  1927   000091                     SPI2CON0        equ	145	;# 
  1928   000092                     SPI2CON1        equ	146	;# 
  1929   000093                     SPI2CON2        equ	147	;# 
  1930   000094                     SPI2STATUS      equ	148	;# 
  1931   000095                     SPI2TWIDTH      equ	149	;# 
  1932   000096                     SPI2BAUD        equ	150	;# 
  1933   000097                     SPI2INTF        equ	151	;# 
  1934   000098                     SPI2INTE        equ	152	;# 
  1935   000099                     SPI2CLK         equ	153	;# 
  1936   0000AC                     ACTCON          equ	172	;# 
  1937   0000AD                     OSCCON1         equ	173	;# 
  1938   0000AE                     OSCCON2         equ	174	;# 
  1939   0000AF                     OSCCON3         equ	175	;# 
  1940   0000B0                     OSCTUNE         equ	176	;# 
  1941   0000B1                     OSCFRQ          equ	177	;# 
  1942   0000B1                     OSCFREQ         equ	177	;# 
  1943   0000B2                     OSCSTAT         equ	178	;# 
  1944   0000B2                     OSCSTAT1        equ	178	;# 
  1945   0000B3                     OSCEN           equ	179	;# 
  1946   0000B4                     PRLOCK          equ	180	;# 
  1947   0000B5                     SCANPR          equ	181	;# 
  1948   0000B6                     DMA1PR          equ	182	;# 
  1949   0000B7                     DMA2PR          equ	183	;# 
  1950   0000B8                     DMA3PR          equ	184	;# 
  1951   0000B9                     DMA4PR          equ	185	;# 
  1952   0000BA                     DMA5PR          equ	186	;# 
  1953   0000BB                     DMA6PR          equ	187	;# 
  1954   0000BE                     MAINPR          equ	190	;# 
  1955   0000BF                     ISRPR           equ	191	;# 
  1956   0000D4                     CLCDATA         equ	212	;# 
  1957   0000D5                     CLCSELECT       equ	213	;# 
  1958   0000D6                     CLCnCON         equ	214	;# 
  1959   0000D7                     CLCnPOL         equ	215	;# 
  1960   0000D8                     CLCnSEL0        equ	216	;# 
  1961   0000D9                     CLCnSEL1        equ	217	;# 
  1962   0000DA                     CLCnSEL2        equ	218	;# 
  1963   0000DB                     CLCnSEL3        equ	219	;# 
  1964   0000DC                     CLCnGLS0        equ	220	;# 
  1965   0000DD                     CLCnGLS1        equ	221	;# 
  1966   0000DE                     CLCnGLS2        equ	222	;# 
  1967   0000DF                     CLCnGLS3        equ	223	;# 
  1968   0000E8                     DMASELECT       equ	232	;# 
  1969   0000E9                     DMAnBUF         equ	233	;# 
  1970   0000EA                     DMAnDCNT        equ	234	;# 
  1971   0000EA                     DMAnDCNTL       equ	234	;# 
  1972   0000EB                     DMAnDCNTH       equ	235	;# 
  1973   0000EC                     DMAnDPTR        equ	236	;# 
  1974   0000EC                     DMAnDPTRL       equ	236	;# 
  1975   0000ED                     DMAnDPTRH       equ	237	;# 
  1976   0000EE                     DMAnDSZ         equ	238	;# 
  1977   0000EE                     DMAnDSZL        equ	238	;# 
  1978   0000EF                     DMAnDSZH        equ	239	;# 
  1979   0000F0                     DMAnDSA         equ	240	;# 
  1980   0000F0                     DMAnDSAL        equ	240	;# 
  1981   0000F1                     DMAnDSAH        equ	241	;# 
  1982   0000F2                     DMAnSCNT        equ	242	;# 
  1983   0000F2                     DMAnSCNTL       equ	242	;# 
  1984   0000F3                     DMAnSCNTH       equ	243	;# 
  1985   0000F4                     DMAnSPTR        equ	244	;# 
  1986   0000F4                     DMAnSPTRL       equ	244	;# 
  1987   0000F5                     DMAnSPTRH       equ	245	;# 
  1988   0000F6                     DMAnSPTRU       equ	246	;# 
  1989   0000F7                     DMAnSSZ         equ	247	;# 
  1990   0000F7                     DMAnSSZL        equ	247	;# 
  1991   0000F8                     DMAnSSZH        equ	248	;# 
  1992   0000F9                     DMAnSSA         equ	249	;# 
  1993   0000F9                     DMAnSSAL        equ	249	;# 
  1994   0000FA                     DMAnSSAH        equ	250	;# 
  1995   0000FB                     DMAnSSAU        equ	251	;# 
  1996   0000FC                     DMAnCON0        equ	252	;# 
  1997   0000FD                     DMAnCON1        equ	253	;# 
  1998   0000FE                     DMAnAIRQ        equ	254	;# 
  1999   0000FF                     DMAnSIRQ        equ	255	;# 
  2000   000200                     PPSLOCK         equ	512	;# 
  2001   000201                     RA0PPS          equ	513	;# 
  2002   000202                     RA1PPS          equ	514	;# 
  2003   000203                     RA2PPS          equ	515	;# 
  2004   000204                     RA3PPS          equ	516	;# 
  2005   000205                     RA4PPS          equ	517	;# 
  2006   000206                     RA5PPS          equ	518	;# 
  2007   000207                     RA6PPS          equ	519	;# 
  2008   000208                     RA7PPS          equ	520	;# 
  2009   000209                     RB0PPS          equ	521	;# 
  2010   00020A                     RB1PPS          equ	522	;# 
  2011   00020B                     RB2PPS          equ	523	;# 
  2012   00020C                     RB3PPS          equ	524	;# 
  2013   00020D                     RB4PPS          equ	525	;# 
  2014   00020E                     RB5PPS          equ	526	;# 
  2015   00020F                     RB6PPS          equ	527	;# 
  2016   000210                     RB7PPS          equ	528	;# 
  2017   000211                     RC0PPS          equ	529	;# 
  2018   000212                     RC1PPS          equ	530	;# 
  2019   000213                     RC2PPS          equ	531	;# 
  2020   000214                     RC3PPS          equ	532	;# 
  2021   000215                     RC4PPS          equ	533	;# 
  2022   000216                     RC5PPS          equ	534	;# 
  2023   000217                     RC6PPS          equ	535	;# 
  2024   000218                     RC7PPS          equ	536	;# 
  2025   000219                     RD0PPS          equ	537	;# 
  2026   00021A                     RD1PPS          equ	538	;# 
  2027   00021B                     RD2PPS          equ	539	;# 
  2028   00021C                     RD3PPS          equ	540	;# 
  2029   00021D                     RD4PPS          equ	541	;# 
  2030   00021E                     RD5PPS          equ	542	;# 
  2031   00021F                     RD6PPS          equ	543	;# 
  2032   000220                     RD7PPS          equ	544	;# 
  2033   000221                     RE0PPS          equ	545	;# 
  2034   000222                     RE1PPS          equ	546	;# 
  2035   000223                     RE2PPS          equ	547	;# 
  2036   000229                     RF0PPS          equ	553	;# 
  2037   00022A                     RF1PPS          equ	554	;# 
  2038   00022B                     RF2PPS          equ	555	;# 
  2039   00022C                     RF3PPS          equ	556	;# 
  2040   00022D                     RF4PPS          equ	557	;# 
  2041   00022E                     RF5PPS          equ	558	;# 
  2042   00022F                     RF6PPS          equ	559	;# 
  2043   000230                     RF7PPS          equ	560	;# 
  2044   00023E                     INT0PPS         equ	574	;# 
  2045   00023F                     INT1PPS         equ	575	;# 
  2046   000240                     INT2PPS         equ	576	;# 
  2047   000241                     T0CKIPPS        equ	577	;# 
  2048   000242                     T1CKIPPS        equ	578	;# 
  2049   000243                     T1GPPS          equ	579	;# 
  2050   000244                     T3CKIPPS        equ	580	;# 
  2051   000245                     T3GPPS          equ	581	;# 
  2052   000246                     T5CKIPPS        equ	582	;# 
  2053   000247                     T5GPPS          equ	583	;# 
  2054   000248                     T2INPPS         equ	584	;# 
  2055   000249                     T4INPPS         equ	585	;# 
  2056   00024A                     T6INPPS         equ	586	;# 
  2057   00024F                     CCP1PPS         equ	591	;# 
  2058   000250                     CCP2PPS         equ	592	;# 
  2059   000251                     CCP3PPS         equ	593	;# 
  2060   000253                     PWM1ERSPPS      equ	595	;# 
  2061   000254                     PWM2ERSPPS      equ	596	;# 
  2062   000255                     PWM3ERSPPS      equ	597	;# 
  2063   000257                     PWMIN0PPS       equ	599	;# 
  2064   000258                     PWMIN1PPS       equ	600	;# 
  2065   000259                     SMT1WINPPS      equ	601	;# 
  2066   00025A                     SMT1SIGPPS      equ	602	;# 
  2067   00025B                     CWG1PPS         equ	603	;# 
  2068   00025B                     CWG1INPPS       equ	603	;# 
  2069   00025C                     CWG2PPS         equ	604	;# 
  2070   00025C                     CWG2INPPS       equ	604	;# 
  2071   00025D                     CWG3PPS         equ	605	;# 
  2072   00025D                     CWG3INPPS       equ	605	;# 
  2073   00025E                     MD1CARLPPS      equ	606	;# 
  2074   00025E                     MDCARLPPS       equ	606	;# 
  2075   00025F                     MD1CARHPPS      equ	607	;# 
  2076   00025F                     MDCARHPPS       equ	607	;# 
  2077   000260                     MD1SRCPPS       equ	608	;# 
  2078   000260                     MDSRCPPS        equ	608	;# 
  2079   000261                     CLCIN0PPS       equ	609	;# 
  2080   000262                     CLCIN1PPS       equ	610	;# 
  2081   000263                     CLCIN2PPS       equ	611	;# 
  2082   000264                     CLCIN3PPS       equ	612	;# 
  2083   000265                     CLCIN4PPS       equ	613	;# 
  2084   000266                     CLCIN5PPS       equ	614	;# 
  2085   000267                     CLCIN6PPS       equ	615	;# 
  2086   000268                     CLCIN7PPS       equ	616	;# 
  2087   000269                     ADACTPPS        equ	617	;# 
  2088   00026A                     SPI1SCKPPS      equ	618	;# 
  2089   00026B                     SPI1SDIPPS      equ	619	;# 
  2090   00026C                     SPI1SSPPS       equ	620	;# 
  2091   00026D                     SPI2SCKPPS      equ	621	;# 
  2092   00026E                     SPI2SDIPPS      equ	622	;# 
  2093   00026F                     SPI2SSPPS       equ	623	;# 
  2094   000270                     I2C1SDAPPS      equ	624	;# 
  2095   000271                     I2C1SCLPPS      equ	625	;# 
  2096   000272                     U1RXPPS         equ	626	;# 
  2097   000273                     U1CTSPPS        equ	627	;# 
  2098   000274                     U2RXPPS         equ	628	;# 
  2099   000275                     U2CTSPPS        equ	629	;# 
  2100   000276                     U3RXPPS         equ	630	;# 
  2101   000277                     U3CTSPPS        equ	631	;# 
  2102   000278                     U4RXPPS         equ	632	;# 
  2103   000279                     U4CTSPPS        equ	633	;# 
  2104   00027A                     U5RXPPS         equ	634	;# 
  2105   00027B                     U5CTSPPS        equ	635	;# 
  2106   000286                     RC4I2C          equ	646	;# 
  2107   000287                     RC3I2C          equ	647	;# 
  2108   000288                     RB2I2C          equ	648	;# 
  2109   000289                     RB1I2C          equ	649	;# 
  2110   00028B                     I2C1RXB         equ	651	;# 
  2111   00028C                     I2C1TXB         equ	652	;# 
  2112   00028D                     I2C1CNT         equ	653	;# 
  2113   00028E                     I2C1ADB0        equ	654	;# 
  2114   00028F                     I2C1ADB1        equ	655	;# 
  2115   000290                     I2C1ADR0        equ	656	;# 
  2116   000291                     I2C1ADR1        equ	657	;# 
  2117   000292                     I2C1ADR2        equ	658	;# 
  2118   000293                     I2C1ADR3        equ	659	;# 
  2119   000294                     I2C1CON0        equ	660	;# 
  2120   000295                     I2C1CON1        equ	661	;# 
  2121   000296                     I2C1CON2        equ	662	;# 
  2122   000297                     I2C1ERR         equ	663	;# 
  2123   000298                     I2C1STAT0       equ	664	;# 
  2124   000299                     I2C1STAT1       equ	665	;# 
  2125   00029A                     I2C1PIR         equ	666	;# 
  2126   00029B                     I2C1PIE         equ	667	;# 
  2127   00029C                     I2C1CLK         equ	668	;# 
  2128   00029D                     I2C1BTO         equ	669	;# 
  2129   0002A1                     U1RXB           equ	673	;# 
  2130   0002A1                     U1RXBL          equ	673	;# 
  2131   0002A2                     U1RXCHK         equ	674	;# 
  2132   0002A3                     U1TXB           equ	675	;# 
  2133   0002A3                     U1TXBL          equ	675	;# 
  2134   0002A4                     U1TXCHK         equ	676	;# 
  2135   0002A5                     U1P1            equ	677	;# 
  2136   0002A5                     U1P1L           equ	677	;# 
  2137   0002A6                     U1P1H           equ	678	;# 
  2138   0002A7                     U1P2            equ	679	;# 
  2139   0002A7                     U1P2L           equ	679	;# 
  2140   0002A8                     U1P2H           equ	680	;# 
  2141   0002A9                     U1P3            equ	681	;# 
  2142   0002A9                     U1P3L           equ	681	;# 
  2143   0002AA                     U1P3H           equ	682	;# 
  2144   0002AB                     U1CON0          equ	683	;# 
  2145   0002AC                     U1CON1          equ	684	;# 
  2146   0002AD                     U1CON2          equ	685	;# 
  2147   0002AE                     U1BRG           equ	686	;# 
  2148   0002AE                     U1BRGL          equ	686	;# 
  2149   0002AF                     U1BRGH          equ	687	;# 
  2150   0002B0                     U1FIFO          equ	688	;# 
  2151   0002B1                     U1UIR           equ	689	;# 
  2152   0002B2                     U1ERRIR         equ	690	;# 
  2153   0002B3                     U1ERRIE         equ	691	;# 
  2154   0002B4                     U2RXB           equ	692	;# 
  2155   0002B4                     U2RXBL          equ	692	;# 
  2156   0002B6                     U2TXB           equ	694	;# 
  2157   0002B6                     U2TXBL          equ	694	;# 
  2158   0002B8                     U2P1            equ	696	;# 
  2159   0002B8                     U2P1L           equ	696	;# 
  2160   0002BA                     U2P2            equ	698	;# 
  2161   0002BA                     U2P2L           equ	698	;# 
  2162   0002BC                     U2P3            equ	700	;# 
  2163   0002BC                     U2P3L           equ	700	;# 
  2164   0002BE                     U2CON0          equ	702	;# 
  2165   0002BF                     U2CON1          equ	703	;# 
  2166   0002C0                     U2CON2          equ	704	;# 
  2167   0002C1                     U2BRG           equ	705	;# 
  2168   0002C1                     U2BRGL          equ	705	;# 
  2169   0002C2                     U2BRGH          equ	706	;# 
  2170   0002C3                     U2FIFO          equ	707	;# 
  2171   0002C4                     U2UIR           equ	708	;# 
  2172   0002C5                     U2ERRIR         equ	709	;# 
  2173   0002C6                     U2ERRIE         equ	710	;# 
  2174   0002C7                     U3RXB           equ	711	;# 
  2175   0002C7                     U3RXBL          equ	711	;# 
  2176   0002C9                     U3TXB           equ	713	;# 
  2177   0002C9                     U3TXBL          equ	713	;# 
  2178   0002CB                     U3P1            equ	715	;# 
  2179   0002CB                     U3P1L           equ	715	;# 
  2180   0002CD                     U3P2            equ	717	;# 
  2181   0002CD                     U3P2L           equ	717	;# 
  2182   0002CF                     U3P3            equ	719	;# 
  2183   0002CF                     U3P3L           equ	719	;# 
  2184   0002D1                     U3CON0          equ	721	;# 
  2185   0002D2                     U3CON1          equ	722	;# 
  2186   0002D3                     U3CON2          equ	723	;# 
  2187   0002D4                     U3BRG           equ	724	;# 
  2188   0002D4                     U3BRGL          equ	724	;# 
  2189   0002D5                     U3BRGH          equ	725	;# 
  2190   0002D6                     U3FIFO          equ	726	;# 
  2191   0002D7                     U3UIR           equ	727	;# 
  2192   0002D8                     U3ERRIR         equ	728	;# 
  2193   0002D9                     U3ERRIE         equ	729	;# 
  2194   0002DA                     U4RXB           equ	730	;# 
  2195   0002DA                     U4RXBL          equ	730	;# 
  2196   0002DC                     U4TXB           equ	732	;# 
  2197   0002DC                     U4TXBL          equ	732	;# 
  2198   0002DE                     U4P1            equ	734	;# 
  2199   0002DE                     U4P1L           equ	734	;# 
  2200   0002E0                     U4P2            equ	736	;# 
  2201   0002E0                     U4P2L           equ	736	;# 
  2202   0002E2                     U4P3            equ	738	;# 
  2203   0002E2                     U4P3L           equ	738	;# 
  2204   0002E4                     U4CON0          equ	740	;# 
  2205   0002E5                     U4CON1          equ	741	;# 
  2206   0002E6                     U4CON2          equ	742	;# 
  2207   0002E7                     U4BRG           equ	743	;# 
  2208   0002E7                     U4BRGL          equ	743	;# 
  2209   0002E8                     U4BRGH          equ	744	;# 
  2210   0002E9                     U4FIFO          equ	745	;# 
  2211   0002EA                     U4UIR           equ	746	;# 
  2212   0002EB                     U4ERRIR         equ	747	;# 
  2213   0002EC                     U4ERRIE         equ	748	;# 
  2214   0002ED                     U5RXB           equ	749	;# 
  2215   0002ED                     U5RXBL          equ	749	;# 
  2216   0002EF                     U5TXB           equ	751	;# 
  2217   0002EF                     U5TXBL          equ	751	;# 
  2218   0002F1                     U5P1            equ	753	;# 
  2219   0002F1                     U5P1L           equ	753	;# 
  2220   0002F3                     U5P2            equ	755	;# 
  2221   0002F3                     U5P2L           equ	755	;# 
  2222   0002F5                     U5P3            equ	757	;# 
  2223   0002F5                     U5P3L           equ	757	;# 
  2224   0002F7                     U5CON0          equ	759	;# 
  2225   0002F8                     U5CON1          equ	760	;# 
  2226   0002F9                     U5CON2          equ	761	;# 
  2227   0002FA                     U5BRG           equ	762	;# 
  2228   0002FA                     U5BRGL          equ	762	;# 
  2229   0002FB                     U5BRGH          equ	763	;# 
  2230   0002FC                     U5FIFO          equ	764	;# 
  2231   0002FD                     U5UIR           equ	765	;# 
  2232   0002FE                     U5ERRIR         equ	766	;# 
  2233   0002FF                     U5ERRIE         equ	767	;# 
  2234   000300                     SMT1TMR         equ	768	;# 
  2235   000300                     SMT1TMRL        equ	768	;# 
  2236   000301                     SMT1TMRH        equ	769	;# 
  2237   000302                     SMT1TMRU        equ	770	;# 
  2238   000303                     SMT1CPR         equ	771	;# 
  2239   000303                     SMT1CPRL        equ	771	;# 
  2240   000304                     SMT1CPRH        equ	772	;# 
  2241   000305                     SMT1CPRU        equ	773	;# 
  2242   000306                     SMT1CPW         equ	774	;# 
  2243   000306                     SMT1CPWL        equ	774	;# 
  2244   000307                     SMT1CPWH        equ	775	;# 
  2245   000308                     SMT1CPWU        equ	776	;# 
  2246   000309                     SMT1PR          equ	777	;# 
  2247   000309                     SMT1PRL         equ	777	;# 
  2248   00030A                     SMT1PRH         equ	778	;# 
  2249   00030B                     SMT1PRU         equ	779	;# 
  2250   00030C                     SMT1CON0        equ	780	;# 
  2251   00030D                     SMT1CON1        equ	781	;# 
  2252   00030E                     SMT1STAT        equ	782	;# 
  2253   00030F                     SMT1CLK         equ	783	;# 
  2254   000310                     SMT1SIG         equ	784	;# 
  2255   000311                     SMT1WIN         equ	785	;# 
  2256   000318                     TMR0L           equ	792	;# 
  2257   000318                     TMR0            equ	792	;# 
  2258   000319                     TMR0H           equ	793	;# 
  2259   000319                     PR0             equ	793	;# 
  2260   00031A                     T0CON0          equ	794	;# 
  2261   00031B                     T0CON1          equ	795	;# 
  2262   00031C                     TMR1            equ	796	;# 
  2263   00031C                     TMR1L           equ	796	;# 
  2264   00031D                     TMR1H           equ	797	;# 
  2265   00031E                     T1CON           equ	798	;# 
  2266   00031E                     TMR1CON         equ	798	;# 
  2267   00031F                     T1GCON          equ	799	;# 
  2268   00031F                     TMR1GCON        equ	799	;# 
  2269   000320                     T1GATE          equ	800	;# 
  2270   000320                     TMR1GATE        equ	800	;# 
  2271   000321                     T1CLK           equ	801	;# 
  2272   000321                     TMR1CLK         equ	801	;# 
  2273   000321                     PR1             equ	801	;# 
  2274   000322                     T2TMR           equ	802	;# 
  2275   000322                     TMR2            equ	802	;# 
  2276   000323                     T2PR            equ	803	;# 
  2277   000323                     PR2             equ	803	;# 
  2278   000324                     T2CON           equ	804	;# 
  2279   000325                     T2HLT           equ	805	;# 
  2280   000326                     T2CLKCON        equ	806	;# 
  2281   000326                     T2CLK           equ	806	;# 
  2282   000327                     T2RST           equ	807	;# 
  2283   000328                     TMR3            equ	808	;# 
  2284   000328                     TMR3L           equ	808	;# 
  2285   000329                     TMR3H           equ	809	;# 
  2286   00032A                     T3CON           equ	810	;# 
  2287   00032A                     TMR3CON         equ	810	;# 
  2288   00032B                     T3GCON          equ	811	;# 
  2289   00032B                     TMR3GCON        equ	811	;# 
  2290   00032C                     T3GATE          equ	812	;# 
  2291   00032C                     TMR3GATE        equ	812	;# 
  2292   00032D                     T3CLK           equ	813	;# 
  2293   00032D                     TMR3CLK         equ	813	;# 
  2294   00032D                     PR3             equ	813	;# 
  2295   00032E                     T4TMR           equ	814	;# 
  2296   00032E                     TMR4            equ	814	;# 
  2297   00032F                     T4PR            equ	815	;# 
  2298   00032F                     PR4             equ	815	;# 
  2299   000330                     T4CON           equ	816	;# 
  2300   000331                     T4HLT           equ	817	;# 
  2301   000332                     T4CLKCON        equ	818	;# 
  2302   000332                     T4CLK           equ	818	;# 
  2303   000333                     T4RST           equ	819	;# 
  2304   000334                     TMR5            equ	820	;# 
  2305   000334                     TMR5L           equ	820	;# 
  2306   000335                     TMR5H           equ	821	;# 
  2307   000336                     T5CON           equ	822	;# 
  2308   000336                     TMR5CON         equ	822	;# 
  2309   000337                     T5GCON          equ	823	;# 
  2310   000337                     TMR5GCON        equ	823	;# 
  2311   000338                     T5GATE          equ	824	;# 
  2312   000338                     TMR5GATE        equ	824	;# 
  2313   000339                     T5CLK           equ	825	;# 
  2314   000339                     TMR5CLK         equ	825	;# 
  2315   000339                     PR5             equ	825	;# 
  2316   00033A                     T6TMR           equ	826	;# 
  2317   00033A                     TMR6            equ	826	;# 
  2318   00033B                     T6PR            equ	827	;# 
  2319   00033B                     PR6             equ	827	;# 
  2320   00033C                     T6CON           equ	828	;# 
  2321   00033D                     T6HLT           equ	829	;# 
  2322   00033E                     T6CLKCON        equ	830	;# 
  2323   00033E                     T6CLK           equ	830	;# 
  2324   00033F                     T6RST           equ	831	;# 
  2325   000340                     CCPR1           equ	832	;# 
  2326   000340                     CCPR1L          equ	832	;# 
  2327   000341                     CCPR1H          equ	833	;# 
  2328   000342                     CCP1CON         equ	834	;# 
  2329   000343                     CCP1CAP         equ	835	;# 
  2330   000344                     CCPR2           equ	836	;# 
  2331   000344                     CCPR2L          equ	836	;# 
  2332   000345                     CCPR2H          equ	837	;# 
  2333   000346                     CCP2CON         equ	838	;# 
  2334   000347                     CCP2CAP         equ	839	;# 
  2335   000348                     CCPR3           equ	840	;# 
  2336   000348                     CCPR3L          equ	840	;# 
  2337   000349                     CCPR3H          equ	841	;# 
  2338   00034A                     CCP3CON         equ	842	;# 
  2339   00034B                     CCP3CAP         equ	843	;# 
  2340   00034C                     CCPTMRS0        equ	844	;# 
  2341   00034F                     CRCDATA         equ	847	;# 
  2342   00034F                     CRCDATL         equ	847	;# 
  2343   000350                     CRCDATH         equ	848	;# 
  2344   000351                     CRCACC          equ	849	;# 
  2345   000351                     CRCACCL         equ	849	;# 
  2346   000352                     CRCACCH         equ	850	;# 
  2347   000353                     CRCSHFT         equ	851	;# 
  2348   000353                     CRCSHIFTL       equ	851	;# 
  2349   000354                     CRCSHIFTH       equ	852	;# 
  2350   000355                     CRCXOR          equ	853	;# 
  2351   000355                     CRCXORL         equ	853	;# 
  2352   000356                     CRCXORH         equ	854	;# 
  2353   000357                     CRCCON0         equ	855	;# 
  2354   000358                     CRCCON1         equ	856	;# 
  2355   00035A                     SCANLADR        equ	858	;# 
  2356   00035A                     SCANLADRL       equ	858	;# 
  2357   00035B                     SCANLADRH       equ	859	;# 
  2358   00035C                     SCANLADRU       equ	860	;# 
  2359   00035D                     SCANHADR        equ	861	;# 
  2360   00035D                     SCANHADRL       equ	861	;# 
  2361   00035E                     SCANHADRH       equ	862	;# 
  2362   00035F                     SCANHADRU       equ	863	;# 
  2363   000360                     SCANCON0        equ	864	;# 
  2364   000361                     SCANTRIG        equ	865	;# 
  2365   000362                     IPR0            equ	866	;# 
  2366   000363                     IPR1            equ	867	;# 
  2367   000364                     IPR2            equ	868	;# 
  2368   000365                     IPR3            equ	869	;# 
  2369   000366                     IPR4            equ	870	;# 
  2370   000367                     IPR5            equ	871	;# 
  2371   000368                     IPR6            equ	872	;# 
  2372   000369                     IPR7            equ	873	;# 
  2373   00036A                     IPR8            equ	874	;# 
  2374   00036B                     IPR9            equ	875	;# 
  2375   00036C                     IPR10           equ	876	;# 
  2376   00036D                     IPR11           equ	877	;# 
  2377   00036E                     IPR12           equ	878	;# 
  2378   00036F                     IPR13           equ	879	;# 
  2379   000370                     IPR14           equ	880	;# 
  2380   000371                     IPR15           equ	881	;# 
  2381   000373                     STATUS_CSHAD    equ	883	;# 
  2382   000374                     WREG_CSHAD      equ	884	;# 
  2383   000375                     BSR_CSHAD       equ	885	;# 
  2384   000376                     SHADCON         equ	886	;# 
  2385   000377                     STATUS_SHAD     equ	887	;# 
  2386   000378                     WREG_SHAD       equ	888	;# 
  2387   000379                     BSR_SHAD        equ	889	;# 
  2388   00037A                     PCLATH_SHAD     equ	890	;# 
  2389   00037B                     PCLATU_SHAD     equ	891	;# 
  2390   00037C                     FSR0SH          equ	892	;# 
  2391   00037C                     FSR0L_SHAD      equ	892	;# 
  2392   00037D                     FSR0H_SHAD      equ	893	;# 
  2393   00037E                     FSR1SH          equ	894	;# 
  2394   00037E                     FSR1L_SHAD      equ	894	;# 
  2395   00037F                     FSR1H_SHAD      equ	895	;# 
  2396   000380                     FSR2SH          equ	896	;# 
  2397   000380                     FSR2L_SHAD      equ	896	;# 
  2398   000381                     FSR2H_SHAD      equ	897	;# 
  2399   000382                     PRODSH          equ	898	;# 
  2400   000382                     PRODL_SHAD      equ	898	;# 
  2401   000383                     PRODH_SHAD      equ	899	;# 
  2402   0003BC                     CWG1CLK         equ	956	;# 
  2403   0003BC                     CWG1CLKCON      equ	956	;# 
  2404   0003BD                     CWG1ISM         equ	957	;# 
  2405   0003BD                     CWG1DAT         equ	957	;# 
  2406   0003BE                     CWG1DBR         equ	958	;# 
  2407   0003BF                     CWG1DBF         equ	959	;# 
  2408   0003C0                     CWG1CON0        equ	960	;# 
  2409   0003C1                     CWG1CON1        equ	961	;# 
  2410   0003C2                     CWG1AS0         equ	962	;# 
  2411   0003C3                     CWG1AS1         equ	963	;# 
  2412   0003C4                     CWG1STR         equ	964	;# 
  2413   0003C5                     CWG2CLK         equ	965	;# 
  2414   0003C5                     CWG2CLKCON      equ	965	;# 
  2415   0003C6                     CWG2ISM         equ	966	;# 
  2416   0003C6                     CWG2DAT         equ	966	;# 
  2417   0003C7                     CWG2DBR         equ	967	;# 
  2418   0003C8                     CWG2DBF         equ	968	;# 
  2419   0003C9                     CWG2CON0        equ	969	;# 
  2420   0003CA                     CWG2CON1        equ	970	;# 
  2421   0003CB                     CWG2AS0         equ	971	;# 
  2422   0003CC                     CWG2AS1         equ	972	;# 
  2423   0003CD                     CWG2STR         equ	973	;# 
  2424   0003CE                     CWG3CLK         equ	974	;# 
  2425   0003CE                     CWG3CLKCON      equ	974	;# 
  2426   0003CF                     CWG3ISM         equ	975	;# 
  2427   0003CF                     CWG3DAT         equ	975	;# 
  2428   0003D0                     CWG3DBR         equ	976	;# 
  2429   0003D1                     CWG3DBF         equ	977	;# 
  2430   0003D2                     CWG3CON0        equ	978	;# 
  2431   0003D3                     CWG3CON1        equ	979	;# 
  2432   0003D4                     CWG3AS0         equ	980	;# 
  2433   0003D5                     CWG3AS1         equ	981	;# 
  2434   0003D6                     CWG3STR         equ	982	;# 
  2435   0003D7                     FVRCON          equ	983	;# 
  2436   0003D8                     ADCPCON         equ	984	;# 
  2437   0003D8                     ADCP            equ	984	;# 
  2438   0003D9                     ADLTH           equ	985	;# 
  2439   0003D9                     ADLTHL          equ	985	;# 
  2440   0003DA                     ADLTHH          equ	986	;# 
  2441   0003DB                     ADUTH           equ	987	;# 
  2442   0003DB                     ADUTHL          equ	987	;# 
  2443   0003DC                     ADUTHH          equ	988	;# 
  2444   0003DD                     ADERR           equ	989	;# 
  2445   0003DD                     ADERRL          equ	989	;# 
  2446   0003DE                     ADERRH          equ	990	;# 
  2447   0003DF                     ADSTPT          equ	991	;# 
  2448   0003DF                     ADSTPTL         equ	991	;# 
  2449   0003E0                     ADSTPTH         equ	992	;# 
  2450   0003E1                     ADFLTR          equ	993	;# 
  2451   0003E1                     ADFLTRL         equ	993	;# 
  2452   0003E2                     ADFLTRH         equ	994	;# 
  2453   0003E3                     ADACC           equ	995	;# 
  2454   0003E3                     ADACCL          equ	995	;# 
  2455   0003E4                     ADACCH          equ	996	;# 
  2456   0003E5                     ADACCU          equ	997	;# 
  2457   0003E6                     ADCNT           equ	998	;# 
  2458   0003E7                     ADRPT           equ	999	;# 
  2459   0003E8                     ADPREV          equ	1000	;# 
  2460   0003E8                     ADPREVL         equ	1000	;# 
  2461   0003E9                     ADPREVH         equ	1001	;# 
  2462   0003EA                     ADRES           equ	1002	;# 
  2463   0003EA                     ADRESL          equ	1002	;# 
  2464   0003EB                     ADRESH          equ	1003	;# 
  2465   0003EC                     ADPCH           equ	1004	;# 
  2466   0003EE                     ADACQ           equ	1006	;# 
  2467   0003EE                     ADACQL          equ	1006	;# 
  2468   0003EF                     ADACQH          equ	1007	;# 
  2469   0003F0                     ADCAP           equ	1008	;# 
  2470   0003F1                     ADPRE           equ	1009	;# 
  2471   0003F1                     ADPREL          equ	1009	;# 
  2472   0003F2                     ADPREH          equ	1010	;# 
  2473   0003F3                     ADCON0          equ	1011	;# 
  2474   0003F4                     ADCON1          equ	1012	;# 
  2475   0003F5                     ADCON2          equ	1013	;# 
  2476   0003F6                     ADCON3          equ	1014	;# 
  2477   0003F7                     ADSTAT          equ	1015	;# 
  2478   0003F8                     ADREF           equ	1016	;# 
  2479   0003F9                     ADACT           equ	1017	;# 
  2480   0003FA                     ADCLK           equ	1018	;# 
  2481   000400                     ANSELA          equ	1024	;# 
  2482   000401                     WPUA            equ	1025	;# 
  2483   000402                     ODCONA          equ	1026	;# 
  2484   000403                     SLRCONA         equ	1027	;# 
  2485   000404                     INLVLA          equ	1028	;# 
  2486   000405                     IOCAP           equ	1029	;# 
  2487   000406                     IOCAN           equ	1030	;# 
  2488   000407                     IOCAF           equ	1031	;# 
  2489   000408                     ANSELB          equ	1032	;# 
  2490   000409                     WPUB            equ	1033	;# 
  2491   00040A                     ODCONB          equ	1034	;# 
  2492   00040B                     SLRCONB         equ	1035	;# 
  2493   00040C                     INLVLB          equ	1036	;# 
  2494   00040D                     IOCBP           equ	1037	;# 
  2495   00040E                     IOCBN           equ	1038	;# 
  2496   00040F                     IOCBF           equ	1039	;# 
  2497   000410                     ANSELC          equ	1040	;# 
  2498   000411                     WPUC            equ	1041	;# 
  2499   000412                     ODCONC          equ	1042	;# 
  2500   000413                     SLRCONC         equ	1043	;# 
  2501   000414                     INLVLC          equ	1044	;# 
  2502   000415                     IOCCP           equ	1045	;# 
  2503   000416                     IOCCN           equ	1046	;# 
  2504   000417                     IOCCF           equ	1047	;# 
  2505   000418                     ANSELD          equ	1048	;# 
  2506   000419                     WPUD            equ	1049	;# 
  2507   00041A                     ODCOND          equ	1050	;# 
  2508   00041B                     SLRCOND         equ	1051	;# 
  2509   00041C                     INLVLD          equ	1052	;# 
  2510   000420                     ANSELE          equ	1056	;# 
  2511   000421                     WPUE            equ	1057	;# 
  2512   000422                     ODCONE          equ	1058	;# 
  2513   000423                     SLRCONE         equ	1059	;# 
  2514   000424                     INLVLE          equ	1060	;# 
  2515   000425                     IOCEP           equ	1061	;# 
  2516   000426                     IOCEN           equ	1062	;# 
  2517   000427                     IOCEF           equ	1063	;# 
  2518   000428                     ANSELF          equ	1064	;# 
  2519   000429                     WPUF            equ	1065	;# 
  2520   00042A                     ODCONF          equ	1066	;# 
  2521   00042B                     SLRCONF         equ	1067	;# 
  2522   00042C                     INLVLF          equ	1068	;# 
  2523   000440                     NCO1ACC         equ	1088	;# 
  2524   000440                     NCO1ACCL        equ	1088	;# 
  2525   000441                     NCO1ACCH        equ	1089	;# 
  2526   000442                     NCO1ACCU        equ	1090	;# 
  2527   000443                     NCO1INC         equ	1091	;# 
  2528   000443                     NCO1INCL        equ	1091	;# 
  2529   000444                     NCO1INCH        equ	1092	;# 
  2530   000445                     NCO1INCU        equ	1093	;# 
  2531   000446                     NCO1CON         equ	1094	;# 
  2532   000447                     NCO1CLK         equ	1095	;# 
  2533   000448                     NCO2ACC         equ	1096	;# 
  2534   000448                     NCO2ACCL        equ	1096	;# 
  2535   000449                     NCO2ACCH        equ	1097	;# 
  2536   00044A                     NCO2ACCU        equ	1098	;# 
  2537   00044B                     NCO2INC         equ	1099	;# 
  2538   00044B                     NCO2INCL        equ	1099	;# 
  2539   00044C                     NCO2INCH        equ	1100	;# 
  2540   00044D                     NCO2INCU        equ	1101	;# 
  2541   00044E                     NCO2CON         equ	1102	;# 
  2542   00044F                     NCO2CLK         equ	1103	;# 
  2543   000450                     NCO3ACC         equ	1104	;# 
  2544   000450                     NCO3ACCL        equ	1104	;# 
  2545   000451                     NCO3ACCH        equ	1105	;# 
  2546   000452                     NCO3ACCU        equ	1106	;# 
  2547   000453                     NCO3INC         equ	1107	;# 
  2548   000453                     NCO3INCL        equ	1107	;# 
  2549   000454                     NCO3INCH        equ	1108	;# 
  2550   000455                     NCO3INCU        equ	1109	;# 
  2551   000456                     NCO3CON         equ	1110	;# 
  2552   000457                     NCO3CLK         equ	1111	;# 
  2553   000459                     IVTLOCK         equ	1113	;# 
  2554   00045A                     IVTAD           equ	1114	;# 
  2555   00045A                     IVTADL          equ	1114	;# 
  2556   00045B                     IVTADH          equ	1115	;# 
  2557   00045C                     IVTADU          equ	1116	;# 
  2558   00045D                     IVTBASE         equ	1117	;# 
  2559   00045D                     IVTBASEL        equ	1117	;# 
  2560   00045E                     IVTBASEH        equ	1118	;# 
  2561   00045F                     IVTBASEU        equ	1119	;# 
  2562   000460                     PWM1ERS         equ	1120	;# 
  2563   000461                     PWM1CLK         equ	1121	;# 
  2564   000462                     PWM1LDS         equ	1122	;# 
  2565   000463                     PWM1PR          equ	1123	;# 
  2566   000463                     PWM1PRL         equ	1123	;# 
  2567   000464                     PWM1PRH         equ	1124	;# 
  2568   000465                     PWM1CPRE        equ	1125	;# 
  2569   000466                     PWM1PIPOS       equ	1126	;# 
  2570   000467                     PWM1GIR         equ	1127	;# 
  2571   000468                     PWM1GIE         equ	1128	;# 
  2572   000469                     PWM1CON         equ	1129	;# 
  2573   00046A                     PWM1S1CFG       equ	1130	;# 
  2574   00046B                     PWM1S1P1        equ	1131	;# 
  2575   00046B                     PWM1S1P1L       equ	1131	;# 
  2576   00046C                     PWM1S1P1H       equ	1132	;# 
  2577   00046D                     PWM1S1P2        equ	1133	;# 
  2578   00046D                     PWM1S1P2L       equ	1133	;# 
  2579   00046E                     PWM1S1P2H       equ	1134	;# 
  2580   00046F                     PWM2ERS         equ	1135	;# 
  2581   000470                     PWM2CLK         equ	1136	;# 
  2582   000471                     PWM2LDS         equ	1137	;# 
  2583   000472                     PWM2PR          equ	1138	;# 
  2584   000472                     PWM2PRL         equ	1138	;# 
  2585   000473                     PWM2PRH         equ	1139	;# 
  2586   000474                     PWM2CPRE        equ	1140	;# 
  2587   000475                     PWM2PIPOS       equ	1141	;# 
  2588   000476                     PWM2GIR         equ	1142	;# 
  2589   000477                     PWM2GIE         equ	1143	;# 
  2590   000478                     PWM2CON         equ	1144	;# 
  2591   000479                     PWM2S1CFG       equ	1145	;# 
  2592   00047A                     PWM2S1P1        equ	1146	;# 
  2593   00047A                     PWM2S1P1L       equ	1146	;# 
  2594   00047B                     PWM2S1P1H       equ	1147	;# 
  2595   00047C                     PWM2S1P2        equ	1148	;# 
  2596   00047C                     PWM2S1P2L       equ	1148	;# 
  2597   00047D                     PWM2S1P2H       equ	1149	;# 
  2598   00047E                     PWM3ERS         equ	1150	;# 
  2599   00047F                     PWM3CLK         equ	1151	;# 
  2600   000480                     PWM3LDS         equ	1152	;# 
  2601   000481                     PWM3PR          equ	1153	;# 
  2602   000481                     PWM3PRL         equ	1153	;# 
  2603   000482                     PWM3PRH         equ	1154	;# 
  2604   000483                     PWM3CPRE        equ	1155	;# 
  2605   000484                     PWM3PIPOS       equ	1156	;# 
  2606   000485                     PWM3GIR         equ	1157	;# 
  2607   000486                     PWM3GIE         equ	1158	;# 
  2608   000487                     PWM3CON         equ	1159	;# 
  2609   000488                     PWM3S1CFG       equ	1160	;# 
  2610   000489                     PWM3S1P1        equ	1161	;# 
  2611   000489                     PWM3S1P1L       equ	1161	;# 
  2612   00048A                     PWM3S1P1H       equ	1162	;# 
  2613   00048B                     PWM3S1P2        equ	1163	;# 
  2614   00048B                     PWM3S1P2L       equ	1163	;# 
  2615   00048C                     PWM3S1P2H       equ	1164	;# 
  2616   00049C                     PWMLOAD         equ	1180	;# 
  2617   00049D                     PWMEN           equ	1181	;# 
  2618   00049E                     PIE0            equ	1182	;# 
  2619   00049F                     PIE1            equ	1183	;# 
  2620   0004A0                     PIE2            equ	1184	;# 
  2621   0004A1                     PIE3            equ	1185	;# 
  2622   0004A2                     PIE4            equ	1186	;# 
  2623   0004A3                     PIE5            equ	1187	;# 
  2624   0004A4                     PIE6            equ	1188	;# 
  2625   0004A5                     PIE7            equ	1189	;# 
  2626   0004A6                     PIE8            equ	1190	;# 
  2627   0004A7                     PIE9            equ	1191	;# 
  2628   0004A8                     PIE10           equ	1192	;# 
  2629   0004A9                     PIE11           equ	1193	;# 
  2630   0004AA                     PIE12           equ	1194	;# 
  2631   0004AB                     PIE13           equ	1195	;# 
  2632   0004AC                     PIE14           equ	1196	;# 
  2633   0004AD                     PIE15           equ	1197	;# 
  2634   0004AE                     PIR0            equ	1198	;# 
  2635   0004AF                     PIR1            equ	1199	;# 
  2636   0004B0                     PIR2            equ	1200	;# 
  2637   0004B1                     PIR3            equ	1201	;# 
  2638   0004B2                     PIR4            equ	1202	;# 
  2639   0004B3                     PIR5            equ	1203	;# 
  2640   0004B4                     PIR6            equ	1204	;# 
  2641   0004B5                     PIR7            equ	1205	;# 
  2642   0004B6                     PIR8            equ	1206	;# 
  2643   0004B7                     PIR9            equ	1207	;# 
  2644   0004B8                     PIR10           equ	1208	;# 
  2645   0004B9                     PIR11           equ	1209	;# 
  2646   0004BA                     PIR12           equ	1210	;# 
  2647   0004BB                     PIR13           equ	1211	;# 
  2648   0004BC                     PIR14           equ	1212	;# 
  2649   0004BD                     PIR15           equ	1213	;# 
  2650   0004BE                     LATA            equ	1214	;# 
  2651   0004BF                     LATB            equ	1215	;# 
  2652   0004C0                     LATC            equ	1216	;# 
  2653   0004C1                     LATD            equ	1217	;# 
  2654   0004C2                     LATE            equ	1218	;# 
  2655   0004C3                     LATF            equ	1219	;# 
  2656   0004C6                     TRISA           equ	1222	;# 
  2657   0004C7                     TRISB           equ	1223	;# 
  2658   0004C8                     TRISC           equ	1224	;# 
  2659   0004C9                     TRISD           equ	1225	;# 
  2660   0004CA                     TRISE           equ	1226	;# 
  2661   0004CB                     TRISF           equ	1227	;# 
  2662   0004CE                     PORTA           equ	1230	;# 
  2663   0004CF                     PORTB           equ	1231	;# 
  2664   0004D0                     PORTC           equ	1232	;# 
  2665   0004D1                     PORTD           equ	1233	;# 
  2666   0004D2                     PORTE           equ	1234	;# 
  2667   0004D3                     PORTF           equ	1235	;# 
  2668   0004D6                     INTCON0         equ	1238	;# 
  2669   0004D7                     INTCON1         equ	1239	;# 
  2670   0004D8                     STATUS          equ	1240	;# 
  2671   0004D9                     FSR2            equ	1241	;# 
  2672   0004D9                     FSR2L           equ	1241	;# 
  2673   0004DA                     FSR2H           equ	1242	;# 
  2674   0004DB                     PLUSW2          equ	1243	;# 
  2675   0004DC                     PREINC2         equ	1244	;# 
  2676   0004DD                     POSTDEC2        equ	1245	;# 
  2677   0004DE                     POSTINC2        equ	1246	;# 
  2678   0004DF                     INDF2           equ	1247	;# 
  2679   0004E0                     BSR             equ	1248	;# 
  2680   0004E1                     FSR1            equ	1249	;# 
  2681   0004E1                     FSR1L           equ	1249	;# 
  2682   0004E2                     FSR1H           equ	1250	;# 
  2683   0004E3                     PLUSW1          equ	1251	;# 
  2684   0004E4                     PREINC1         equ	1252	;# 
  2685   0004E5                     POSTDEC1        equ	1253	;# 
  2686   0004E6                     POSTINC1        equ	1254	;# 
  2687   0004E7                     INDF1           equ	1255	;# 
  2688   0004E8                     WREG            equ	1256	;# 
  2689   0004E9                     FSR0            equ	1257	;# 
  2690   0004E9                     FSR0L           equ	1257	;# 
  2691   0004EA                     FSR0H           equ	1258	;# 
  2692   0004EB                     PLUSW0          equ	1259	;# 
  2693   0004EC                     PREINC0         equ	1260	;# 
  2694   0004ED                     POSTDEC0        equ	1261	;# 
  2695   0004EE                     POSTINC0        equ	1262	;# 
  2696   0004EF                     INDF0           equ	1263	;# 
  2697   0004F0                     PCON0           equ	1264	;# 
  2698   0004F1                     PCON1           equ	1265	;# 
  2699   0004F2                     CPUDOZE         equ	1266	;# 
  2700   0004F3                     PROD            equ	1267	;# 
  2701   0004F3                     PRODL           equ	1267	;# 
  2702   0004F4                     PRODH           equ	1268	;# 
  2703   0004F5                     TABLAT          equ	1269	;# 
  2704   0004F6                     TBLPTR          equ	1270	;# 
  2705   0004F6                     TBLPTRL         equ	1270	;# 
  2706   0004F7                     TBLPTRH         equ	1271	;# 
  2707   0004F8                     TBLPTRU         equ	1272	;# 
  2708   0004F9                     PCLAT           equ	1273	;# 
  2709   0004F9                     PCL             equ	1273	;# 
  2710   0004FA                     PCLATH          equ	1274	;# 
  2711   0004FB                     PCLATU          equ	1275	;# 
  2712   0004FC                     STKPTR          equ	1276	;# 
  2713   0004FD                     TOS             equ	1277	;# 
  2714   0004FD                     TOSL            equ	1277	;# 
  2715   0004FE                     TOSH            equ	1278	;# 
  2716   0004FF                     TOSU            equ	1279	;# 
  2717   000039                     CLKRCON         equ	57	;# 
  2718   00003A                     CLKRCLK         equ	58	;# 
  2719   000040                     NVMCON0         equ	64	;# 
  2720   000041                     NVMCON1         equ	65	;# 
  2721   000042                     NVMLOCK         equ	66	;# 
  2722   000043                     NVMADR          equ	67	;# 
  2723   000043                     NVMADRL         equ	67	;# 
  2724   000044                     NVMADRH         equ	68	;# 
  2725   000045                     NVMADRU         equ	69	;# 
  2726   000046                     NVMDAT          equ	70	;# 
  2727   000046                     NVMDATL         equ	70	;# 
  2728   000047                     NVMDATH         equ	71	;# 
  2729   000048                     VREGCON         equ	72	;# 
  2730   000049                     BORCON          equ	73	;# 
  2731   00004A                     HLVDCON0        equ	74	;# 
  2732   00004B                     HLVDCON1        equ	75	;# 
  2733   00004C                     ZCDCON          equ	76	;# 
  2734   000060                     PMD0            equ	96	;# 
  2735   000061                     PMD1            equ	97	;# 
  2736   000063                     PMD3            equ	99	;# 
  2737   000064                     PMD4            equ	100	;# 
  2738   000065                     PMD5            equ	101	;# 
  2739   000066                     PMD6            equ	102	;# 
  2740   000067                     PMD7            equ	103	;# 
  2741   000068                     PMD8            equ	104	;# 
  2742   00006A                     MD1CON0         equ	106	;# 
  2743   00006B                     MD1CON1         equ	107	;# 
  2744   00006C                     MD1SRC          equ	108	;# 
  2745   00006D                     MD1CARL         equ	109	;# 
  2746   00006E                     MD1CARH         equ	110	;# 
  2747   00006F                     CMOUT           equ	111	;# 
  2748   000070                     CM1CON0         equ	112	;# 
  2749   000071                     CM1CON1         equ	113	;# 
  2750   000072                     CM1NCH          equ	114	;# 
  2751   000073                     CM1PCH          equ	115	;# 
  2752   000074                     CM2CON0         equ	116	;# 
  2753   000075                     CM2CON1         equ	117	;# 
  2754   000076                     CM2NCH          equ	118	;# 
  2755   000077                     CM2PCH          equ	119	;# 
  2756   000078                     WDTCON0         equ	120	;# 
  2757   000079                     WDTCON1         equ	121	;# 
  2758   00007A                     WDTPS           equ	122	;# 
  2759   00007A                     WDTPSL          equ	122	;# 
  2760   00007B                     WDTPSH          equ	123	;# 
  2761   00007C                     WDTTMR          equ	124	;# 
  2762   00007D                     DAC1DAT         equ	125	;# 
  2763   00007D                     DAC1DATL        equ	125	;# 
  2764   00007F                     DAC1CON         equ	127	;# 
  2765   000080                     SPI1RXB         equ	128	;# 
  2766   000081                     SPI1TXB         equ	129	;# 
  2767   000082                     SPI1TCNT        equ	130	;# 
  2768   000082                     SPI1TCNTL       equ	130	;# 
  2769   000083                     SPI1TCNTH       equ	131	;# 
  2770   000084                     SPI1CON0        equ	132	;# 
  2771   000085                     SPI1CON1        equ	133	;# 
  2772   000086                     SPI1CON2        equ	134	;# 
  2773   000087                     SPI1STATUS      equ	135	;# 
  2774   000088                     SPI1TWIDTH      equ	136	;# 
  2775   000089                     SPI1BAUD        equ	137	;# 
  2776   00008A                     SPI1INTF        equ	138	;# 
  2777   00008B                     SPI1INTE        equ	139	;# 
  2778   00008C                     SPI1CLK         equ	140	;# 
  2779   00008D                     SPI2RXB         equ	141	;# 
  2780   00008E                     SPI2TXB         equ	142	;# 
  2781   00008F                     SPI2TCNT        equ	143	;# 
  2782   00008F                     SPI2TCNTL       equ	143	;# 
  2783   000090                     SPI2TCNTH       equ	144	;# 
  2784   000091                     SPI2CON0        equ	145	;# 
  2785   000092                     SPI2CON1        equ	146	;# 
  2786   000093                     SPI2CON2        equ	147	;# 
  2787   000094                     SPI2STATUS      equ	148	;# 
  2788   000095                     SPI2TWIDTH      equ	149	;# 
  2789   000096                     SPI2BAUD        equ	150	;# 
  2790   000097                     SPI2INTF        equ	151	;# 
  2791   000098                     SPI2INTE        equ	152	;# 
  2792   000099                     SPI2CLK         equ	153	;# 
  2793   0000AC                     ACTCON          equ	172	;# 
  2794   0000AD                     OSCCON1         equ	173	;# 
  2795   0000AE                     OSCCON2         equ	174	;# 
  2796   0000AF                     OSCCON3         equ	175	;# 
  2797   0000B0                     OSCTUNE         equ	176	;# 
  2798   0000B1                     OSCFRQ          equ	177	;# 
  2799   0000B1                     OSCFREQ         equ	177	;# 
  2800   0000B2                     OSCSTAT         equ	178	;# 
  2801   0000B2                     OSCSTAT1        equ	178	;# 
  2802   0000B3                     OSCEN           equ	179	;# 
  2803   0000B4                     PRLOCK          equ	180	;# 
  2804   0000B5                     SCANPR          equ	181	;# 
  2805   0000B6                     DMA1PR          equ	182	;# 
  2806   0000B7                     DMA2PR          equ	183	;# 
  2807   0000B8                     DMA3PR          equ	184	;# 
  2808   0000B9                     DMA4PR          equ	185	;# 
  2809   0000BA                     DMA5PR          equ	186	;# 
  2810   0000BB                     DMA6PR          equ	187	;# 
  2811   0000BE                     MAINPR          equ	190	;# 
  2812   0000BF                     ISRPR           equ	191	;# 
  2813   0000D4                     CLCDATA         equ	212	;# 
  2814   0000D5                     CLCSELECT       equ	213	;# 
  2815   0000D6                     CLCnCON         equ	214	;# 
  2816   0000D7                     CLCnPOL         equ	215	;# 
  2817   0000D8                     CLCnSEL0        equ	216	;# 
  2818   0000D9                     CLCnSEL1        equ	217	;# 
  2819   0000DA                     CLCnSEL2        equ	218	;# 
  2820   0000DB                     CLCnSEL3        equ	219	;# 
  2821   0000DC                     CLCnGLS0        equ	220	;# 
  2822   0000DD                     CLCnGLS1        equ	221	;# 
  2823   0000DE                     CLCnGLS2        equ	222	;# 
  2824   0000DF                     CLCnGLS3        equ	223	;# 
  2825   0000E8                     DMASELECT       equ	232	;# 
  2826   0000E9                     DMAnBUF         equ	233	;# 
  2827   0000EA                     DMAnDCNT        equ	234	;# 
  2828   0000EA                     DMAnDCNTL       equ	234	;# 
  2829   0000EB                     DMAnDCNTH       equ	235	;# 
  2830   0000EC                     DMAnDPTR        equ	236	;# 
  2831   0000EC                     DMAnDPTRL       equ	236	;# 
  2832   0000ED                     DMAnDPTRH       equ	237	;# 
  2833   0000EE                     DMAnDSZ         equ	238	;# 
  2834   0000EE                     DMAnDSZL        equ	238	;# 
  2835   0000EF                     DMAnDSZH        equ	239	;# 
  2836   0000F0                     DMAnDSA         equ	240	;# 
  2837   0000F0                     DMAnDSAL        equ	240	;# 
  2838   0000F1                     DMAnDSAH        equ	241	;# 
  2839   0000F2                     DMAnSCNT        equ	242	;# 
  2840   0000F2                     DMAnSCNTL       equ	242	;# 
  2841   0000F3                     DMAnSCNTH       equ	243	;# 
  2842   0000F4                     DMAnSPTR        equ	244	;# 
  2843   0000F4                     DMAnSPTRL       equ	244	;# 
  2844   0000F5                     DMAnSPTRH       equ	245	;# 
  2845   0000F6                     DMAnSPTRU       equ	246	;# 
  2846   0000F7                     DMAnSSZ         equ	247	;# 
  2847   0000F7                     DMAnSSZL        equ	247	;# 
  2848   0000F8                     DMAnSSZH        equ	248	;# 
  2849   0000F9                     DMAnSSA         equ	249	;# 
  2850   0000F9                     DMAnSSAL        equ	249	;# 
  2851   0000FA                     DMAnSSAH        equ	250	;# 
  2852   0000FB                     DMAnSSAU        equ	251	;# 
  2853   0000FC                     DMAnCON0        equ	252	;# 
  2854   0000FD                     DMAnCON1        equ	253	;# 
  2855   0000FE                     DMAnAIRQ        equ	254	;# 
  2856   0000FF                     DMAnSIRQ        equ	255	;# 
  2857   000200                     PPSLOCK         equ	512	;# 
  2858   000201                     RA0PPS          equ	513	;# 
  2859   000202                     RA1PPS          equ	514	;# 
  2860   000203                     RA2PPS          equ	515	;# 
  2861   000204                     RA3PPS          equ	516	;# 
  2862   000205                     RA4PPS          equ	517	;# 
  2863   000206                     RA5PPS          equ	518	;# 
  2864   000207                     RA6PPS          equ	519	;# 
  2865   000208                     RA7PPS          equ	520	;# 
  2866   000209                     RB0PPS          equ	521	;# 
  2867   00020A                     RB1PPS          equ	522	;# 
  2868   00020B                     RB2PPS          equ	523	;# 
  2869   00020C                     RB3PPS          equ	524	;# 
  2870   00020D                     RB4PPS          equ	525	;# 
  2871   00020E                     RB5PPS          equ	526	;# 
  2872   00020F                     RB6PPS          equ	527	;# 
  2873   000210                     RB7PPS          equ	528	;# 
  2874   000211                     RC0PPS          equ	529	;# 
  2875   000212                     RC1PPS          equ	530	;# 
  2876   000213                     RC2PPS          equ	531	;# 
  2877   000214                     RC3PPS          equ	532	;# 
  2878   000215                     RC4PPS          equ	533	;# 
  2879   000216                     RC5PPS          equ	534	;# 
  2880   000217                     RC6PPS          equ	535	;# 
  2881   000218                     RC7PPS          equ	536	;# 
  2882   000219                     RD0PPS          equ	537	;# 
  2883   00021A                     RD1PPS          equ	538	;# 
  2884   00021B                     RD2PPS          equ	539	;# 
  2885   00021C                     RD3PPS          equ	540	;# 
  2886   00021D                     RD4PPS          equ	541	;# 
  2887   00021E                     RD5PPS          equ	542	;# 
  2888   00021F                     RD6PPS          equ	543	;# 
  2889   000220                     RD7PPS          equ	544	;# 
  2890   000221                     RE0PPS          equ	545	;# 
  2891   000222                     RE1PPS          equ	546	;# 
  2892   000223                     RE2PPS          equ	547	;# 
  2893   000229                     RF0PPS          equ	553	;# 
  2894   00022A                     RF1PPS          equ	554	;# 
  2895   00022B                     RF2PPS          equ	555	;# 
  2896   00022C                     RF3PPS          equ	556	;# 
  2897   00022D                     RF4PPS          equ	557	;# 
  2898   00022E                     RF5PPS          equ	558	;# 
  2899   00022F                     RF6PPS          equ	559	;# 
  2900   000230                     RF7PPS          equ	560	;# 
  2901   00023E                     INT0PPS         equ	574	;# 
  2902   00023F                     INT1PPS         equ	575	;# 
  2903   000240                     INT2PPS         equ	576	;# 
  2904   000241                     T0CKIPPS        equ	577	;# 
  2905   000242                     T1CKIPPS        equ	578	;# 
  2906   000243                     T1GPPS          equ	579	;# 
  2907   000244                     T3CKIPPS        equ	580	;# 
  2908   000245                     T3GPPS          equ	581	;# 
  2909   000246                     T5CKIPPS        equ	582	;# 
  2910   000247                     T5GPPS          equ	583	;# 
  2911   000248                     T2INPPS         equ	584	;# 
  2912   000249                     T4INPPS         equ	585	;# 
  2913   00024A                     T6INPPS         equ	586	;# 
  2914   00024F                     CCP1PPS         equ	591	;# 
  2915   000250                     CCP2PPS         equ	592	;# 
  2916   000251                     CCP3PPS         equ	593	;# 
  2917   000253                     PWM1ERSPPS      equ	595	;# 
  2918   000254                     PWM2ERSPPS      equ	596	;# 
  2919   000255                     PWM3ERSPPS      equ	597	;# 
  2920   000257                     PWMIN0PPS       equ	599	;# 
  2921   000258                     PWMIN1PPS       equ	600	;# 
  2922   000259                     SMT1WINPPS      equ	601	;# 
  2923   00025A                     SMT1SIGPPS      equ	602	;# 
  2924   00025B                     CWG1PPS         equ	603	;# 
  2925   00025B                     CWG1INPPS       equ	603	;# 
  2926   00025C                     CWG2PPS         equ	604	;# 
  2927   00025C                     CWG2INPPS       equ	604	;# 
  2928   00025D                     CWG3PPS         equ	605	;# 
  2929   00025D                     CWG3INPPS       equ	605	;# 
  2930   00025E                     MD1CARLPPS      equ	606	;# 
  2931   00025E                     MDCARLPPS       equ	606	;# 
  2932   00025F                     MD1CARHPPS      equ	607	;# 
  2933   00025F                     MDCARHPPS       equ	607	;# 
  2934   000260                     MD1SRCPPS       equ	608	;# 
  2935   000260                     MDSRCPPS        equ	608	;# 
  2936   000261                     CLCIN0PPS       equ	609	;# 
  2937   000262                     CLCIN1PPS       equ	610	;# 
  2938   000263                     CLCIN2PPS       equ	611	;# 
  2939   000264                     CLCIN3PPS       equ	612	;# 
  2940   000265                     CLCIN4PPS       equ	613	;# 
  2941   000266                     CLCIN5PPS       equ	614	;# 
  2942   000267                     CLCIN6PPS       equ	615	;# 
  2943   000268                     CLCIN7PPS       equ	616	;# 
  2944   000269                     ADACTPPS        equ	617	;# 
  2945   00026A                     SPI1SCKPPS      equ	618	;# 
  2946   00026B                     SPI1SDIPPS      equ	619	;# 
  2947   00026C                     SPI1SSPPS       equ	620	;# 
  2948   00026D                     SPI2SCKPPS      equ	621	;# 
  2949   00026E                     SPI2SDIPPS      equ	622	;# 
  2950   00026F                     SPI2SSPPS       equ	623	;# 
  2951   000270                     I2C1SDAPPS      equ	624	;# 
  2952   000271                     I2C1SCLPPS      equ	625	;# 
  2953   000272                     U1RXPPS         equ	626	;# 
  2954   000273                     U1CTSPPS        equ	627	;# 
  2955   000274                     U2RXPPS         equ	628	;# 
  2956   000275                     U2CTSPPS        equ	629	;# 
  2957   000276                     U3RXPPS         equ	630	;# 
  2958   000277                     U3CTSPPS        equ	631	;# 
  2959   000278                     U4RXPPS         equ	632	;# 
  2960   000279                     U4CTSPPS        equ	633	;# 
  2961   00027A                     U5RXPPS         equ	634	;# 
  2962   00027B                     U5CTSPPS        equ	635	;# 
  2963   000286                     RC4I2C          equ	646	;# 
  2964   000287                     RC3I2C          equ	647	;# 
  2965   000288                     RB2I2C          equ	648	;# 
  2966   000289                     RB1I2C          equ	649	;# 
  2967   00028B                     I2C1RXB         equ	651	;# 
  2968   00028C                     I2C1TXB         equ	652	;# 
  2969   00028D                     I2C1CNT         equ	653	;# 
  2970   00028E                     I2C1ADB0        equ	654	;# 
  2971   00028F                     I2C1ADB1        equ	655	;# 
  2972   000290                     I2C1ADR0        equ	656	;# 
  2973   000291                     I2C1ADR1        equ	657	;# 
  2974   000292                     I2C1ADR2        equ	658	;# 
  2975   000293                     I2C1ADR3        equ	659	;# 
  2976   000294                     I2C1CON0        equ	660	;# 
  2977   000295                     I2C1CON1        equ	661	;# 
  2978   000296                     I2C1CON2        equ	662	;# 
  2979   000297                     I2C1ERR         equ	663	;# 
  2980   000298                     I2C1STAT0       equ	664	;# 
  2981   000299                     I2C1STAT1       equ	665	;# 
  2982   00029A                     I2C1PIR         equ	666	;# 
  2983   00029B                     I2C1PIE         equ	667	;# 
  2984   00029C                     I2C1CLK         equ	668	;# 
  2985   00029D                     I2C1BTO         equ	669	;# 
  2986   0002A1                     U1RXB           equ	673	;# 
  2987   0002A1                     U1RXBL          equ	673	;# 
  2988   0002A2                     U1RXCHK         equ	674	;# 
  2989   0002A3                     U1TXB           equ	675	;# 
  2990   0002A3                     U1TXBL          equ	675	;# 
  2991   0002A4                     U1TXCHK         equ	676	;# 
  2992   0002A5                     U1P1            equ	677	;# 
  2993   0002A5                     U1P1L           equ	677	;# 
  2994   0002A6                     U1P1H           equ	678	;# 
  2995   0002A7                     U1P2            equ	679	;# 
  2996   0002A7                     U1P2L           equ	679	;# 
  2997   0002A8                     U1P2H           equ	680	;# 
  2998   0002A9                     U1P3            equ	681	;# 
  2999   0002A9                     U1P3L           equ	681	;# 
  3000   0002AA                     U1P3H           equ	682	;# 
  3001   0002AB                     U1CON0          equ	683	;# 
  3002   0002AC                     U1CON1          equ	684	;# 
  3003   0002AD                     U1CON2          equ	685	;# 
  3004   0002AE                     U1BRG           equ	686	;# 
  3005   0002AE                     U1BRGL          equ	686	;# 
  3006   0002AF                     U1BRGH          equ	687	;# 
  3007   0002B0                     U1FIFO          equ	688	;# 
  3008   0002B1                     U1UIR           equ	689	;# 
  3009   0002B2                     U1ERRIR         equ	690	;# 
  3010   0002B3                     U1ERRIE         equ	691	;# 
  3011   0002B4                     U2RXB           equ	692	;# 
  3012   0002B4                     U2RXBL          equ	692	;# 
  3013   0002B6                     U2TXB           equ	694	;# 
  3014   0002B6                     U2TXBL          equ	694	;# 
  3015   0002B8                     U2P1            equ	696	;# 
  3016   0002B8                     U2P1L           equ	696	;# 
  3017   0002BA                     U2P2            equ	698	;# 
  3018   0002BA                     U2P2L           equ	698	;# 
  3019   0002BC                     U2P3            equ	700	;# 
  3020   0002BC                     U2P3L           equ	700	;# 
  3021   0002BE                     U2CON0          equ	702	;# 
  3022   0002BF                     U2CON1          equ	703	;# 
  3023   0002C0                     U2CON2          equ	704	;# 
  3024   0002C1                     U2BRG           equ	705	;# 
  3025   0002C1                     U2BRGL          equ	705	;# 
  3026   0002C2                     U2BRGH          equ	706	;# 
  3027   0002C3                     U2FIFO          equ	707	;# 
  3028   0002C4                     U2UIR           equ	708	;# 
  3029   0002C5                     U2ERRIR         equ	709	;# 
  3030   0002C6                     U2ERRIE         equ	710	;# 
  3031   0002C7                     U3RXB           equ	711	;# 
  3032   0002C7                     U3RXBL          equ	711	;# 
  3033   0002C9                     U3TXB           equ	713	;# 
  3034   0002C9                     U3TXBL          equ	713	;# 
  3035   0002CB                     U3P1            equ	715	;# 
  3036   0002CB                     U3P1L           equ	715	;# 
  3037   0002CD                     U3P2            equ	717	;# 
  3038   0002CD                     U3P2L           equ	717	;# 
  3039   0002CF                     U3P3            equ	719	;# 
  3040   0002CF                     U3P3L           equ	719	;# 
  3041   0002D1                     U3CON0          equ	721	;# 
  3042   0002D2                     U3CON1          equ	722	;# 
  3043   0002D3                     U3CON2          equ	723	;# 
  3044   0002D4                     U3BRG           equ	724	;# 
  3045   0002D4                     U3BRGL          equ	724	;# 
  3046   0002D5                     U3BRGH          equ	725	;# 
  3047   0002D6                     U3FIFO          equ	726	;# 
  3048   0002D7                     U3UIR           equ	727	;# 
  3049   0002D8                     U3ERRIR         equ	728	;# 
  3050   0002D9                     U3ERRIE         equ	729	;# 
  3051   0002DA                     U4RXB           equ	730	;# 
  3052   0002DA                     U4RXBL          equ	730	;# 
  3053   0002DC                     U4TXB           equ	732	;# 
  3054   0002DC                     U4TXBL          equ	732	;# 
  3055   0002DE                     U4P1            equ	734	;# 
  3056   0002DE                     U4P1L           equ	734	;# 
  3057   0002E0                     U4P2            equ	736	;# 
  3058   0002E0                     U4P2L           equ	736	;# 
  3059   0002E2                     U4P3            equ	738	;# 
  3060   0002E2                     U4P3L           equ	738	;# 
  3061   0002E4                     U4CON0          equ	740	;# 
  3062   0002E5                     U4CON1          equ	741	;# 
  3063   0002E6                     U4CON2          equ	742	;# 
  3064   0002E7                     U4BRG           equ	743	;# 
  3065   0002E7                     U4BRGL          equ	743	;# 
  3066   0002E8                     U4BRGH          equ	744	;# 
  3067   0002E9                     U4FIFO          equ	745	;# 
  3068   0002EA                     U4UIR           equ	746	;# 
  3069   0002EB                     U4ERRIR         equ	747	;# 
  3070   0002EC                     U4ERRIE         equ	748	;# 
  3071   0002ED                     U5RXB           equ	749	;# 
  3072   0002ED                     U5RXBL          equ	749	;# 
  3073   0002EF                     U5TXB           equ	751	;# 
  3074   0002EF                     U5TXBL          equ	751	;# 
  3075   0002F1                     U5P1            equ	753	;# 
  3076   0002F1                     U5P1L           equ	753	;# 
  3077   0002F3                     U5P2            equ	755	;# 
  3078   0002F3                     U5P2L           equ	755	;# 
  3079   0002F5                     U5P3            equ	757	;# 
  3080   0002F5                     U5P3L           equ	757	;# 
  3081   0002F7                     U5CON0          equ	759	;# 
  3082   0002F8                     U5CON1          equ	760	;# 
  3083   0002F9                     U5CON2          equ	761	;# 
  3084   0002FA                     U5BRG           equ	762	;# 
  3085   0002FA                     U5BRGL          equ	762	;# 
  3086   0002FB                     U5BRGH          equ	763	;# 
  3087   0002FC                     U5FIFO          equ	764	;# 
  3088   0002FD                     U5UIR           equ	765	;# 
  3089   0002FE                     U5ERRIR         equ	766	;# 
  3090   0002FF                     U5ERRIE         equ	767	;# 
  3091   000300                     SMT1TMR         equ	768	;# 
  3092   000300                     SMT1TMRL        equ	768	;# 
  3093   000301                     SMT1TMRH        equ	769	;# 
  3094   000302                     SMT1TMRU        equ	770	;# 
  3095   000303                     SMT1CPR         equ	771	;# 
  3096   000303                     SMT1CPRL        equ	771	;# 
  3097   000304                     SMT1CPRH        equ	772	;# 
  3098   000305                     SMT1CPRU        equ	773	;# 
  3099   000306                     SMT1CPW         equ	774	;# 
  3100   000306                     SMT1CPWL        equ	774	;# 
  3101   000307                     SMT1CPWH        equ	775	;# 
  3102   000308                     SMT1CPWU        equ	776	;# 
  3103   000309                     SMT1PR          equ	777	;# 
  3104   000309                     SMT1PRL         equ	777	;# 
  3105   00030A                     SMT1PRH         equ	778	;# 
  3106   00030B                     SMT1PRU         equ	779	;# 
  3107   00030C                     SMT1CON0        equ	780	;# 
  3108   00030D                     SMT1CON1        equ	781	;# 
  3109   00030E                     SMT1STAT        equ	782	;# 
  3110   00030F                     SMT1CLK         equ	783	;# 
  3111   000310                     SMT1SIG         equ	784	;# 
  3112   000311                     SMT1WIN         equ	785	;# 
  3113   000318                     TMR0L           equ	792	;# 
  3114   000318                     TMR0            equ	792	;# 
  3115   000319                     TMR0H           equ	793	;# 
  3116   000319                     PR0             equ	793	;# 
  3117   00031A                     T0CON0          equ	794	;# 
  3118   00031B                     T0CON1          equ	795	;# 
  3119   00031C                     TMR1            equ	796	;# 
  3120   00031C                     TMR1L           equ	796	;# 
  3121   00031D                     TMR1H           equ	797	;# 
  3122   00031E                     T1CON           equ	798	;# 
  3123   00031E                     TMR1CON         equ	798	;# 
  3124   00031F                     T1GCON          equ	799	;# 
  3125   00031F                     TMR1GCON        equ	799	;# 
  3126   000320                     T1GATE          equ	800	;# 
  3127   000320                     TMR1GATE        equ	800	;# 
  3128   000321                     T1CLK           equ	801	;# 
  3129   000321                     TMR1CLK         equ	801	;# 
  3130   000321                     PR1             equ	801	;# 
  3131   000322                     T2TMR           equ	802	;# 
  3132   000322                     TMR2            equ	802	;# 
  3133   000323                     T2PR            equ	803	;# 
  3134   000323                     PR2             equ	803	;# 
  3135   000324                     T2CON           equ	804	;# 
  3136   000325                     T2HLT           equ	805	;# 
  3137   000326                     T2CLKCON        equ	806	;# 
  3138   000326                     T2CLK           equ	806	;# 
  3139   000327                     T2RST           equ	807	;# 
  3140   000328                     TMR3            equ	808	;# 
  3141   000328                     TMR3L           equ	808	;# 
  3142   000329                     TMR3H           equ	809	;# 
  3143   00032A                     T3CON           equ	810	;# 
  3144   00032A                     TMR3CON         equ	810	;# 
  3145   00032B                     T3GCON          equ	811	;# 
  3146   00032B                     TMR3GCON        equ	811	;# 
  3147   00032C                     T3GATE          equ	812	;# 
  3148   00032C                     TMR3GATE        equ	812	;# 
  3149   00032D                     T3CLK           equ	813	;# 
  3150   00032D                     TMR3CLK         equ	813	;# 
  3151   00032D                     PR3             equ	813	;# 
  3152   00032E                     T4TMR           equ	814	;# 
  3153   00032E                     TMR4            equ	814	;# 
  3154   00032F                     T4PR            equ	815	;# 
  3155   00032F                     PR4             equ	815	;# 
  3156   000330                     T4CON           equ	816	;# 
  3157   000331                     T4HLT           equ	817	;# 
  3158   000332                     T4CLKCON        equ	818	;# 
  3159   000332                     T4CLK           equ	818	;# 
  3160   000333                     T4RST           equ	819	;# 
  3161   000334                     TMR5            equ	820	;# 
  3162   000334                     TMR5L           equ	820	;# 
  3163   000335                     TMR5H           equ	821	;# 
  3164   000336                     T5CON           equ	822	;# 
  3165   000336                     TMR5CON         equ	822	;# 
  3166   000337                     T5GCON          equ	823	;# 
  3167   000337                     TMR5GCON        equ	823	;# 
  3168   000338                     T5GATE          equ	824	;# 
  3169   000338                     TMR5GATE        equ	824	;# 
  3170   000339                     T5CLK           equ	825	;# 
  3171   000339                     TMR5CLK         equ	825	;# 
  3172   000339                     PR5             equ	825	;# 
  3173   00033A                     T6TMR           equ	826	;# 
  3174   00033A                     TMR6            equ	826	;# 
  3175   00033B                     T6PR            equ	827	;# 
  3176   00033B                     PR6             equ	827	;# 
  3177   00033C                     T6CON           equ	828	;# 
  3178   00033D                     T6HLT           equ	829	;# 
  3179   00033E                     T6CLKCON        equ	830	;# 
  3180   00033E                     T6CLK           equ	830	;# 
  3181   00033F                     T6RST           equ	831	;# 
  3182   000340                     CCPR1           equ	832	;# 
  3183   000340                     CCPR1L          equ	832	;# 
  3184   000341                     CCPR1H          equ	833	;# 
  3185   000342                     CCP1CON         equ	834	;# 
  3186   000343                     CCP1CAP         equ	835	;# 
  3187   000344                     CCPR2           equ	836	;# 
  3188   000344                     CCPR2L          equ	836	;# 
  3189   000345                     CCPR2H          equ	837	;# 
  3190   000346                     CCP2CON         equ	838	;# 
  3191   000347                     CCP2CAP         equ	839	;# 
  3192   000348                     CCPR3           equ	840	;# 
  3193   000348                     CCPR3L          equ	840	;# 
  3194   000349                     CCPR3H          equ	841	;# 
  3195   00034A                     CCP3CON         equ	842	;# 
  3196   00034B                     CCP3CAP         equ	843	;# 
  3197   00034C                     CCPTMRS0        equ	844	;# 
  3198   00034F                     CRCDATA         equ	847	;# 
  3199   00034F                     CRCDATL         equ	847	;# 
  3200   000350                     CRCDATH         equ	848	;# 
  3201   000351                     CRCACC          equ	849	;# 
  3202   000351                     CRCACCL         equ	849	;# 
  3203   000352                     CRCACCH         equ	850	;# 
  3204   000353                     CRCSHFT         equ	851	;# 
  3205   000353                     CRCSHIFTL       equ	851	;# 
  3206   000354                     CRCSHIFTH       equ	852	;# 
  3207   000355                     CRCXOR          equ	853	;# 
  3208   000355                     CRCXORL         equ	853	;# 
  3209   000356                     CRCXORH         equ	854	;# 
  3210   000357                     CRCCON0         equ	855	;# 
  3211   000358                     CRCCON1         equ	856	;# 
  3212   00035A                     SCANLADR        equ	858	;# 
  3213   00035A                     SCANLADRL       equ	858	;# 
  3214   00035B                     SCANLADRH       equ	859	;# 
  3215   00035C                     SCANLADRU       equ	860	;# 
  3216   00035D                     SCANHADR        equ	861	;# 
  3217   00035D                     SCANHADRL       equ	861	;# 
  3218   00035E                     SCANHADRH       equ	862	;# 
  3219   00035F                     SCANHADRU       equ	863	;# 
  3220   000360                     SCANCON0        equ	864	;# 
  3221   000361                     SCANTRIG        equ	865	;# 
  3222   000362                     IPR0            equ	866	;# 
  3223   000363                     IPR1            equ	867	;# 
  3224   000364                     IPR2            equ	868	;# 
  3225   000365                     IPR3            equ	869	;# 
  3226   000366                     IPR4            equ	870	;# 
  3227   000367                     IPR5            equ	871	;# 
  3228   000368                     IPR6            equ	872	;# 
  3229   000369                     IPR7            equ	873	;# 
  3230   00036A                     IPR8            equ	874	;# 
  3231   00036B                     IPR9            equ	875	;# 
  3232   00036C                     IPR10           equ	876	;# 
  3233   00036D                     IPR11           equ	877	;# 
  3234   00036E                     IPR12           equ	878	;# 
  3235   00036F                     IPR13           equ	879	;# 
  3236   000370                     IPR14           equ	880	;# 
  3237   000371                     IPR15           equ	881	;# 
  3238   000373                     STATUS_CSHAD    equ	883	;# 
  3239   000374                     WREG_CSHAD      equ	884	;# 
  3240   000375                     BSR_CSHAD       equ	885	;# 
  3241   000376                     SHADCON         equ	886	;# 
  3242   000377                     STATUS_SHAD     equ	887	;# 
  3243   000378                     WREG_SHAD       equ	888	;# 
  3244   000379                     BSR_SHAD        equ	889	;# 
  3245   00037A                     PCLATH_SHAD     equ	890	;# 
  3246   00037B                     PCLATU_SHAD     equ	891	;# 
  3247   00037C                     FSR0SH          equ	892	;# 
  3248   00037C                     FSR0L_SHAD      equ	892	;# 
  3249   00037D                     FSR0H_SHAD      equ	893	;# 
  3250   00037E                     FSR1SH          equ	894	;# 
  3251   00037E                     FSR1L_SHAD      equ	894	;# 
  3252   00037F                     FSR1H_SHAD      equ	895	;# 
  3253   000380                     FSR2SH          equ	896	;# 
  3254   000380                     FSR2L_SHAD      equ	896	;# 
  3255   000381                     FSR2H_SHAD      equ	897	;# 
  3256   000382                     PRODSH          equ	898	;# 
  3257   000382                     PRODL_SHAD      equ	898	;# 
  3258   000383                     PRODH_SHAD      equ	899	;# 
  3259   0003BC                     CWG1CLK         equ	956	;# 
  3260   0003BC                     CWG1CLKCON      equ	956	;# 
  3261   0003BD                     CWG1ISM         equ	957	;# 
  3262   0003BD                     CWG1DAT         equ	957	;# 
  3263   0003BE                     CWG1DBR         equ	958	;# 
  3264   0003BF                     CWG1DBF         equ	959	;# 
  3265   0003C0                     CWG1CON0        equ	960	;# 
  3266   0003C1                     CWG1CON1        equ	961	;# 
  3267   0003C2                     CWG1AS0         equ	962	;# 
  3268   0003C3                     CWG1AS1         equ	963	;# 
  3269   0003C4                     CWG1STR         equ	964	;# 
  3270   0003C5                     CWG2CLK         equ	965	;# 
  3271   0003C5                     CWG2CLKCON      equ	965	;# 
  3272   0003C6                     CWG2ISM         equ	966	;# 
  3273   0003C6                     CWG2DAT         equ	966	;# 
  3274   0003C7                     CWG2DBR         equ	967	;# 
  3275   0003C8                     CWG2DBF         equ	968	;# 
  3276   0003C9                     CWG2CON0        equ	969	;# 
  3277   0003CA                     CWG2CON1        equ	970	;# 
  3278   0003CB                     CWG2AS0         equ	971	;# 
  3279   0003CC                     CWG2AS1         equ	972	;# 
  3280   0003CD                     CWG2STR         equ	973	;# 
  3281   0003CE                     CWG3CLK         equ	974	;# 
  3282   0003CE                     CWG3CLKCON      equ	974	;# 
  3283   0003CF                     CWG3ISM         equ	975	;# 
  3284   0003CF                     CWG3DAT         equ	975	;# 
  3285   0003D0                     CWG3DBR         equ	976	;# 
  3286   0003D1                     CWG3DBF         equ	977	;# 
  3287   0003D2                     CWG3CON0        equ	978	;# 
  3288   0003D3                     CWG3CON1        equ	979	;# 
  3289   0003D4                     CWG3AS0         equ	980	;# 
  3290   0003D5                     CWG3AS1         equ	981	;# 
  3291   0003D6                     CWG3STR         equ	982	;# 
  3292   0003D7                     FVRCON          equ	983	;# 
  3293   0003D8                     ADCPCON         equ	984	;# 
  3294   0003D8                     ADCP            equ	984	;# 
  3295   0003D9                     ADLTH           equ	985	;# 
  3296   0003D9                     ADLTHL          equ	985	;# 
  3297   0003DA                     ADLTHH          equ	986	;# 
  3298   0003DB                     ADUTH           equ	987	;# 
  3299   0003DB                     ADUTHL          equ	987	;# 
  3300   0003DC                     ADUTHH          equ	988	;# 
  3301   0003DD                     ADERR           equ	989	;# 
  3302   0003DD                     ADERRL          equ	989	;# 
  3303   0003DE                     ADERRH          equ	990	;# 
  3304   0003DF                     ADSTPT          equ	991	;# 
  3305   0003DF                     ADSTPTL         equ	991	;# 
  3306   0003E0                     ADSTPTH         equ	992	;# 
  3307   0003E1                     ADFLTR          equ	993	;# 
  3308   0003E1                     ADFLTRL         equ	993	;# 
  3309   0003E2                     ADFLTRH         equ	994	;# 
  3310   0003E3                     ADACC           equ	995	;# 
  3311   0003E3                     ADACCL          equ	995	;# 
  3312   0003E4                     ADACCH          equ	996	;# 
  3313   0003E5                     ADACCU          equ	997	;# 
  3314   0003E6                     ADCNT           equ	998	;# 
  3315   0003E7                     ADRPT           equ	999	;# 
  3316   0003E8                     ADPREV          equ	1000	;# 
  3317   0003E8                     ADPREVL         equ	1000	;# 
  3318   0003E9                     ADPREVH         equ	1001	;# 
  3319   0003EA                     ADRES           equ	1002	;# 
  3320   0003EA                     ADRESL          equ	1002	;# 
  3321   0003EB                     ADRESH          equ	1003	;# 
  3322   0003EC                     ADPCH           equ	1004	;# 
  3323   0003EE                     ADACQ           equ	1006	;# 
  3324   0003EE                     ADACQL          equ	1006	;# 
  3325   0003EF                     ADACQH          equ	1007	;# 
  3326   0003F0                     ADCAP           equ	1008	;# 
  3327   0003F1                     ADPRE           equ	1009	;# 
  3328   0003F1                     ADPREL          equ	1009	;# 
  3329   0003F2                     ADPREH          equ	1010	;# 
  3330   0003F3                     ADCON0          equ	1011	;# 
  3331   0003F4                     ADCON1          equ	1012	;# 
  3332   0003F5                     ADCON2          equ	1013	;# 
  3333   0003F6                     ADCON3          equ	1014	;# 
  3334   0003F7                     ADSTAT          equ	1015	;# 
  3335   0003F8                     ADREF           equ	1016	;# 
  3336   0003F9                     ADACT           equ	1017	;# 
  3337   0003FA                     ADCLK           equ	1018	;# 
  3338   000400                     ANSELA          equ	1024	;# 
  3339   000401                     WPUA            equ	1025	;# 
  3340   000402                     ODCONA          equ	1026	;# 
  3341   000403                     SLRCONA         equ	1027	;# 
  3342   000404                     INLVLA          equ	1028	;# 
  3343   000405                     IOCAP           equ	1029	;# 
  3344   000406                     IOCAN           equ	1030	;# 
  3345   000407                     IOCAF           equ	1031	;# 
  3346   000408                     ANSELB          equ	1032	;# 
  3347   000409                     WPUB            equ	1033	;# 
  3348   00040A                     ODCONB          equ	1034	;# 
  3349   00040B                     SLRCONB         equ	1035	;# 
  3350   00040C                     INLVLB          equ	1036	;# 
  3351   00040D                     IOCBP           equ	1037	;# 
  3352   00040E                     IOCBN           equ	1038	;# 
  3353   00040F                     IOCBF           equ	1039	;# 
  3354   000410                     ANSELC          equ	1040	;# 
  3355   000411                     WPUC            equ	1041	;# 
  3356   000412                     ODCONC          equ	1042	;# 
  3357   000413                     SLRCONC         equ	1043	;# 
  3358   000414                     INLVLC          equ	1044	;# 
  3359   000415                     IOCCP           equ	1045	;# 
  3360   000416                     IOCCN           equ	1046	;# 
  3361   000417                     IOCCF           equ	1047	;# 
  3362   000418                     ANSELD          equ	1048	;# 
  3363   000419                     WPUD            equ	1049	;# 
  3364   00041A                     ODCOND          equ	1050	;# 
  3365   00041B                     SLRCOND         equ	1051	;# 
  3366   00041C                     INLVLD          equ	1052	;# 
  3367   000420                     ANSELE          equ	1056	;# 
  3368   000421                     WPUE            equ	1057	;# 
  3369   000422                     ODCONE          equ	1058	;# 
  3370   000423                     SLRCONE         equ	1059	;# 
  3371   000424                     INLVLE          equ	1060	;# 
  3372   000425                     IOCEP           equ	1061	;# 
  3373   000426                     IOCEN           equ	1062	;# 
  3374   000427                     IOCEF           equ	1063	;# 
  3375   000428                     ANSELF          equ	1064	;# 
  3376   000429                     WPUF            equ	1065	;# 
  3377   00042A                     ODCONF          equ	1066	;# 
  3378   00042B                     SLRCONF         equ	1067	;# 
  3379   00042C                     INLVLF          equ	1068	;# 
  3380   000440                     NCO1ACC         equ	1088	;# 
  3381   000440                     NCO1ACCL        equ	1088	;# 
  3382   000441                     NCO1ACCH        equ	1089	;# 
  3383   000442                     NCO1ACCU        equ	1090	;# 
  3384   000443                     NCO1INC         equ	1091	;# 
  3385   000443                     NCO1INCL        equ	1091	;# 
  3386   000444                     NCO1INCH        equ	1092	;# 
  3387   000445                     NCO1INCU        equ	1093	;# 
  3388   000446                     NCO1CON         equ	1094	;# 
  3389   000447                     NCO1CLK         equ	1095	;# 
  3390   000448                     NCO2ACC         equ	1096	;# 
  3391   000448                     NCO2ACCL        equ	1096	;# 
  3392   000449                     NCO2ACCH        equ	1097	;# 
  3393   00044A                     NCO2ACCU        equ	1098	;# 
  3394   00044B                     NCO2INC         equ	1099	;# 
  3395   00044B                     NCO2INCL        equ	1099	;# 
  3396   00044C                     NCO2INCH        equ	1100	;# 
  3397   00044D                     NCO2INCU        equ	1101	;# 
  3398   00044E                     NCO2CON         equ	1102	;# 
  3399   00044F                     NCO2CLK         equ	1103	;# 
  3400   000450                     NCO3ACC         equ	1104	;# 
  3401   000450                     NCO3ACCL        equ	1104	;# 
  3402   000451                     NCO3ACCH        equ	1105	;# 
  3403   000452                     NCO3ACCU        equ	1106	;# 
  3404   000453                     NCO3INC         equ	1107	;# 
  3405   000453                     NCO3INCL        equ	1107	;# 
  3406   000454                     NCO3INCH        equ	1108	;# 
  3407   000455                     NCO3INCU        equ	1109	;# 
  3408   000456                     NCO3CON         equ	1110	;# 
  3409   000457                     NCO3CLK         equ	1111	;# 
  3410   000459                     IVTLOCK         equ	1113	;# 
  3411   00045A                     IVTAD           equ	1114	;# 
  3412   00045A                     IVTADL          equ	1114	;# 
  3413   00045B                     IVTADH          equ	1115	;# 
  3414   00045C                     IVTADU          equ	1116	;# 
  3415   00045D                     IVTBASE         equ	1117	;# 
  3416   00045D                     IVTBASEL        equ	1117	;# 
  3417   00045E                     IVTBASEH        equ	1118	;# 
  3418   00045F                     IVTBASEU        equ	1119	;# 
  3419   000460                     PWM1ERS         equ	1120	;# 
  3420   000461                     PWM1CLK         equ	1121	;# 
  3421   000462                     PWM1LDS         equ	1122	;# 
  3422   000463                     PWM1PR          equ	1123	;# 
  3423   000463                     PWM1PRL         equ	1123	;# 
  3424   000464                     PWM1PRH         equ	1124	;# 
  3425   000465                     PWM1CPRE        equ	1125	;# 
  3426   000466                     PWM1PIPOS       equ	1126	;# 
  3427   000467                     PWM1GIR         equ	1127	;# 
  3428   000468                     PWM1GIE         equ	1128	;# 
  3429   000469                     PWM1CON         equ	1129	;# 
  3430   00046A                     PWM1S1CFG       equ	1130	;# 
  3431   00046B                     PWM1S1P1        equ	1131	;# 
  3432   00046B                     PWM1S1P1L       equ	1131	;# 
  3433   00046C                     PWM1S1P1H       equ	1132	;# 
  3434   00046D                     PWM1S1P2        equ	1133	;# 
  3435   00046D                     PWM1S1P2L       equ	1133	;# 
  3436   00046E                     PWM1S1P2H       equ	1134	;# 
  3437   00046F                     PWM2ERS         equ	1135	;# 
  3438   000470                     PWM2CLK         equ	1136	;# 
  3439   000471                     PWM2LDS         equ	1137	;# 
  3440   000472                     PWM2PR          equ	1138	;# 
  3441   000472                     PWM2PRL         equ	1138	;# 
  3442   000473                     PWM2PRH         equ	1139	;# 
  3443   000474                     PWM2CPRE        equ	1140	;# 
  3444   000475                     PWM2PIPOS       equ	1141	;# 
  3445   000476                     PWM2GIR         equ	1142	;# 
  3446   000477                     PWM2GIE         equ	1143	;# 
  3447   000478                     PWM2CON         equ	1144	;# 
  3448   000479                     PWM2S1CFG       equ	1145	;# 
  3449   00047A                     PWM2S1P1        equ	1146	;# 
  3450   00047A                     PWM2S1P1L       equ	1146	;# 
  3451   00047B                     PWM2S1P1H       equ	1147	;# 
  3452   00047C                     PWM2S1P2        equ	1148	;# 
  3453   00047C                     PWM2S1P2L       equ	1148	;# 
  3454   00047D                     PWM2S1P2H       equ	1149	;# 
  3455   00047E                     PWM3ERS         equ	1150	;# 
  3456   00047F                     PWM3CLK         equ	1151	;# 
  3457   000480                     PWM3LDS         equ	1152	;# 
  3458   000481                     PWM3PR          equ	1153	;# 
  3459   000481                     PWM3PRL         equ	1153	;# 
  3460   000482                     PWM3PRH         equ	1154	;# 
  3461   000483                     PWM3CPRE        equ	1155	;# 
  3462   000484                     PWM3PIPOS       equ	1156	;# 
  3463   000485                     PWM3GIR         equ	1157	;# 
  3464   000486                     PWM3GIE         equ	1158	;# 
  3465   000487                     PWM3CON         equ	1159	;# 
  3466   000488                     PWM3S1CFG       equ	1160	;# 
  3467   000489                     PWM3S1P1        equ	1161	;# 
  3468   000489                     PWM3S1P1L       equ	1161	;# 
  3469   00048A                     PWM3S1P1H       equ	1162	;# 
  3470   00048B                     PWM3S1P2        equ	1163	;# 
  3471   00048B                     PWM3S1P2L       equ	1163	;# 
  3472   00048C                     PWM3S1P2H       equ	1164	;# 
  3473   00049C                     PWMLOAD         equ	1180	;# 
  3474   00049D                     PWMEN           equ	1181	;# 
  3475   00049E                     PIE0            equ	1182	;# 
  3476   00049F                     PIE1            equ	1183	;# 
  3477   0004A0                     PIE2            equ	1184	;# 
  3478   0004A1                     PIE3            equ	1185	;# 
  3479   0004A2                     PIE4            equ	1186	;# 
  3480   0004A3                     PIE5            equ	1187	;# 
  3481   0004A4                     PIE6            equ	1188	;# 
  3482   0004A5                     PIE7            equ	1189	;# 
  3483   0004A6                     PIE8            equ	1190	;# 
  3484   0004A7                     PIE9            equ	1191	;# 
  3485   0004A8                     PIE10           equ	1192	;# 
  3486   0004A9                     PIE11           equ	1193	;# 
  3487   0004AA                     PIE12           equ	1194	;# 
  3488   0004AB                     PIE13           equ	1195	;# 
  3489   0004AC                     PIE14           equ	1196	;# 
  3490   0004AD                     PIE15           equ	1197	;# 
  3491   0004AE                     PIR0            equ	1198	;# 
  3492   0004AF                     PIR1            equ	1199	;# 
  3493   0004B0                     PIR2            equ	1200	;# 
  3494   0004B1                     PIR3            equ	1201	;# 
  3495   0004B2                     PIR4            equ	1202	;# 
  3496   0004B3                     PIR5            equ	1203	;# 
  3497   0004B4                     PIR6            equ	1204	;# 
  3498   0004B5                     PIR7            equ	1205	;# 
  3499   0004B6                     PIR8            equ	1206	;# 
  3500   0004B7                     PIR9            equ	1207	;# 
  3501   0004B8                     PIR10           equ	1208	;# 
  3502   0004B9                     PIR11           equ	1209	;# 
  3503   0004BA                     PIR12           equ	1210	;# 
  3504   0004BB                     PIR13           equ	1211	;# 
  3505   0004BC                     PIR14           equ	1212	;# 
  3506   0004BD                     PIR15           equ	1213	;# 
  3507   0004BE                     LATA            equ	1214	;# 
  3508   0004BF                     LATB            equ	1215	;# 
  3509   0004C0                     LATC            equ	1216	;# 
  3510   0004C1                     LATD            equ	1217	;# 
  3511   0004C2                     LATE            equ	1218	;# 
  3512   0004C3                     LATF            equ	1219	;# 
  3513   0004C6                     TRISA           equ	1222	;# 
  3514   0004C7                     TRISB           equ	1223	;# 
  3515   0004C8                     TRISC           equ	1224	;# 
  3516   0004C9                     TRISD           equ	1225	;# 
  3517   0004CA                     TRISE           equ	1226	;# 
  3518   0004CB                     TRISF           equ	1227	;# 
  3519   0004CE                     PORTA           equ	1230	;# 
  3520   0004CF                     PORTB           equ	1231	;# 
  3521   0004D0                     PORTC           equ	1232	;# 
  3522   0004D1                     PORTD           equ	1233	;# 
  3523   0004D2                     PORTE           equ	1234	;# 
  3524   0004D3                     PORTF           equ	1235	;# 
  3525   0004D6                     INTCON0         equ	1238	;# 
  3526   0004D7                     INTCON1         equ	1239	;# 
  3527   0004D8                     STATUS          equ	1240	;# 
  3528   0004D9                     FSR2            equ	1241	;# 
  3529   0004D9                     FSR2L           equ	1241	;# 
  3530   0004DA                     FSR2H           equ	1242	;# 
  3531   0004DB                     PLUSW2          equ	1243	;# 
  3532   0004DC                     PREINC2         equ	1244	;# 
  3533   0004DD                     POSTDEC2        equ	1245	;# 
  3534   0004DE                     POSTINC2        equ	1246	;# 
  3535   0004DF                     INDF2           equ	1247	;# 
  3536   0004E0                     BSR             equ	1248	;# 
  3537   0004E1                     FSR1            equ	1249	;# 
  3538   0004E1                     FSR1L           equ	1249	;# 
  3539   0004E2                     FSR1H           equ	1250	;# 
  3540   0004E3                     PLUSW1          equ	1251	;# 
  3541   0004E4                     PREINC1         equ	1252	;# 
  3542   0004E5                     POSTDEC1        equ	1253	;# 
  3543   0004E6                     POSTINC1        equ	1254	;# 
  3544   0004E7                     INDF1           equ	1255	;# 
  3545   0004E8                     WREG            equ	1256	;# 
  3546   0004E9                     FSR0            equ	1257	;# 
  3547   0004E9                     FSR0L           equ	1257	;# 
  3548   0004EA                     FSR0H           equ	1258	;# 
  3549   0004EB                     PLUSW0          equ	1259	;# 
  3550   0004EC                     PREINC0         equ	1260	;# 
  3551   0004ED                     POSTDEC0        equ	1261	;# 
  3552   0004EE                     POSTINC0        equ	1262	;# 
  3553   0004EF                     INDF0           equ	1263	;# 
  3554   0004F0                     PCON0           equ	1264	;# 
  3555   0004F1                     PCON1           equ	1265	;# 
  3556   0004F2                     CPUDOZE         equ	1266	;# 
  3557   0004F3                     PROD            equ	1267	;# 
  3558   0004F3                     PRODL           equ	1267	;# 
  3559   0004F4                     PRODH           equ	1268	;# 
  3560   0004F5                     TABLAT          equ	1269	;# 
  3561   0004F6                     TBLPTR          equ	1270	;# 
  3562   0004F6                     TBLPTRL         equ	1270	;# 
  3563   0004F7                     TBLPTRH         equ	1271	;# 
  3564   0004F8                     TBLPTRU         equ	1272	;# 
  3565   0004F9                     PCLAT           equ	1273	;# 
  3566   0004F9                     PCL             equ	1273	;# 
  3567   0004FA                     PCLATH          equ	1274	;# 
  3568   0004FB                     PCLATU          equ	1275	;# 
  3569   0004FC                     STKPTR          equ	1276	;# 
  3570   0004FD                     TOS             equ	1277	;# 
  3571   0004FD                     TOSL            equ	1277	;# 
  3572   0004FE                     TOSH            equ	1278	;# 
  3573   0004FF                     TOSU            equ	1279	;# 
  3574   000039                     CLKRCON         equ	57	;# 
  3575   00003A                     CLKRCLK         equ	58	;# 
  3576   000040                     NVMCON0         equ	64	;# 
  3577   000041                     NVMCON1         equ	65	;# 
  3578   000042                     NVMLOCK         equ	66	;# 
  3579   000043                     NVMADR          equ	67	;# 
  3580   000043                     NVMADRL         equ	67	;# 
  3581   000044                     NVMADRH         equ	68	;# 
  3582   000045                     NVMADRU         equ	69	;# 
  3583   000046                     NVMDAT          equ	70	;# 
  3584   000046                     NVMDATL         equ	70	;# 
  3585   000047                     NVMDATH         equ	71	;# 
  3586   000048                     VREGCON         equ	72	;# 
  3587   000049                     BORCON          equ	73	;# 
  3588   00004A                     HLVDCON0        equ	74	;# 
  3589   00004B                     HLVDCON1        equ	75	;# 
  3590   00004C                     ZCDCON          equ	76	;# 
  3591   000060                     PMD0            equ	96	;# 
  3592   000061                     PMD1            equ	97	;# 
  3593   000063                     PMD3            equ	99	;# 
  3594   000064                     PMD4            equ	100	;# 
  3595   000065                     PMD5            equ	101	;# 
  3596   000066                     PMD6            equ	102	;# 
  3597   000067                     PMD7            equ	103	;# 
  3598   000068                     PMD8            equ	104	;# 
  3599   00006A                     MD1CON0         equ	106	;# 
  3600   00006B                     MD1CON1         equ	107	;# 
  3601   00006C                     MD1SRC          equ	108	;# 
  3602   00006D                     MD1CARL         equ	109	;# 
  3603   00006E                     MD1CARH         equ	110	;# 
  3604   00006F                     CMOUT           equ	111	;# 
  3605   000070                     CM1CON0         equ	112	;# 
  3606   000071                     CM1CON1         equ	113	;# 
  3607   000072                     CM1NCH          equ	114	;# 
  3608   000073                     CM1PCH          equ	115	;# 
  3609   000074                     CM2CON0         equ	116	;# 
  3610   000075                     CM2CON1         equ	117	;# 
  3611   000076                     CM2NCH          equ	118	;# 
  3612   000077                     CM2PCH          equ	119	;# 
  3613   000078                     WDTCON0         equ	120	;# 
  3614   000079                     WDTCON1         equ	121	;# 
  3615   00007A                     WDTPS           equ	122	;# 
  3616   00007A                     WDTPSL          equ	122	;# 
  3617   00007B                     WDTPSH          equ	123	;# 
  3618   00007C                     WDTTMR          equ	124	;# 
  3619   00007D                     DAC1DAT         equ	125	;# 
  3620   00007D                     DAC1DATL        equ	125	;# 
  3621   00007F                     DAC1CON         equ	127	;# 
  3622   000080                     SPI1RXB         equ	128	;# 
  3623   000081                     SPI1TXB         equ	129	;# 
  3624   000082                     SPI1TCNT        equ	130	;# 
  3625   000082                     SPI1TCNTL       equ	130	;# 
  3626   000083                     SPI1TCNTH       equ	131	;# 
  3627   000084                     SPI1CON0        equ	132	;# 
  3628   000085                     SPI1CON1        equ	133	;# 
  3629   000086                     SPI1CON2        equ	134	;# 
  3630   000087                     SPI1STATUS      equ	135	;# 
  3631   000088                     SPI1TWIDTH      equ	136	;# 
  3632   000089                     SPI1BAUD        equ	137	;# 
  3633   00008A                     SPI1INTF        equ	138	;# 
  3634   00008B                     SPI1INTE        equ	139	;# 
  3635   00008C                     SPI1CLK         equ	140	;# 
  3636   00008D                     SPI2RXB         equ	141	;# 
  3637   00008E                     SPI2TXB         equ	142	;# 
  3638   00008F                     SPI2TCNT        equ	143	;# 
  3639   00008F                     SPI2TCNTL       equ	143	;# 
  3640   000090                     SPI2TCNTH       equ	144	;# 
  3641   000091                     SPI2CON0        equ	145	;# 
  3642   000092                     SPI2CON1        equ	146	;# 
  3643   000093                     SPI2CON2        equ	147	;# 
  3644   000094                     SPI2STATUS      equ	148	;# 
  3645   000095                     SPI2TWIDTH      equ	149	;# 
  3646   000096                     SPI2BAUD        equ	150	;# 
  3647   000097                     SPI2INTF        equ	151	;# 
  3648   000098                     SPI2INTE        equ	152	;# 
  3649   000099                     SPI2CLK         equ	153	;# 
  3650   0000AC                     ACTCON          equ	172	;# 
  3651   0000AD                     OSCCON1         equ	173	;# 
  3652   0000AE                     OSCCON2         equ	174	;# 
  3653   0000AF                     OSCCON3         equ	175	;# 
  3654   0000B0                     OSCTUNE         equ	176	;# 
  3655   0000B1                     OSCFRQ          equ	177	;# 
  3656   0000B1                     OSCFREQ         equ	177	;# 
  3657   0000B2                     OSCSTAT         equ	178	;# 
  3658   0000B2                     OSCSTAT1        equ	178	;# 
  3659   0000B3                     OSCEN           equ	179	;# 
  3660   0000B4                     PRLOCK          equ	180	;# 
  3661   0000B5                     SCANPR          equ	181	;# 
  3662   0000B6                     DMA1PR          equ	182	;# 
  3663   0000B7                     DMA2PR          equ	183	;# 
  3664   0000B8                     DMA3PR          equ	184	;# 
  3665   0000B9                     DMA4PR          equ	185	;# 
  3666   0000BA                     DMA5PR          equ	186	;# 
  3667   0000BB                     DMA6PR          equ	187	;# 
  3668   0000BE                     MAINPR          equ	190	;# 
  3669   0000BF                     ISRPR           equ	191	;# 
  3670   0000D4                     CLCDATA         equ	212	;# 
  3671   0000D5                     CLCSELECT       equ	213	;# 
  3672   0000D6                     CLCnCON         equ	214	;# 
  3673   0000D7                     CLCnPOL         equ	215	;# 
  3674   0000D8                     CLCnSEL0        equ	216	;# 
  3675   0000D9                     CLCnSEL1        equ	217	;# 
  3676   0000DA                     CLCnSEL2        equ	218	;# 
  3677   0000DB                     CLCnSEL3        equ	219	;# 
  3678   0000DC                     CLCnGLS0        equ	220	;# 
  3679   0000DD                     CLCnGLS1        equ	221	;# 
  3680   0000DE                     CLCnGLS2        equ	222	;# 
  3681   0000DF                     CLCnGLS3        equ	223	;# 
  3682   0000E8                     DMASELECT       equ	232	;# 
  3683   0000E9                     DMAnBUF         equ	233	;# 
  3684   0000EA                     DMAnDCNT        equ	234	;# 
  3685   0000EA                     DMAnDCNTL       equ	234	;# 
  3686   0000EB                     DMAnDCNTH       equ	235	;# 
  3687   0000EC                     DMAnDPTR        equ	236	;# 
  3688   0000EC                     DMAnDPTRL       equ	236	;# 
  3689   0000ED                     DMAnDPTRH       equ	237	;# 
  3690   0000EE                     DMAnDSZ         equ	238	;# 
  3691   0000EE                     DMAnDSZL        equ	238	;# 
  3692   0000EF                     DMAnDSZH        equ	239	;# 
  3693   0000F0                     DMAnDSA         equ	240	;# 
  3694   0000F0                     DMAnDSAL        equ	240	;# 
  3695   0000F1                     DMAnDSAH        equ	241	;# 
  3696   0000F2                     DMAnSCNT        equ	242	;# 
  3697   0000F2                     DMAnSCNTL       equ	242	;# 
  3698   0000F3                     DMAnSCNTH       equ	243	;# 
  3699   0000F4                     DMAnSPTR        equ	244	;# 
  3700   0000F4                     DMAnSPTRL       equ	244	;# 
  3701   0000F5                     DMAnSPTRH       equ	245	;# 
  3702   0000F6                     DMAnSPTRU       equ	246	;# 
  3703   0000F7                     DMAnSSZ         equ	247	;# 
  3704   0000F7                     DMAnSSZL        equ	247	;# 
  3705   0000F8                     DMAnSSZH        equ	248	;# 
  3706   0000F9                     DMAnSSA         equ	249	;# 
  3707   0000F9                     DMAnSSAL        equ	249	;# 
  3708   0000FA                     DMAnSSAH        equ	250	;# 
  3709   0000FB                     DMAnSSAU        equ	251	;# 
  3710   0000FC                     DMAnCON0        equ	252	;# 
  3711   0000FD                     DMAnCON1        equ	253	;# 
  3712   0000FE                     DMAnAIRQ        equ	254	;# 
  3713   0000FF                     DMAnSIRQ        equ	255	;# 
  3714   000200                     PPSLOCK         equ	512	;# 
  3715   000201                     RA0PPS          equ	513	;# 
  3716   000202                     RA1PPS          equ	514	;# 
  3717   000203                     RA2PPS          equ	515	;# 
  3718   000204                     RA3PPS          equ	516	;# 
  3719   000205                     RA4PPS          equ	517	;# 
  3720   000206                     RA5PPS          equ	518	;# 
  3721   000207                     RA6PPS          equ	519	;# 
  3722   000208                     RA7PPS          equ	520	;# 
  3723   000209                     RB0PPS          equ	521	;# 
  3724   00020A                     RB1PPS          equ	522	;# 
  3725   00020B                     RB2PPS          equ	523	;# 
  3726   00020C                     RB3PPS          equ	524	;# 
  3727   00020D                     RB4PPS          equ	525	;# 
  3728   00020E                     RB5PPS          equ	526	;# 
  3729   00020F                     RB6PPS          equ	527	;# 
  3730   000210                     RB7PPS          equ	528	;# 
  3731   000211                     RC0PPS          equ	529	;# 
  3732   000212                     RC1PPS          equ	530	;# 
  3733   000213                     RC2PPS          equ	531	;# 
  3734   000214                     RC3PPS          equ	532	;# 
  3735   000215                     RC4PPS          equ	533	;# 
  3736   000216                     RC5PPS          equ	534	;# 
  3737   000217                     RC6PPS          equ	535	;# 
  3738   000218                     RC7PPS          equ	536	;# 
  3739   000219                     RD0PPS          equ	537	;# 
  3740   00021A                     RD1PPS          equ	538	;# 
  3741   00021B                     RD2PPS          equ	539	;# 
  3742   00021C                     RD3PPS          equ	540	;# 
  3743   00021D                     RD4PPS          equ	541	;# 
  3744   00021E                     RD5PPS          equ	542	;# 
  3745   00021F                     RD6PPS          equ	543	;# 
  3746   000220                     RD7PPS          equ	544	;# 
  3747   000221                     RE0PPS          equ	545	;# 
  3748   000222                     RE1PPS          equ	546	;# 
  3749   000223                     RE2PPS          equ	547	;# 
  3750   000229                     RF0PPS          equ	553	;# 
  3751   00022A                     RF1PPS          equ	554	;# 
  3752   00022B                     RF2PPS          equ	555	;# 
  3753   00022C                     RF3PPS          equ	556	;# 
  3754   00022D                     RF4PPS          equ	557	;# 
  3755   00022E                     RF5PPS          equ	558	;# 
  3756   00022F                     RF6PPS          equ	559	;# 
  3757   000230                     RF7PPS          equ	560	;# 
  3758   00023E                     INT0PPS         equ	574	;# 
  3759   00023F                     INT1PPS         equ	575	;# 
  3760   000240                     INT2PPS         equ	576	;# 
  3761   000241                     T0CKIPPS        equ	577	;# 
  3762   000242                     T1CKIPPS        equ	578	;# 
  3763   000243                     T1GPPS          equ	579	;# 
  3764   000244                     T3CKIPPS        equ	580	;# 
  3765   000245                     T3GPPS          equ	581	;# 
  3766   000246                     T5CKIPPS        equ	582	;# 
  3767   000247                     T5GPPS          equ	583	;# 
  3768   000248                     T2INPPS         equ	584	;# 
  3769   000249                     T4INPPS         equ	585	;# 
  3770   00024A                     T6INPPS         equ	586	;# 
  3771   00024F                     CCP1PPS         equ	591	;# 
  3772   000250                     CCP2PPS         equ	592	;# 
  3773   000251                     CCP3PPS         equ	593	;# 
  3774   000253                     PWM1ERSPPS      equ	595	;# 
  3775   000254                     PWM2ERSPPS      equ	596	;# 
  3776   000255                     PWM3ERSPPS      equ	597	;# 
  3777   000257                     PWMIN0PPS       equ	599	;# 
  3778   000258                     PWMIN1PPS       equ	600	;# 
  3779   000259                     SMT1WINPPS      equ	601	;# 
  3780   00025A                     SMT1SIGPPS      equ	602	;# 
  3781   00025B                     CWG1PPS         equ	603	;# 
  3782   00025B                     CWG1INPPS       equ	603	;# 
  3783   00025C                     CWG2PPS         equ	604	;# 
  3784   00025C                     CWG2INPPS       equ	604	;# 
  3785   00025D                     CWG3PPS         equ	605	;# 
  3786   00025D                     CWG3INPPS       equ	605	;# 
  3787   00025E                     MD1CARLPPS      equ	606	;# 
  3788   00025E                     MDCARLPPS       equ	606	;# 
  3789   00025F                     MD1CARHPPS      equ	607	;# 
  3790   00025F                     MDCARHPPS       equ	607	;# 
  3791   000260                     MD1SRCPPS       equ	608	;# 
  3792   000260                     MDSRCPPS        equ	608	;# 
  3793   000261                     CLCIN0PPS       equ	609	;# 
  3794   000262                     CLCIN1PPS       equ	610	;# 
  3795   000263                     CLCIN2PPS       equ	611	;# 
  3796   000264                     CLCIN3PPS       equ	612	;# 
  3797   000265                     CLCIN4PPS       equ	613	;# 
  3798   000266                     CLCIN5PPS       equ	614	;# 
  3799   000267                     CLCIN6PPS       equ	615	;# 
  3800   000268                     CLCIN7PPS       equ	616	;# 
  3801   000269                     ADACTPPS        equ	617	;# 
  3802   00026A                     SPI1SCKPPS      equ	618	;# 
  3803   00026B                     SPI1SDIPPS      equ	619	;# 
  3804   00026C                     SPI1SSPPS       equ	620	;# 
  3805   00026D                     SPI2SCKPPS      equ	621	;# 
  3806   00026E                     SPI2SDIPPS      equ	622	;# 
  3807   00026F                     SPI2SSPPS       equ	623	;# 
  3808   000270                     I2C1SDAPPS      equ	624	;# 
  3809   000271                     I2C1SCLPPS      equ	625	;# 
  3810   000272                     U1RXPPS         equ	626	;# 
  3811   000273                     U1CTSPPS        equ	627	;# 
  3812   000274                     U2RXPPS         equ	628	;# 
  3813   000275                     U2CTSPPS        equ	629	;# 
  3814   000276                     U3RXPPS         equ	630	;# 
  3815   000277                     U3CTSPPS        equ	631	;# 
  3816   000278                     U4RXPPS         equ	632	;# 
  3817   000279                     U4CTSPPS        equ	633	;# 
  3818   00027A                     U5RXPPS         equ	634	;# 
  3819   00027B                     U5CTSPPS        equ	635	;# 
  3820   000286                     RC4I2C          equ	646	;# 
  3821   000287                     RC3I2C          equ	647	;# 
  3822   000288                     RB2I2C          equ	648	;# 
  3823   000289                     RB1I2C          equ	649	;# 
  3824   00028B                     I2C1RXB         equ	651	;# 
  3825   00028C                     I2C1TXB         equ	652	;# 
  3826   00028D                     I2C1CNT         equ	653	;# 
  3827   00028E                     I2C1ADB0        equ	654	;# 
  3828   00028F                     I2C1ADB1        equ	655	;# 
  3829   000290                     I2C1ADR0        equ	656	;# 
  3830   000291                     I2C1ADR1        equ	657	;# 
  3831   000292                     I2C1ADR2        equ	658	;# 
  3832   000293                     I2C1ADR3        equ	659	;# 
  3833   000294                     I2C1CON0        equ	660	;# 
  3834   000295                     I2C1CON1        equ	661	;# 
  3835   000296                     I2C1CON2        equ	662	;# 
  3836   000297                     I2C1ERR         equ	663	;# 
  3837   000298                     I2C1STAT0       equ	664	;# 
  3838   000299                     I2C1STAT1       equ	665	;# 
  3839   00029A                     I2C1PIR         equ	666	;# 
  3840   00029B                     I2C1PIE         equ	667	;# 
  3841   00029C                     I2C1CLK         equ	668	;# 
  3842   00029D                     I2C1BTO         equ	669	;# 
  3843   0002A1                     U1RXB           equ	673	;# 
  3844   0002A1                     U1RXBL          equ	673	;# 
  3845   0002A2                     U1RXCHK         equ	674	;# 
  3846   0002A3                     U1TXB           equ	675	;# 
  3847   0002A3                     U1TXBL          equ	675	;# 
  3848   0002A4                     U1TXCHK         equ	676	;# 
  3849   0002A5                     U1P1            equ	677	;# 
  3850   0002A5                     U1P1L           equ	677	;# 
  3851   0002A6                     U1P1H           equ	678	;# 
  3852   0002A7                     U1P2            equ	679	;# 
  3853   0002A7                     U1P2L           equ	679	;# 
  3854   0002A8                     U1P2H           equ	680	;# 
  3855   0002A9                     U1P3            equ	681	;# 
  3856   0002A9                     U1P3L           equ	681	;# 
  3857   0002AA                     U1P3H           equ	682	;# 
  3858   0002AB                     U1CON0          equ	683	;# 
  3859   0002AC                     U1CON1          equ	684	;# 
  3860   0002AD                     U1CON2          equ	685	;# 
  3861   0002AE                     U1BRG           equ	686	;# 
  3862   0002AE                     U1BRGL          equ	686	;# 
  3863   0002AF                     U1BRGH          equ	687	;# 
  3864   0002B0                     U1FIFO          equ	688	;# 
  3865   0002B1                     U1UIR           equ	689	;# 
  3866   0002B2                     U1ERRIR         equ	690	;# 
  3867   0002B3                     U1ERRIE         equ	691	;# 
  3868   0002B4                     U2RXB           equ	692	;# 
  3869   0002B4                     U2RXBL          equ	692	;# 
  3870   0002B6                     U2TXB           equ	694	;# 
  3871   0002B6                     U2TXBL          equ	694	;# 
  3872   0002B8                     U2P1            equ	696	;# 
  3873   0002B8                     U2P1L           equ	696	;# 
  3874   0002BA                     U2P2            equ	698	;# 
  3875   0002BA                     U2P2L           equ	698	;# 
  3876   0002BC                     U2P3            equ	700	;# 
  3877   0002BC                     U2P3L           equ	700	;# 
  3878   0002BE                     U2CON0          equ	702	;# 
  3879   0002BF                     U2CON1          equ	703	;# 
  3880   0002C0                     U2CON2          equ	704	;# 
  3881   0002C1                     U2BRG           equ	705	;# 
  3882   0002C1                     U2BRGL          equ	705	;# 
  3883   0002C2                     U2BRGH          equ	706	;# 
  3884   0002C3                     U2FIFO          equ	707	;# 
  3885   0002C4                     U2UIR           equ	708	;# 
  3886   0002C5                     U2ERRIR         equ	709	;# 
  3887   0002C6                     U2ERRIE         equ	710	;# 
  3888   0002C7                     U3RXB           equ	711	;# 
  3889   0002C7                     U3RXBL          equ	711	;# 
  3890   0002C9                     U3TXB           equ	713	;# 
  3891   0002C9                     U3TXBL          equ	713	;# 
  3892   0002CB                     U3P1            equ	715	;# 
  3893   0002CB                     U3P1L           equ	715	;# 
  3894   0002CD                     U3P2            equ	717	;# 
  3895   0002CD                     U3P2L           equ	717	;# 
  3896   0002CF                     U3P3            equ	719	;# 
  3897   0002CF                     U3P3L           equ	719	;# 
  3898   0002D1                     U3CON0          equ	721	;# 
  3899   0002D2                     U3CON1          equ	722	;# 
  3900   0002D3                     U3CON2          equ	723	;# 
  3901   0002D4                     U3BRG           equ	724	;# 
  3902   0002D4                     U3BRGL          equ	724	;# 
  3903   0002D5                     U3BRGH          equ	725	;# 
  3904   0002D6                     U3FIFO          equ	726	;# 
  3905   0002D7                     U3UIR           equ	727	;# 
  3906   0002D8                     U3ERRIR         equ	728	;# 
  3907   0002D9                     U3ERRIE         equ	729	;# 
  3908   0002DA                     U4RXB           equ	730	;# 
  3909   0002DA                     U4RXBL          equ	730	;# 
  3910   0002DC                     U4TXB           equ	732	;# 
  3911   0002DC                     U4TXBL          equ	732	;# 
  3912   0002DE                     U4P1            equ	734	;# 
  3913   0002DE                     U4P1L           equ	734	;# 
  3914   0002E0                     U4P2            equ	736	;# 
  3915   0002E0                     U4P2L           equ	736	;# 
  3916   0002E2                     U4P3            equ	738	;# 
  3917   0002E2                     U4P3L           equ	738	;# 
  3918   0002E4                     U4CON0          equ	740	;# 
  3919   0002E5                     U4CON1          equ	741	;# 
  3920   0002E6                     U4CON2          equ	742	;# 
  3921   0002E7                     U4BRG           equ	743	;# 
  3922   0002E7                     U4BRGL          equ	743	;# 
  3923   0002E8                     U4BRGH          equ	744	;# 
  3924   0002E9                     U4FIFO          equ	745	;# 
  3925   0002EA                     U4UIR           equ	746	;# 
  3926   0002EB                     U4ERRIR         equ	747	;# 
  3927   0002EC                     U4ERRIE         equ	748	;# 
  3928   0002ED                     U5RXB           equ	749	;# 
  3929   0002ED                     U5RXBL          equ	749	;# 
  3930   0002EF                     U5TXB           equ	751	;# 
  3931   0002EF                     U5TXBL          equ	751	;# 
  3932   0002F1                     U5P1            equ	753	;# 
  3933   0002F1                     U5P1L           equ	753	;# 
  3934   0002F3                     U5P2            equ	755	;# 
  3935   0002F3                     U5P2L           equ	755	;# 
  3936   0002F5                     U5P3            equ	757	;# 
  3937   0002F5                     U5P3L           equ	757	;# 
  3938   0002F7                     U5CON0          equ	759	;# 
  3939   0002F8                     U5CON1          equ	760	;# 
  3940   0002F9                     U5CON2          equ	761	;# 
  3941   0002FA                     U5BRG           equ	762	;# 
  3942   0002FA                     U5BRGL          equ	762	;# 
  3943   0002FB                     U5BRGH          equ	763	;# 
  3944   0002FC                     U5FIFO          equ	764	;# 
  3945   0002FD                     U5UIR           equ	765	;# 
  3946   0002FE                     U5ERRIR         equ	766	;# 
  3947   0002FF                     U5ERRIE         equ	767	;# 
  3948   000300                     SMT1TMR         equ	768	;# 
  3949   000300                     SMT1TMRL        equ	768	;# 
  3950   000301                     SMT1TMRH        equ	769	;# 
  3951   000302                     SMT1TMRU        equ	770	;# 
  3952   000303                     SMT1CPR         equ	771	;# 
  3953   000303                     SMT1CPRL        equ	771	;# 
  3954   000304                     SMT1CPRH        equ	772	;# 
  3955   000305                     SMT1CPRU        equ	773	;# 
  3956   000306                     SMT1CPW         equ	774	;# 
  3957   000306                     SMT1CPWL        equ	774	;# 
  3958   000307                     SMT1CPWH        equ	775	;# 
  3959   000308                     SMT1CPWU        equ	776	;# 
  3960   000309                     SMT1PR          equ	777	;# 
  3961   000309                     SMT1PRL         equ	777	;# 
  3962   00030A                     SMT1PRH         equ	778	;# 
  3963   00030B                     SMT1PRU         equ	779	;# 
  3964   00030C                     SMT1CON0        equ	780	;# 
  3965   00030D                     SMT1CON1        equ	781	;# 
  3966   00030E                     SMT1STAT        equ	782	;# 
  3967   00030F                     SMT1CLK         equ	783	;# 
  3968   000310                     SMT1SIG         equ	784	;# 
  3969   000311                     SMT1WIN         equ	785	;# 
  3970   000318                     TMR0L           equ	792	;# 
  3971   000318                     TMR0            equ	792	;# 
  3972   000319                     TMR0H           equ	793	;# 
  3973   000319                     PR0             equ	793	;# 
  3974   00031A                     T0CON0          equ	794	;# 
  3975   00031B                     T0CON1          equ	795	;# 
  3976   00031C                     TMR1            equ	796	;# 
  3977   00031C                     TMR1L           equ	796	;# 
  3978   00031D                     TMR1H           equ	797	;# 
  3979   00031E                     T1CON           equ	798	;# 
  3980   00031E                     TMR1CON         equ	798	;# 
  3981   00031F                     T1GCON          equ	799	;# 
  3982   00031F                     TMR1GCON        equ	799	;# 
  3983   000320                     T1GATE          equ	800	;# 
  3984   000320                     TMR1GATE        equ	800	;# 
  3985   000321                     T1CLK           equ	801	;# 
  3986   000321                     TMR1CLK         equ	801	;# 
  3987   000321                     PR1             equ	801	;# 
  3988   000322                     T2TMR           equ	802	;# 
  3989   000322                     TMR2            equ	802	;# 
  3990   000323                     T2PR            equ	803	;# 
  3991   000323                     PR2             equ	803	;# 
  3992   000324                     T2CON           equ	804	;# 
  3993   000325                     T2HLT           equ	805	;# 
  3994   000326                     T2CLKCON        equ	806	;# 
  3995   000326                     T2CLK           equ	806	;# 
  3996   000327                     T2RST           equ	807	;# 
  3997   000328                     TMR3            equ	808	;# 
  3998   000328                     TMR3L           equ	808	;# 
  3999   000329                     TMR3H           equ	809	;# 
  4000   00032A                     T3CON           equ	810	;# 
  4001   00032A                     TMR3CON         equ	810	;# 
  4002   00032B                     T3GCON          equ	811	;# 
  4003   00032B                     TMR3GCON        equ	811	;# 
  4004   00032C                     T3GATE          equ	812	;# 
  4005   00032C                     TMR3GATE        equ	812	;# 
  4006   00032D                     T3CLK           equ	813	;# 
  4007   00032D                     TMR3CLK         equ	813	;# 
  4008   00032D                     PR3             equ	813	;# 
  4009   00032E                     T4TMR           equ	814	;# 
  4010   00032E                     TMR4            equ	814	;# 
  4011   00032F                     T4PR            equ	815	;# 
  4012   00032F                     PR4             equ	815	;# 
  4013   000330                     T4CON           equ	816	;# 
  4014   000331                     T4HLT           equ	817	;# 
  4015   000332                     T4CLKCON        equ	818	;# 
  4016   000332                     T4CLK           equ	818	;# 
  4017   000333                     T4RST           equ	819	;# 
  4018   000334                     TMR5            equ	820	;# 
  4019   000334                     TMR5L           equ	820	;# 
  4020   000335                     TMR5H           equ	821	;# 
  4021   000336                     T5CON           equ	822	;# 
  4022   000336                     TMR5CON         equ	822	;# 
  4023   000337                     T5GCON          equ	823	;# 
  4024   000337                     TMR5GCON        equ	823	;# 
  4025   000338                     T5GATE          equ	824	;# 
  4026   000338                     TMR5GATE        equ	824	;# 
  4027   000339                     T5CLK           equ	825	;# 
  4028   000339                     TMR5CLK         equ	825	;# 
  4029   000339                     PR5             equ	825	;# 
  4030   00033A                     T6TMR           equ	826	;# 
  4031   00033A                     TMR6            equ	826	;# 
  4032   00033B                     T6PR            equ	827	;# 
  4033   00033B                     PR6             equ	827	;# 
  4034   00033C                     T6CON           equ	828	;# 
  4035   00033D                     T6HLT           equ	829	;# 
  4036   00033E                     T6CLKCON        equ	830	;# 
  4037   00033E                     T6CLK           equ	830	;# 
  4038   00033F                     T6RST           equ	831	;# 
  4039   000340                     CCPR1           equ	832	;# 
  4040   000340                     CCPR1L          equ	832	;# 
  4041   000341                     CCPR1H          equ	833	;# 
  4042   000342                     CCP1CON         equ	834	;# 
  4043   000343                     CCP1CAP         equ	835	;# 
  4044   000344                     CCPR2           equ	836	;# 
  4045   000344                     CCPR2L          equ	836	;# 
  4046   000345                     CCPR2H          equ	837	;# 
  4047   000346                     CCP2CON         equ	838	;# 
  4048   000347                     CCP2CAP         equ	839	;# 
  4049   000348                     CCPR3           equ	840	;# 
  4050   000348                     CCPR3L          equ	840	;# 
  4051   000349                     CCPR3H          equ	841	;# 
  4052   00034A                     CCP3CON         equ	842	;# 
  4053   00034B                     CCP3CAP         equ	843	;# 
  4054   00034C                     CCPTMRS0        equ	844	;# 
  4055   00034F                     CRCDATA         equ	847	;# 
  4056   00034F                     CRCDATL         equ	847	;# 
  4057   000350                     CRCDATH         equ	848	;# 
  4058   000351                     CRCACC          equ	849	;# 
  4059   000351                     CRCACCL         equ	849	;# 
  4060   000352                     CRCACCH         equ	850	;# 
  4061   000353                     CRCSHFT         equ	851	;# 
  4062   000353                     CRCSHIFTL       equ	851	;# 
  4063   000354                     CRCSHIFTH       equ	852	;# 
  4064   000355                     CRCXOR          equ	853	;# 
  4065   000355                     CRCXORL         equ	853	;# 
  4066   000356                     CRCXORH         equ	854	;# 
  4067   000357                     CRCCON0         equ	855	;# 
  4068   000358                     CRCCON1         equ	856	;# 
  4069   00035A                     SCANLADR        equ	858	;# 
  4070   00035A                     SCANLADRL       equ	858	;# 
  4071   00035B                     SCANLADRH       equ	859	;# 
  4072   00035C                     SCANLADRU       equ	860	;# 
  4073   00035D                     SCANHADR        equ	861	;# 
  4074   00035D                     SCANHADRL       equ	861	;# 
  4075   00035E                     SCANHADRH       equ	862	;# 
  4076   00035F                     SCANHADRU       equ	863	;# 
  4077   000360                     SCANCON0        equ	864	;# 
  4078   000361                     SCANTRIG        equ	865	;# 
  4079   000362                     IPR0            equ	866	;# 
  4080   000363                     IPR1            equ	867	;# 
  4081   000364                     IPR2            equ	868	;# 
  4082   000365                     IPR3            equ	869	;# 
  4083   000366                     IPR4            equ	870	;# 
  4084   000367                     IPR5            equ	871	;# 
  4085   000368                     IPR6            equ	872	;# 
  4086   000369                     IPR7            equ	873	;# 
  4087   00036A                     IPR8            equ	874	;# 
  4088   00036B                     IPR9            equ	875	;# 
  4089   00036C                     IPR10           equ	876	;# 
  4090   00036D                     IPR11           equ	877	;# 
  4091   00036E                     IPR12           equ	878	;# 
  4092   00036F                     IPR13           equ	879	;# 
  4093   000370                     IPR14           equ	880	;# 
  4094   000371                     IPR15           equ	881	;# 
  4095   000373                     STATUS_CSHAD    equ	883	;# 
  4096   000374                     WREG_CSHAD      equ	884	;# 
  4097   000375                     BSR_CSHAD       equ	885	;# 
  4098   000376                     SHADCON         equ	886	;# 
  4099   000377                     STATUS_SHAD     equ	887	;# 
  4100   000378                     WREG_SHAD       equ	888	;# 
  4101   000379                     BSR_SHAD        equ	889	;# 
  4102   00037A                     PCLATH_SHAD     equ	890	;# 
  4103   00037B                     PCLATU_SHAD     equ	891	;# 
  4104   00037C                     FSR0SH          equ	892	;# 
  4105   00037C                     FSR0L_SHAD      equ	892	;# 
  4106   00037D                     FSR0H_SHAD      equ	893	;# 
  4107   00037E                     FSR1SH          equ	894	;# 
  4108   00037E                     FSR1L_SHAD      equ	894	;# 
  4109   00037F                     FSR1H_SHAD      equ	895	;# 
  4110   000380                     FSR2SH          equ	896	;# 
  4111   000380                     FSR2L_SHAD      equ	896	;# 
  4112   000381                     FSR2H_SHAD      equ	897	;# 
  4113   000382                     PRODSH          equ	898	;# 
  4114   000382                     PRODL_SHAD      equ	898	;# 
  4115   000383                     PRODH_SHAD      equ	899	;# 
  4116   0003BC                     CWG1CLK         equ	956	;# 
  4117   0003BC                     CWG1CLKCON      equ	956	;# 
  4118   0003BD                     CWG1ISM         equ	957	;# 
  4119   0003BD                     CWG1DAT         equ	957	;# 
  4120   0003BE                     CWG1DBR         equ	958	;# 
  4121   0003BF                     CWG1DBF         equ	959	;# 
  4122   0003C0                     CWG1CON0        equ	960	;# 
  4123   0003C1                     CWG1CON1        equ	961	;# 
  4124   0003C2                     CWG1AS0         equ	962	;# 
  4125   0003C3                     CWG1AS1         equ	963	;# 
  4126   0003C4                     CWG1STR         equ	964	;# 
  4127   0003C5                     CWG2CLK         equ	965	;# 
  4128   0003C5                     CWG2CLKCON      equ	965	;# 
  4129   0003C6                     CWG2ISM         equ	966	;# 
  4130   0003C6                     CWG2DAT         equ	966	;# 
  4131   0003C7                     CWG2DBR         equ	967	;# 
  4132   0003C8                     CWG2DBF         equ	968	;# 
  4133   0003C9                     CWG2CON0        equ	969	;# 
  4134   0003CA                     CWG2CON1        equ	970	;# 
  4135   0003CB                     CWG2AS0         equ	971	;# 
  4136   0003CC                     CWG2AS1         equ	972	;# 
  4137   0003CD                     CWG2STR         equ	973	;# 
  4138   0003CE                     CWG3CLK         equ	974	;# 
  4139   0003CE                     CWG3CLKCON      equ	974	;# 
  4140   0003CF                     CWG3ISM         equ	975	;# 
  4141   0003CF                     CWG3DAT         equ	975	;# 
  4142   0003D0                     CWG3DBR         equ	976	;# 
  4143   0003D1                     CWG3DBF         equ	977	;# 
  4144   0003D2                     CWG3CON0        equ	978	;# 
  4145   0003D3                     CWG3CON1        equ	979	;# 
  4146   0003D4                     CWG3AS0         equ	980	;# 
  4147   0003D5                     CWG3AS1         equ	981	;# 
  4148   0003D6                     CWG3STR         equ	982	;# 
  4149   0003D7                     FVRCON          equ	983	;# 
  4150   0003D8                     ADCPCON         equ	984	;# 
  4151   0003D8                     ADCP            equ	984	;# 
  4152   0003D9                     ADLTH           equ	985	;# 
  4153   0003D9                     ADLTHL          equ	985	;# 
  4154   0003DA                     ADLTHH          equ	986	;# 
  4155   0003DB                     ADUTH           equ	987	;# 
  4156   0003DB                     ADUTHL          equ	987	;# 
  4157   0003DC                     ADUTHH          equ	988	;# 
  4158   0003DD                     ADERR           equ	989	;# 
  4159   0003DD                     ADERRL          equ	989	;# 
  4160   0003DE                     ADERRH          equ	990	;# 
  4161   0003DF                     ADSTPT          equ	991	;# 
  4162   0003DF                     ADSTPTL         equ	991	;# 
  4163   0003E0                     ADSTPTH         equ	992	;# 
  4164   0003E1                     ADFLTR          equ	993	;# 
  4165   0003E1                     ADFLTRL         equ	993	;# 
  4166   0003E2                     ADFLTRH         equ	994	;# 
  4167   0003E3                     ADACC           equ	995	;# 
  4168   0003E3                     ADACCL          equ	995	;# 
  4169   0003E4                     ADACCH          equ	996	;# 
  4170   0003E5                     ADACCU          equ	997	;# 
  4171   0003E6                     ADCNT           equ	998	;# 
  4172   0003E7                     ADRPT           equ	999	;# 
  4173   0003E8                     ADPREV          equ	1000	;# 
  4174   0003E8                     ADPREVL         equ	1000	;# 
  4175   0003E9                     ADPREVH         equ	1001	;# 
  4176   0003EA                     ADRES           equ	1002	;# 
  4177   0003EA                     ADRESL          equ	1002	;# 
  4178   0003EB                     ADRESH          equ	1003	;# 
  4179   0003EC                     ADPCH           equ	1004	;# 
  4180   0003EE                     ADACQ           equ	1006	;# 
  4181   0003EE                     ADACQL          equ	1006	;# 
  4182   0003EF                     ADACQH          equ	1007	;# 
  4183   0003F0                     ADCAP           equ	1008	;# 
  4184   0003F1                     ADPRE           equ	1009	;# 
  4185   0003F1                     ADPREL          equ	1009	;# 
  4186   0003F2                     ADPREH          equ	1010	;# 
  4187   0003F3                     ADCON0          equ	1011	;# 
  4188   0003F4                     ADCON1          equ	1012	;# 
  4189   0003F5                     ADCON2          equ	1013	;# 
  4190   0003F6                     ADCON3          equ	1014	;# 
  4191   0003F7                     ADSTAT          equ	1015	;# 
  4192   0003F8                     ADREF           equ	1016	;# 
  4193   0003F9                     ADACT           equ	1017	;# 
  4194   0003FA                     ADCLK           equ	1018	;# 
  4195   000400                     ANSELA          equ	1024	;# 
  4196   000401                     WPUA            equ	1025	;# 
  4197   000402                     ODCONA          equ	1026	;# 
  4198   000403                     SLRCONA         equ	1027	;# 
  4199   000404                     INLVLA          equ	1028	;# 
  4200   000405                     IOCAP           equ	1029	;# 
  4201   000406                     IOCAN           equ	1030	;# 
  4202   000407                     IOCAF           equ	1031	;# 
  4203   000408                     ANSELB          equ	1032	;# 
  4204   000409                     WPUB            equ	1033	;# 
  4205   00040A                     ODCONB          equ	1034	;# 
  4206   00040B                     SLRCONB         equ	1035	;# 
  4207   00040C                     INLVLB          equ	1036	;# 
  4208   00040D                     IOCBP           equ	1037	;# 
  4209   00040E                     IOCBN           equ	1038	;# 
  4210   00040F                     IOCBF           equ	1039	;# 
  4211   000410                     ANSELC          equ	1040	;# 
  4212   000411                     WPUC            equ	1041	;# 
  4213   000412                     ODCONC          equ	1042	;# 
  4214   000413                     SLRCONC         equ	1043	;# 
  4215   000414                     INLVLC          equ	1044	;# 
  4216   000415                     IOCCP           equ	1045	;# 
  4217   000416                     IOCCN           equ	1046	;# 
  4218   000417                     IOCCF           equ	1047	;# 
  4219   000418                     ANSELD          equ	1048	;# 
  4220   000419                     WPUD            equ	1049	;# 
  4221   00041A                     ODCOND          equ	1050	;# 
  4222   00041B                     SLRCOND         equ	1051	;# 
  4223   00041C                     INLVLD          equ	1052	;# 
  4224   000420                     ANSELE          equ	1056	;# 
  4225   000421                     WPUE            equ	1057	;# 
  4226   000422                     ODCONE          equ	1058	;# 
  4227   000423                     SLRCONE         equ	1059	;# 
  4228   000424                     INLVLE          equ	1060	;# 
  4229   000425                     IOCEP           equ	1061	;# 
  4230   000426                     IOCEN           equ	1062	;# 
  4231   000427                     IOCEF           equ	1063	;# 
  4232   000428                     ANSELF          equ	1064	;# 
  4233   000429                     WPUF            equ	1065	;# 
  4234   00042A                     ODCONF          equ	1066	;# 
  4235   00042B                     SLRCONF         equ	1067	;# 
  4236   00042C                     INLVLF          equ	1068	;# 
  4237   000440                     NCO1ACC         equ	1088	;# 
  4238   000440                     NCO1ACCL        equ	1088	;# 
  4239   000441                     NCO1ACCH        equ	1089	;# 
  4240   000442                     NCO1ACCU        equ	1090	;# 
  4241   000443                     NCO1INC         equ	1091	;# 
  4242   000443                     NCO1INCL        equ	1091	;# 
  4243   000444                     NCO1INCH        equ	1092	;# 
  4244   000445                     NCO1INCU        equ	1093	;# 
  4245   000446                     NCO1CON         equ	1094	;# 
  4246   000447                     NCO1CLK         equ	1095	;# 
  4247   000448                     NCO2ACC         equ	1096	;# 
  4248   000448                     NCO2ACCL        equ	1096	;# 
  4249   000449                     NCO2ACCH        equ	1097	;# 
  4250   00044A                     NCO2ACCU        equ	1098	;# 
  4251   00044B                     NCO2INC         equ	1099	;# 
  4252   00044B                     NCO2INCL        equ	1099	;# 
  4253   00044C                     NCO2INCH        equ	1100	;# 
  4254   00044D                     NCO2INCU        equ	1101	;# 
  4255   00044E                     NCO2CON         equ	1102	;# 
  4256   00044F                     NCO2CLK         equ	1103	;# 
  4257   000450                     NCO3ACC         equ	1104	;# 
  4258   000450                     NCO3ACCL        equ	1104	;# 
  4259   000451                     NCO3ACCH        equ	1105	;# 
  4260   000452                     NCO3ACCU        equ	1106	;# 
  4261   000453                     NCO3INC         equ	1107	;# 
  4262   000453                     NCO3INCL        equ	1107	;# 
  4263   000454                     NCO3INCH        equ	1108	;# 
  4264   000455                     NCO3INCU        equ	1109	;# 
  4265   000456                     NCO3CON         equ	1110	;# 
  4266   000457                     NCO3CLK         equ	1111	;# 
  4267   000459                     IVTLOCK         equ	1113	;# 
  4268   00045A                     IVTAD           equ	1114	;# 
  4269   00045A                     IVTADL          equ	1114	;# 
  4270   00045B                     IVTADH          equ	1115	;# 
  4271   00045C                     IVTADU          equ	1116	;# 
  4272   00045D                     IVTBASE         equ	1117	;# 
  4273   00045D                     IVTBASEL        equ	1117	;# 
  4274   00045E                     IVTBASEH        equ	1118	;# 
  4275   00045F                     IVTBASEU        equ	1119	;# 
  4276   000460                     PWM1ERS         equ	1120	;# 
  4277   000461                     PWM1CLK         equ	1121	;# 
  4278   000462                     PWM1LDS         equ	1122	;# 
  4279   000463                     PWM1PR          equ	1123	;# 
  4280   000463                     PWM1PRL         equ	1123	;# 
  4281   000464                     PWM1PRH         equ	1124	;# 
  4282   000465                     PWM1CPRE        equ	1125	;# 
  4283   000466                     PWM1PIPOS       equ	1126	;# 
  4284   000467                     PWM1GIR         equ	1127	;# 
  4285   000468                     PWM1GIE         equ	1128	;# 
  4286   000469                     PWM1CON         equ	1129	;# 
  4287   00046A                     PWM1S1CFG       equ	1130	;# 
  4288   00046B                     PWM1S1P1        equ	1131	;# 
  4289   00046B                     PWM1S1P1L       equ	1131	;# 
  4290   00046C                     PWM1S1P1H       equ	1132	;# 
  4291   00046D                     PWM1S1P2        equ	1133	;# 
  4292   00046D                     PWM1S1P2L       equ	1133	;# 
  4293   00046E                     PWM1S1P2H       equ	1134	;# 
  4294   00046F                     PWM2ERS         equ	1135	;# 
  4295   000470                     PWM2CLK         equ	1136	;# 
  4296   000471                     PWM2LDS         equ	1137	;# 
  4297   000472                     PWM2PR          equ	1138	;# 
  4298   000472                     PWM2PRL         equ	1138	;# 
  4299   000473                     PWM2PRH         equ	1139	;# 
  4300   000474                     PWM2CPRE        equ	1140	;# 
  4301   000475                     PWM2PIPOS       equ	1141	;# 
  4302   000476                     PWM2GIR         equ	1142	;# 
  4303   000477                     PWM2GIE         equ	1143	;# 
  4304   000478                     PWM2CON         equ	1144	;# 
  4305   000479                     PWM2S1CFG       equ	1145	;# 
  4306   00047A                     PWM2S1P1        equ	1146	;# 
  4307   00047A                     PWM2S1P1L       equ	1146	;# 
  4308   00047B                     PWM2S1P1H       equ	1147	;# 
  4309   00047C                     PWM2S1P2        equ	1148	;# 
  4310   00047C                     PWM2S1P2L       equ	1148	;# 
  4311   00047D                     PWM2S1P2H       equ	1149	;# 
  4312   00047E                     PWM3ERS         equ	1150	;# 
  4313   00047F                     PWM3CLK         equ	1151	;# 
  4314   000480                     PWM3LDS         equ	1152	;# 
  4315   000481                     PWM3PR          equ	1153	;# 
  4316   000481                     PWM3PRL         equ	1153	;# 
  4317   000482                     PWM3PRH         equ	1154	;# 
  4318   000483                     PWM3CPRE        equ	1155	;# 
  4319   000484                     PWM3PIPOS       equ	1156	;# 
  4320   000485                     PWM3GIR         equ	1157	;# 
  4321   000486                     PWM3GIE         equ	1158	;# 
  4322   000487                     PWM3CON         equ	1159	;# 
  4323   000488                     PWM3S1CFG       equ	1160	;# 
  4324   000489                     PWM3S1P1        equ	1161	;# 
  4325   000489                     PWM3S1P1L       equ	1161	;# 
  4326   00048A                     PWM3S1P1H       equ	1162	;# 
  4327   00048B                     PWM3S1P2        equ	1163	;# 
  4328   00048B                     PWM3S1P2L       equ	1163	;# 
  4329   00048C                     PWM3S1P2H       equ	1164	;# 
  4330   00049C                     PWMLOAD         equ	1180	;# 
  4331   00049D                     PWMEN           equ	1181	;# 
  4332   00049E                     PIE0            equ	1182	;# 
  4333   00049F                     PIE1            equ	1183	;# 
  4334   0004A0                     PIE2            equ	1184	;# 
  4335   0004A1                     PIE3            equ	1185	;# 
  4336   0004A2                     PIE4            equ	1186	;# 
  4337   0004A3                     PIE5            equ	1187	;# 
  4338   0004A4                     PIE6            equ	1188	;# 
  4339   0004A5                     PIE7            equ	1189	;# 
  4340   0004A6                     PIE8            equ	1190	;# 
  4341   0004A7                     PIE9            equ	1191	;# 
  4342   0004A8                     PIE10           equ	1192	;# 
  4343   0004A9                     PIE11           equ	1193	;# 
  4344   0004AA                     PIE12           equ	1194	;# 
  4345   0004AB                     PIE13           equ	1195	;# 
  4346   0004AC                     PIE14           equ	1196	;# 
  4347   0004AD                     PIE15           equ	1197	;# 
  4348   0004AE                     PIR0            equ	1198	;# 
  4349   0004AF                     PIR1            equ	1199	;# 
  4350   0004B0                     PIR2            equ	1200	;# 
  4351   0004B1                     PIR3            equ	1201	;# 
  4352   0004B2                     PIR4            equ	1202	;# 
  4353   0004B3                     PIR5            equ	1203	;# 
  4354   0004B4                     PIR6            equ	1204	;# 
  4355   0004B5                     PIR7            equ	1205	;# 
  4356   0004B6                     PIR8            equ	1206	;# 
  4357   0004B7                     PIR9            equ	1207	;# 
  4358   0004B8                     PIR10           equ	1208	;# 
  4359   0004B9                     PIR11           equ	1209	;# 
  4360   0004BA                     PIR12           equ	1210	;# 
  4361   0004BB                     PIR13           equ	1211	;# 
  4362   0004BC                     PIR14           equ	1212	;# 
  4363   0004BD                     PIR15           equ	1213	;# 
  4364   0004BE                     LATA            equ	1214	;# 
  4365   0004BF                     LATB            equ	1215	;# 
  4366   0004C0                     LATC            equ	1216	;# 
  4367   0004C1                     LATD            equ	1217	;# 
  4368   0004C2                     LATE            equ	1218	;# 
  4369   0004C3                     LATF            equ	1219	;# 
  4370   0004C6                     TRISA           equ	1222	;# 
  4371   0004C7                     TRISB           equ	1223	;# 
  4372   0004C8                     TRISC           equ	1224	;# 
  4373   0004C9                     TRISD           equ	1225	;# 
  4374   0004CA                     TRISE           equ	1226	;# 
  4375   0004CB                     TRISF           equ	1227	;# 
  4376   0004CE                     PORTA           equ	1230	;# 
  4377   0004CF                     PORTB           equ	1231	;# 
  4378   0004D0                     PORTC           equ	1232	;# 
  4379   0004D1                     PORTD           equ	1233	;# 
  4380   0004D2                     PORTE           equ	1234	;# 
  4381   0004D3                     PORTF           equ	1235	;# 
  4382   0004D6                     INTCON0         equ	1238	;# 
  4383   0004D7                     INTCON1         equ	1239	;# 
  4384   0004D8                     STATUS          equ	1240	;# 
  4385   0004D9                     FSR2            equ	1241	;# 
  4386   0004D9                     FSR2L           equ	1241	;# 
  4387   0004DA                     FSR2H           equ	1242	;# 
  4388   0004DB                     PLUSW2          equ	1243	;# 
  4389   0004DC                     PREINC2         equ	1244	;# 
  4390   0004DD                     POSTDEC2        equ	1245	;# 
  4391   0004DE                     POSTINC2        equ	1246	;# 
  4392   0004DF                     INDF2           equ	1247	;# 
  4393   0004E0                     BSR             equ	1248	;# 
  4394   0004E1                     FSR1            equ	1249	;# 
  4395   0004E1                     FSR1L           equ	1249	;# 
  4396   0004E2                     FSR1H           equ	1250	;# 
  4397   0004E3                     PLUSW1          equ	1251	;# 
  4398   0004E4                     PREINC1         equ	1252	;# 
  4399   0004E5                     POSTDEC1        equ	1253	;# 
  4400   0004E6                     POSTINC1        equ	1254	;# 
  4401   0004E7                     INDF1           equ	1255	;# 
  4402   0004E8                     WREG            equ	1256	;# 
  4403   0004E9                     FSR0            equ	1257	;# 
  4404   0004E9                     FSR0L           equ	1257	;# 
  4405   0004EA                     FSR0H           equ	1258	;# 
  4406   0004EB                     PLUSW0          equ	1259	;# 
  4407   0004EC                     PREINC0         equ	1260	;# 
  4408   0004ED                     POSTDEC0        equ	1261	;# 
  4409   0004EE                     POSTINC0        equ	1262	;# 
  4410   0004EF                     INDF0           equ	1263	;# 
  4411   0004F0                     PCON0           equ	1264	;# 
  4412   0004F1                     PCON1           equ	1265	;# 
  4413   0004F2                     CPUDOZE         equ	1266	;# 
  4414   0004F3                     PROD            equ	1267	;# 
  4415   0004F3                     PRODL           equ	1267	;# 
  4416   0004F4                     PRODH           equ	1268	;# 
  4417   0004F5                     TABLAT          equ	1269	;# 
  4418   0004F6                     TBLPTR          equ	1270	;# 
  4419   0004F6                     TBLPTRL         equ	1270	;# 
  4420   0004F7                     TBLPTRH         equ	1271	;# 
  4421   0004F8                     TBLPTRU         equ	1272	;# 
  4422   0004F9                     PCLAT           equ	1273	;# 
  4423   0004F9                     PCL             equ	1273	;# 
  4424   0004FA                     PCLATH          equ	1274	;# 
  4425   0004FB                     PCLATU          equ	1275	;# 
  4426   0004FC                     STKPTR          equ	1276	;# 
  4427   0004FD                     TOS             equ	1277	;# 
  4428   0004FD                     TOSL            equ	1277	;# 
  4429   0004FE                     TOSH            equ	1278	;# 
  4430   0004FF                     TOSU            equ	1279	;# 
  4431   000039                     CLKRCON         equ	57	;# 
  4432   00003A                     CLKRCLK         equ	58	;# 
  4433   000040                     NVMCON0         equ	64	;# 
  4434   000041                     NVMCON1         equ	65	;# 
  4435   000042                     NVMLOCK         equ	66	;# 
  4436   000043                     NVMADR          equ	67	;# 
  4437   000043                     NVMADRL         equ	67	;# 
  4438   000044                     NVMADRH         equ	68	;# 
  4439   000045                     NVMADRU         equ	69	;# 
  4440   000046                     NVMDAT          equ	70	;# 
  4441   000046                     NVMDATL         equ	70	;# 
  4442   000047                     NVMDATH         equ	71	;# 
  4443   000048                     VREGCON         equ	72	;# 
  4444   000049                     BORCON          equ	73	;# 
  4445   00004A                     HLVDCON0        equ	74	;# 
  4446   00004B                     HLVDCON1        equ	75	;# 
  4447   00004C                     ZCDCON          equ	76	;# 
  4448   000060                     PMD0            equ	96	;# 
  4449   000061                     PMD1            equ	97	;# 
  4450   000063                     PMD3            equ	99	;# 
  4451   000064                     PMD4            equ	100	;# 
  4452   000065                     PMD5            equ	101	;# 
  4453   000066                     PMD6            equ	102	;# 
  4454   000067                     PMD7            equ	103	;# 
  4455   000068                     PMD8            equ	104	;# 
  4456   00006A                     MD1CON0         equ	106	;# 
  4457   00006B                     MD1CON1         equ	107	;# 
  4458   00006C                     MD1SRC          equ	108	;# 
  4459   00006D                     MD1CARL         equ	109	;# 
  4460   00006E                     MD1CARH         equ	110	;# 
  4461   00006F                     CMOUT           equ	111	;# 
  4462   000070                     CM1CON0         equ	112	;# 
  4463   000071                     CM1CON1         equ	113	;# 
  4464   000072                     CM1NCH          equ	114	;# 
  4465   000073                     CM1PCH          equ	115	;# 
  4466   000074                     CM2CON0         equ	116	;# 
  4467   000075                     CM2CON1         equ	117	;# 
  4468   000076                     CM2NCH          equ	118	;# 
  4469   000077                     CM2PCH          equ	119	;# 
  4470   000078                     WDTCON0         equ	120	;# 
  4471   000079                     WDTCON1         equ	121	;# 
  4472   00007A                     WDTPS           equ	122	;# 
  4473   00007A                     WDTPSL          equ	122	;# 
  4474   00007B                     WDTPSH          equ	123	;# 
  4475   00007C                     WDTTMR          equ	124	;# 
  4476   00007D                     DAC1DAT         equ	125	;# 
  4477   00007D                     DAC1DATL        equ	125	;# 
  4478   00007F                     DAC1CON         equ	127	;# 
  4479   000080                     SPI1RXB         equ	128	;# 
  4480   000081                     SPI1TXB         equ	129	;# 
  4481   000082                     SPI1TCNT        equ	130	;# 
  4482   000082                     SPI1TCNTL       equ	130	;# 
  4483   000083                     SPI1TCNTH       equ	131	;# 
  4484   000084                     SPI1CON0        equ	132	;# 
  4485   000085                     SPI1CON1        equ	133	;# 
  4486   000086                     SPI1CON2        equ	134	;# 
  4487   000087                     SPI1STATUS      equ	135	;# 
  4488   000088                     SPI1TWIDTH      equ	136	;# 
  4489   000089                     SPI1BAUD        equ	137	;# 
  4490   00008A                     SPI1INTF        equ	138	;# 
  4491   00008B                     SPI1INTE        equ	139	;# 
  4492   00008C                     SPI1CLK         equ	140	;# 
  4493   00008D                     SPI2RXB         equ	141	;# 
  4494   00008E                     SPI2TXB         equ	142	;# 
  4495   00008F                     SPI2TCNT        equ	143	;# 
  4496   00008F                     SPI2TCNTL       equ	143	;# 
  4497   000090                     SPI2TCNTH       equ	144	;# 
  4498   000091                     SPI2CON0        equ	145	;# 
  4499   000092                     SPI2CON1        equ	146	;# 
  4500   000093                     SPI2CON2        equ	147	;# 
  4501   000094                     SPI2STATUS      equ	148	;# 
  4502   000095                     SPI2TWIDTH      equ	149	;# 
  4503   000096                     SPI2BAUD        equ	150	;# 
  4504   000097                     SPI2INTF        equ	151	;# 
  4505   000098                     SPI2INTE        equ	152	;# 
  4506   000099                     SPI2CLK         equ	153	;# 
  4507   0000AC                     ACTCON          equ	172	;# 
  4508   0000AD                     OSCCON1         equ	173	;# 
  4509   0000AE                     OSCCON2         equ	174	;# 
  4510   0000AF                     OSCCON3         equ	175	;# 
  4511   0000B0                     OSCTUNE         equ	176	;# 
  4512   0000B1                     OSCFRQ          equ	177	;# 
  4513   0000B1                     OSCFREQ         equ	177	;# 
  4514   0000B2                     OSCSTAT         equ	178	;# 
  4515   0000B2                     OSCSTAT1        equ	178	;# 
  4516   0000B3                     OSCEN           equ	179	;# 
  4517   0000B4                     PRLOCK          equ	180	;# 
  4518   0000B5                     SCANPR          equ	181	;# 
  4519   0000B6                     DMA1PR          equ	182	;# 
  4520   0000B7                     DMA2PR          equ	183	;# 
  4521   0000B8                     DMA3PR          equ	184	;# 
  4522   0000B9                     DMA4PR          equ	185	;# 
  4523   0000BA                     DMA5PR          equ	186	;# 
  4524   0000BB                     DMA6PR          equ	187	;# 
  4525   0000BE                     MAINPR          equ	190	;# 
  4526   0000BF                     ISRPR           equ	191	;# 
  4527   0000D4                     CLCDATA         equ	212	;# 
  4528   0000D5                     CLCSELECT       equ	213	;# 
  4529   0000D6                     CLCnCON         equ	214	;# 
  4530   0000D7                     CLCnPOL         equ	215	;# 
  4531   0000D8                     CLCnSEL0        equ	216	;# 
  4532   0000D9                     CLCnSEL1        equ	217	;# 
  4533   0000DA                     CLCnSEL2        equ	218	;# 
  4534   0000DB                     CLCnSEL3        equ	219	;# 
  4535   0000DC                     CLCnGLS0        equ	220	;# 
  4536   0000DD                     CLCnGLS1        equ	221	;# 
  4537   0000DE                     CLCnGLS2        equ	222	;# 
  4538   0000DF                     CLCnGLS3        equ	223	;# 
  4539   0000E8                     DMASELECT       equ	232	;# 
  4540   0000E9                     DMAnBUF         equ	233	;# 
  4541   0000EA                     DMAnDCNT        equ	234	;# 
  4542   0000EA                     DMAnDCNTL       equ	234	;# 
  4543   0000EB                     DMAnDCNTH       equ	235	;# 
  4544   0000EC                     DMAnDPTR        equ	236	;# 
  4545   0000EC                     DMAnDPTRL       equ	236	;# 
  4546   0000ED                     DMAnDPTRH       equ	237	;# 
  4547   0000EE                     DMAnDSZ         equ	238	;# 
  4548   0000EE                     DMAnDSZL        equ	238	;# 
  4549   0000EF                     DMAnDSZH        equ	239	;# 
  4550   0000F0                     DMAnDSA         equ	240	;# 
  4551   0000F0                     DMAnDSAL        equ	240	;# 
  4552   0000F1                     DMAnDSAH        equ	241	;# 
  4553   0000F2                     DMAnSCNT        equ	242	;# 
  4554   0000F2                     DMAnSCNTL       equ	242	;# 
  4555   0000F3                     DMAnSCNTH       equ	243	;# 
  4556   0000F4                     DMAnSPTR        equ	244	;# 
  4557   0000F4                     DMAnSPTRL       equ	244	;# 
  4558   0000F5                     DMAnSPTRH       equ	245	;# 
  4559   0000F6                     DMAnSPTRU       equ	246	;# 
  4560   0000F7                     DMAnSSZ         equ	247	;# 
  4561   0000F7                     DMAnSSZL        equ	247	;# 
  4562   0000F8                     DMAnSSZH        equ	248	;# 
  4563   0000F9                     DMAnSSA         equ	249	;# 
  4564   0000F9                     DMAnSSAL        equ	249	;# 
  4565   0000FA                     DMAnSSAH        equ	250	;# 
  4566   0000FB                     DMAnSSAU        equ	251	;# 
  4567   0000FC                     DMAnCON0        equ	252	;# 
  4568   0000FD                     DMAnCON1        equ	253	;# 
  4569   0000FE                     DMAnAIRQ        equ	254	;# 
  4570   0000FF                     DMAnSIRQ        equ	255	;# 
  4571   000200                     PPSLOCK         equ	512	;# 
  4572   000201                     RA0PPS          equ	513	;# 
  4573   000202                     RA1PPS          equ	514	;# 
  4574   000203                     RA2PPS          equ	515	;# 
  4575   000204                     RA3PPS          equ	516	;# 
  4576   000205                     RA4PPS          equ	517	;# 
  4577   000206                     RA5PPS          equ	518	;# 
  4578   000207                     RA6PPS          equ	519	;# 
  4579   000208                     RA7PPS          equ	520	;# 
  4580   000209                     RB0PPS          equ	521	;# 
  4581   00020A                     RB1PPS          equ	522	;# 
  4582   00020B                     RB2PPS          equ	523	;# 
  4583   00020C                     RB3PPS          equ	524	;# 
  4584   00020D                     RB4PPS          equ	525	;# 
  4585   00020E                     RB5PPS          equ	526	;# 
  4586   00020F                     RB6PPS          equ	527	;# 
  4587   000210                     RB7PPS          equ	528	;# 
  4588   000211                     RC0PPS          equ	529	;# 
  4589   000212                     RC1PPS          equ	530	;# 
  4590   000213                     RC2PPS          equ	531	;# 
  4591   000214                     RC3PPS          equ	532	;# 
  4592   000215                     RC4PPS          equ	533	;# 
  4593   000216                     RC5PPS          equ	534	;# 
  4594   000217                     RC6PPS          equ	535	;# 
  4595   000218                     RC7PPS          equ	536	;# 
  4596   000219                     RD0PPS          equ	537	;# 
  4597   00021A                     RD1PPS          equ	538	;# 
  4598   00021B                     RD2PPS          equ	539	;# 
  4599   00021C                     RD3PPS          equ	540	;# 
  4600   00021D                     RD4PPS          equ	541	;# 
  4601   00021E                     RD5PPS          equ	542	;# 
  4602   00021F                     RD6PPS          equ	543	;# 
  4603   000220                     RD7PPS          equ	544	;# 
  4604   000221                     RE0PPS          equ	545	;# 
  4605   000222                     RE1PPS          equ	546	;# 
  4606   000223                     RE2PPS          equ	547	;# 
  4607   000229                     RF0PPS          equ	553	;# 
  4608   00022A                     RF1PPS          equ	554	;# 
  4609   00022B                     RF2PPS          equ	555	;# 
  4610   00022C                     RF3PPS          equ	556	;# 
  4611   00022D                     RF4PPS          equ	557	;# 
  4612   00022E                     RF5PPS          equ	558	;# 
  4613   00022F                     RF6PPS          equ	559	;# 
  4614   000230                     RF7PPS          equ	560	;# 
  4615   00023E                     INT0PPS         equ	574	;# 
  4616   00023F                     INT1PPS         equ	575	;# 
  4617   000240                     INT2PPS         equ	576	;# 
  4618   000241                     T0CKIPPS        equ	577	;# 
  4619   000242                     T1CKIPPS        equ	578	;# 
  4620   000243                     T1GPPS          equ	579	;# 
  4621   000244                     T3CKIPPS        equ	580	;# 
  4622   000245                     T3GPPS          equ	581	;# 
  4623   000246                     T5CKIPPS        equ	582	;# 
  4624   000247                     T5GPPS          equ	583	;# 
  4625   000248                     T2INPPS         equ	584	;# 
  4626   000249                     T4INPPS         equ	585	;# 
  4627   00024A                     T6INPPS         equ	586	;# 
  4628   00024F                     CCP1PPS         equ	591	;# 
  4629   000250                     CCP2PPS         equ	592	;# 
  4630   000251                     CCP3PPS         equ	593	;# 
  4631   000253                     PWM1ERSPPS      equ	595	;# 
  4632   000254                     PWM2ERSPPS      equ	596	;# 
  4633   000255                     PWM3ERSPPS      equ	597	;# 
  4634   000257                     PWMIN0PPS       equ	599	;# 
  4635   000258                     PWMIN1PPS       equ	600	;# 
  4636   000259                     SMT1WINPPS      equ	601	;# 
  4637   00025A                     SMT1SIGPPS      equ	602	;# 
  4638   00025B                     CWG1PPS         equ	603	;# 
  4639   00025B                     CWG1INPPS       equ	603	;# 
  4640   00025C                     CWG2PPS         equ	604	;# 
  4641   00025C                     CWG2INPPS       equ	604	;# 
  4642   00025D                     CWG3PPS         equ	605	;# 
  4643   00025D                     CWG3INPPS       equ	605	;# 
  4644   00025E                     MD1CARLPPS      equ	606	;# 
  4645   00025E                     MDCARLPPS       equ	606	;# 
  4646   00025F                     MD1CARHPPS      equ	607	;# 
  4647   00025F                     MDCARHPPS       equ	607	;# 
  4648   000260                     MD1SRCPPS       equ	608	;# 
  4649   000260                     MDSRCPPS        equ	608	;# 
  4650   000261                     CLCIN0PPS       equ	609	;# 
  4651   000262                     CLCIN1PPS       equ	610	;# 
  4652   000263                     CLCIN2PPS       equ	611	;# 
  4653   000264                     CLCIN3PPS       equ	612	;# 
  4654   000265                     CLCIN4PPS       equ	613	;# 
  4655   000266                     CLCIN5PPS       equ	614	;# 
  4656   000267                     CLCIN6PPS       equ	615	;# 
  4657   000268                     CLCIN7PPS       equ	616	;# 
  4658   000269                     ADACTPPS        equ	617	;# 
  4659   00026A                     SPI1SCKPPS      equ	618	;# 
  4660   00026B                     SPI1SDIPPS      equ	619	;# 
  4661   00026C                     SPI1SSPPS       equ	620	;# 
  4662   00026D                     SPI2SCKPPS      equ	621	;# 
  4663   00026E                     SPI2SDIPPS      equ	622	;# 
  4664   00026F                     SPI2SSPPS       equ	623	;# 
  4665   000270                     I2C1SDAPPS      equ	624	;# 
  4666   000271                     I2C1SCLPPS      equ	625	;# 
  4667   000272                     U1RXPPS         equ	626	;# 
  4668   000273                     U1CTSPPS        equ	627	;# 
  4669   000274                     U2RXPPS         equ	628	;# 
  4670   000275                     U2CTSPPS        equ	629	;# 
  4671   000276                     U3RXPPS         equ	630	;# 
  4672   000277                     U3CTSPPS        equ	631	;# 
  4673   000278                     U4RXPPS         equ	632	;# 
  4674   000279                     U4CTSPPS        equ	633	;# 
  4675   00027A                     U5RXPPS         equ	634	;# 
  4676   00027B                     U5CTSPPS        equ	635	;# 
  4677   000286                     RC4I2C          equ	646	;# 
  4678   000287                     RC3I2C          equ	647	;# 
  4679   000288                     RB2I2C          equ	648	;# 
  4680   000289                     RB1I2C          equ	649	;# 
  4681   00028B                     I2C1RXB         equ	651	;# 
  4682   00028C                     I2C1TXB         equ	652	;# 
  4683   00028D                     I2C1CNT         equ	653	;# 
  4684   00028E                     I2C1ADB0        equ	654	;# 
  4685   00028F                     I2C1ADB1        equ	655	;# 
  4686   000290                     I2C1ADR0        equ	656	;# 
  4687   000291                     I2C1ADR1        equ	657	;# 
  4688   000292                     I2C1ADR2        equ	658	;# 
  4689   000293                     I2C1ADR3        equ	659	;# 
  4690   000294                     I2C1CON0        equ	660	;# 
  4691   000295                     I2C1CON1        equ	661	;# 
  4692   000296                     I2C1CON2        equ	662	;# 
  4693   000297                     I2C1ERR         equ	663	;# 
  4694   000298                     I2C1STAT0       equ	664	;# 
  4695   000299                     I2C1STAT1       equ	665	;# 
  4696   00029A                     I2C1PIR         equ	666	;# 
  4697   00029B                     I2C1PIE         equ	667	;# 
  4698   00029C                     I2C1CLK         equ	668	;# 
  4699   00029D                     I2C1BTO         equ	669	;# 
  4700   0002A1                     U1RXB           equ	673	;# 
  4701   0002A1                     U1RXBL          equ	673	;# 
  4702   0002A2                     U1RXCHK         equ	674	;# 
  4703   0002A3                     U1TXB           equ	675	;# 
  4704   0002A3                     U1TXBL          equ	675	;# 
  4705   0002A4                     U1TXCHK         equ	676	;# 
  4706   0002A5                     U1P1            equ	677	;# 
  4707   0002A5                     U1P1L           equ	677	;# 
  4708   0002A6                     U1P1H           equ	678	;# 
  4709   0002A7                     U1P2            equ	679	;# 
  4710   0002A7                     U1P2L           equ	679	;# 
  4711   0002A8                     U1P2H           equ	680	;# 
  4712   0002A9                     U1P3            equ	681	;# 
  4713   0002A9                     U1P3L           equ	681	;# 
  4714   0002AA                     U1P3H           equ	682	;# 
  4715   0002AB                     U1CON0          equ	683	;# 
  4716   0002AC                     U1CON1          equ	684	;# 
  4717   0002AD                     U1CON2          equ	685	;# 
  4718   0002AE                     U1BRG           equ	686	;# 
  4719   0002AE                     U1BRGL          equ	686	;# 
  4720   0002AF                     U1BRGH          equ	687	;# 
  4721   0002B0                     U1FIFO          equ	688	;# 
  4722   0002B1                     U1UIR           equ	689	;# 
  4723   0002B2                     U1ERRIR         equ	690	;# 
  4724   0002B3                     U1ERRIE         equ	691	;# 
  4725   0002B4                     U2RXB           equ	692	;# 
  4726   0002B4                     U2RXBL          equ	692	;# 
  4727   0002B6                     U2TXB           equ	694	;# 
  4728   0002B6                     U2TXBL          equ	694	;# 
  4729   0002B8                     U2P1            equ	696	;# 
  4730   0002B8                     U2P1L           equ	696	;# 
  4731   0002BA                     U2P2            equ	698	;# 
  4732   0002BA                     U2P2L           equ	698	;# 
  4733   0002BC                     U2P3            equ	700	;# 
  4734   0002BC                     U2P3L           equ	700	;# 
  4735   0002BE                     U2CON0          equ	702	;# 
  4736   0002BF                     U2CON1          equ	703	;# 
  4737   0002C0                     U2CON2          equ	704	;# 
  4738   0002C1                     U2BRG           equ	705	;# 
  4739   0002C1                     U2BRGL          equ	705	;# 
  4740   0002C2                     U2BRGH          equ	706	;# 
  4741   0002C3                     U2FIFO          equ	707	;# 
  4742   0002C4                     U2UIR           equ	708	;# 
  4743   0002C5                     U2ERRIR         equ	709	;# 
  4744   0002C6                     U2ERRIE         equ	710	;# 
  4745   0002C7                     U3RXB           equ	711	;# 
  4746   0002C7                     U3RXBL          equ	711	;# 
  4747   0002C9                     U3TXB           equ	713	;# 
  4748   0002C9                     U3TXBL          equ	713	;# 
  4749   0002CB                     U3P1            equ	715	;# 
  4750   0002CB                     U3P1L           equ	715	;# 
  4751   0002CD                     U3P2            equ	717	;# 
  4752   0002CD                     U3P2L           equ	717	;# 
  4753   0002CF                     U3P3            equ	719	;# 
  4754   0002CF                     U3P3L           equ	719	;# 
  4755   0002D1                     U3CON0          equ	721	;# 
  4756   0002D2                     U3CON1          equ	722	;# 
  4757   0002D3                     U3CON2          equ	723	;# 
  4758   0002D4                     U3BRG           equ	724	;# 
  4759   0002D4                     U3BRGL          equ	724	;# 
  4760   0002D5                     U3BRGH          equ	725	;# 
  4761   0002D6                     U3FIFO          equ	726	;# 
  4762   0002D7                     U3UIR           equ	727	;# 
  4763   0002D8                     U3ERRIR         equ	728	;# 
  4764   0002D9                     U3ERRIE         equ	729	;# 
  4765   0002DA                     U4RXB           equ	730	;# 
  4766   0002DA                     U4RXBL          equ	730	;# 
  4767   0002DC                     U4TXB           equ	732	;# 
  4768   0002DC                     U4TXBL          equ	732	;# 
  4769   0002DE                     U4P1            equ	734	;# 
  4770   0002DE                     U4P1L           equ	734	;# 
  4771   0002E0                     U4P2            equ	736	;# 
  4772   0002E0                     U4P2L           equ	736	;# 
  4773   0002E2                     U4P3            equ	738	;# 
  4774   0002E2                     U4P3L           equ	738	;# 
  4775   0002E4                     U4CON0          equ	740	;# 
  4776   0002E5                     U4CON1          equ	741	;# 
  4777   0002E6                     U4CON2          equ	742	;# 
  4778   0002E7                     U4BRG           equ	743	;# 
  4779   0002E7                     U4BRGL          equ	743	;# 
  4780   0002E8                     U4BRGH          equ	744	;# 
  4781   0002E9                     U4FIFO          equ	745	;# 
  4782   0002EA                     U4UIR           equ	746	;# 
  4783   0002EB                     U4ERRIR         equ	747	;# 
  4784   0002EC                     U4ERRIE         equ	748	;# 
  4785   0002ED                     U5RXB           equ	749	;# 
  4786   0002ED                     U5RXBL          equ	749	;# 
  4787   0002EF                     U5TXB           equ	751	;# 
  4788   0002EF                     U5TXBL          equ	751	;# 
  4789   0002F1                     U5P1            equ	753	;# 
  4790   0002F1                     U5P1L           equ	753	;# 
  4791   0002F3                     U5P2            equ	755	;# 
  4792   0002F3                     U5P2L           equ	755	;# 
  4793   0002F5                     U5P3            equ	757	;# 
  4794   0002F5                     U5P3L           equ	757	;# 
  4795   0002F7                     U5CON0          equ	759	;# 
  4796   0002F8                     U5CON1          equ	760	;# 
  4797   0002F9                     U5CON2          equ	761	;# 
  4798   0002FA                     U5BRG           equ	762	;# 
  4799   0002FA                     U5BRGL          equ	762	;# 
  4800   0002FB                     U5BRGH          equ	763	;# 
  4801   0002FC                     U5FIFO          equ	764	;# 
  4802   0002FD                     U5UIR           equ	765	;# 
  4803   0002FE                     U5ERRIR         equ	766	;# 
  4804   0002FF                     U5ERRIE         equ	767	;# 
  4805   000300                     SMT1TMR         equ	768	;# 
  4806   000300                     SMT1TMRL        equ	768	;# 
  4807   000301                     SMT1TMRH        equ	769	;# 
  4808   000302                     SMT1TMRU        equ	770	;# 
  4809   000303                     SMT1CPR         equ	771	;# 
  4810   000303                     SMT1CPRL        equ	771	;# 
  4811   000304                     SMT1CPRH        equ	772	;# 
  4812   000305                     SMT1CPRU        equ	773	;# 
  4813   000306                     SMT1CPW         equ	774	;# 
  4814   000306                     SMT1CPWL        equ	774	;# 
  4815   000307                     SMT1CPWH        equ	775	;# 
  4816   000308                     SMT1CPWU        equ	776	;# 
  4817   000309                     SMT1PR          equ	777	;# 
  4818   000309                     SMT1PRL         equ	777	;# 
  4819   00030A                     SMT1PRH         equ	778	;# 
  4820   00030B                     SMT1PRU         equ	779	;# 
  4821   00030C                     SMT1CON0        equ	780	;# 
  4822   00030D                     SMT1CON1        equ	781	;# 
  4823   00030E                     SMT1STAT        equ	782	;# 
  4824   00030F                     SMT1CLK         equ	783	;# 
  4825   000310                     SMT1SIG         equ	784	;# 
  4826   000311                     SMT1WIN         equ	785	;# 
  4827   000318                     TMR0L           equ	792	;# 
  4828   000318                     TMR0            equ	792	;# 
  4829   000319                     TMR0H           equ	793	;# 
  4830   000319                     PR0             equ	793	;# 
  4831   00031A                     T0CON0          equ	794	;# 
  4832   00031B                     T0CON1          equ	795	;# 
  4833   00031C                     TMR1            equ	796	;# 
  4834   00031C                     TMR1L           equ	796	;# 
  4835   00031D                     TMR1H           equ	797	;# 
  4836   00031E                     T1CON           equ	798	;# 
  4837   00031E                     TMR1CON         equ	798	;# 
  4838   00031F                     T1GCON          equ	799	;# 
  4839   00031F                     TMR1GCON        equ	799	;# 
  4840   000320                     T1GATE          equ	800	;# 
  4841   000320                     TMR1GATE        equ	800	;# 
  4842   000321                     T1CLK           equ	801	;# 
  4843   000321                     TMR1CLK         equ	801	;# 
  4844   000321                     PR1             equ	801	;# 
  4845   000322                     T2TMR           equ	802	;# 
  4846   000322                     TMR2            equ	802	;# 
  4847   000323                     T2PR            equ	803	;# 
  4848   000323                     PR2             equ	803	;# 
  4849   000324                     T2CON           equ	804	;# 
  4850   000325                     T2HLT           equ	805	;# 
  4851   000326                     T2CLKCON        equ	806	;# 
  4852   000326                     T2CLK           equ	806	;# 
  4853   000327                     T2RST           equ	807	;# 
  4854   000328                     TMR3            equ	808	;# 
  4855   000328                     TMR3L           equ	808	;# 
  4856   000329                     TMR3H           equ	809	;# 
  4857   00032A                     T3CON           equ	810	;# 
  4858   00032A                     TMR3CON         equ	810	;# 
  4859   00032B                     T3GCON          equ	811	;# 
  4860   00032B                     TMR3GCON        equ	811	;# 
  4861   00032C                     T3GATE          equ	812	;# 
  4862   00032C                     TMR3GATE        equ	812	;# 
  4863   00032D                     T3CLK           equ	813	;# 
  4864   00032D                     TMR3CLK         equ	813	;# 
  4865   00032D                     PR3             equ	813	;# 
  4866   00032E                     T4TMR           equ	814	;# 
  4867   00032E                     TMR4            equ	814	;# 
  4868   00032F                     T4PR            equ	815	;# 
  4869   00032F                     PR4             equ	815	;# 
  4870   000330                     T4CON           equ	816	;# 
  4871   000331                     T4HLT           equ	817	;# 
  4872   000332                     T4CLKCON        equ	818	;# 
  4873   000332                     T4CLK           equ	818	;# 
  4874   000333                     T4RST           equ	819	;# 
  4875   000334                     TMR5            equ	820	;# 
  4876   000334                     TMR5L           equ	820	;# 
  4877   000335                     TMR5H           equ	821	;# 
  4878   000336                     T5CON           equ	822	;# 
  4879   000336                     TMR5CON         equ	822	;# 
  4880   000337                     T5GCON          equ	823	;# 
  4881   000337                     TMR5GCON        equ	823	;# 
  4882   000338                     T5GATE          equ	824	;# 
  4883   000338                     TMR5GATE        equ	824	;# 
  4884   000339                     T5CLK           equ	825	;# 
  4885   000339                     TMR5CLK         equ	825	;# 
  4886   000339                     PR5             equ	825	;# 
  4887   00033A                     T6TMR           equ	826	;# 
  4888   00033A                     TMR6            equ	826	;# 
  4889   00033B                     T6PR            equ	827	;# 
  4890   00033B                     PR6             equ	827	;# 
  4891   00033C                     T6CON           equ	828	;# 
  4892   00033D                     T6HLT           equ	829	;# 
  4893   00033E                     T6CLKCON        equ	830	;# 
  4894   00033E                     T6CLK           equ	830	;# 
  4895   00033F                     T6RST           equ	831	;# 
  4896   000340                     CCPR1           equ	832	;# 
  4897   000340                     CCPR1L          equ	832	;# 
  4898   000341                     CCPR1H          equ	833	;# 
  4899   000342                     CCP1CON         equ	834	;# 
  4900   000343                     CCP1CAP         equ	835	;# 
  4901   000344                     CCPR2           equ	836	;# 
  4902   000344                     CCPR2L          equ	836	;# 
  4903   000345                     CCPR2H          equ	837	;# 
  4904   000346                     CCP2CON         equ	838	;# 
  4905   000347                     CCP2CAP         equ	839	;# 
  4906   000348                     CCPR3           equ	840	;# 
  4907   000348                     CCPR3L          equ	840	;# 
  4908   000349                     CCPR3H          equ	841	;# 
  4909   00034A                     CCP3CON         equ	842	;# 
  4910   00034B                     CCP3CAP         equ	843	;# 
  4911   00034C                     CCPTMRS0        equ	844	;# 
  4912   00034F                     CRCDATA         equ	847	;# 
  4913   00034F                     CRCDATL         equ	847	;# 
  4914   000350                     CRCDATH         equ	848	;# 
  4915   000351                     CRCACC          equ	849	;# 
  4916   000351                     CRCACCL         equ	849	;# 
  4917   000352                     CRCACCH         equ	850	;# 
  4918   000353                     CRCSHFT         equ	851	;# 
  4919   000353                     CRCSHIFTL       equ	851	;# 
  4920   000354                     CRCSHIFTH       equ	852	;# 
  4921   000355                     CRCXOR          equ	853	;# 
  4922   000355                     CRCXORL         equ	853	;# 
  4923   000356                     CRCXORH         equ	854	;# 
  4924   000357                     CRCCON0         equ	855	;# 
  4925   000358                     CRCCON1         equ	856	;# 
  4926   00035A                     SCANLADR        equ	858	;# 
  4927   00035A                     SCANLADRL       equ	858	;# 
  4928   00035B                     SCANLADRH       equ	859	;# 
  4929   00035C                     SCANLADRU       equ	860	;# 
  4930   00035D                     SCANHADR        equ	861	;# 
  4931   00035D                     SCANHADRL       equ	861	;# 
  4932   00035E                     SCANHADRH       equ	862	;# 
  4933   00035F                     SCANHADRU       equ	863	;# 
  4934   000360                     SCANCON0        equ	864	;# 
  4935   000361                     SCANTRIG        equ	865	;# 
  4936   000362                     IPR0            equ	866	;# 
  4937   000363                     IPR1            equ	867	;# 
  4938   000364                     IPR2            equ	868	;# 
  4939   000365                     IPR3            equ	869	;# 
  4940   000366                     IPR4            equ	870	;# 
  4941   000367                     IPR5            equ	871	;# 
  4942   000368                     IPR6            equ	872	;# 
  4943   000369                     IPR7            equ	873	;# 
  4944   00036A                     IPR8            equ	874	;# 
  4945   00036B                     IPR9            equ	875	;# 
  4946   00036C                     IPR10           equ	876	;# 
  4947   00036D                     IPR11           equ	877	;# 
  4948   00036E                     IPR12           equ	878	;# 
  4949   00036F                     IPR13           equ	879	;# 
  4950   000370                     IPR14           equ	880	;# 
  4951   000371                     IPR15           equ	881	;# 
  4952   000373                     STATUS_CSHAD    equ	883	;# 
  4953   000374                     WREG_CSHAD      equ	884	;# 
  4954   000375                     BSR_CSHAD       equ	885	;# 
  4955   000376                     SHADCON         equ	886	;# 
  4956   000377                     STATUS_SHAD     equ	887	;# 
  4957   000378                     WREG_SHAD       equ	888	;# 
  4958   000379                     BSR_SHAD        equ	889	;# 
  4959   00037A                     PCLATH_SHAD     equ	890	;# 
  4960   00037B                     PCLATU_SHAD     equ	891	;# 
  4961   00037C                     FSR0SH          equ	892	;# 
  4962   00037C                     FSR0L_SHAD      equ	892	;# 
  4963   00037D                     FSR0H_SHAD      equ	893	;# 
  4964   00037E                     FSR1SH          equ	894	;# 
  4965   00037E                     FSR1L_SHAD      equ	894	;# 
  4966   00037F                     FSR1H_SHAD      equ	895	;# 
  4967   000380                     FSR2SH          equ	896	;# 
  4968   000380                     FSR2L_SHAD      equ	896	;# 
  4969   000381                     FSR2H_SHAD      equ	897	;# 
  4970   000382                     PRODSH          equ	898	;# 
  4971   000382                     PRODL_SHAD      equ	898	;# 
  4972   000383                     PRODH_SHAD      equ	899	;# 
  4973   0003BC                     CWG1CLK         equ	956	;# 
  4974   0003BC                     CWG1CLKCON      equ	956	;# 
  4975   0003BD                     CWG1ISM         equ	957	;# 
  4976   0003BD                     CWG1DAT         equ	957	;# 
  4977   0003BE                     CWG1DBR         equ	958	;# 
  4978   0003BF                     CWG1DBF         equ	959	;# 
  4979   0003C0                     CWG1CON0        equ	960	;# 
  4980   0003C1                     CWG1CON1        equ	961	;# 
  4981   0003C2                     CWG1AS0         equ	962	;# 
  4982   0003C3                     CWG1AS1         equ	963	;# 
  4983   0003C4                     CWG1STR         equ	964	;# 
  4984   0003C5                     CWG2CLK         equ	965	;# 
  4985   0003C5                     CWG2CLKCON      equ	965	;# 
  4986   0003C6                     CWG2ISM         equ	966	;# 
  4987   0003C6                     CWG2DAT         equ	966	;# 
  4988   0003C7                     CWG2DBR         equ	967	;# 
  4989   0003C8                     CWG2DBF         equ	968	;# 
  4990   0003C9                     CWG2CON0        equ	969	;# 
  4991   0003CA                     CWG2CON1        equ	970	;# 
  4992   0003CB                     CWG2AS0         equ	971	;# 
  4993   0003CC                     CWG2AS1         equ	972	;# 
  4994   0003CD                     CWG2STR         equ	973	;# 
  4995   0003CE                     CWG3CLK         equ	974	;# 
  4996   0003CE                     CWG3CLKCON      equ	974	;# 
  4997   0003CF                     CWG3ISM         equ	975	;# 
  4998   0003CF                     CWG3DAT         equ	975	;# 
  4999   0003D0                     CWG3DBR         equ	976	;# 
  5000   0003D1                     CWG3DBF         equ	977	;# 
  5001   0003D2                     CWG3CON0        equ	978	;# 
  5002   0003D3                     CWG3CON1        equ	979	;# 
  5003   0003D4                     CWG3AS0         equ	980	;# 
  5004   0003D5                     CWG3AS1         equ	981	;# 
  5005   0003D6                     CWG3STR         equ	982	;# 
  5006   0003D7                     FVRCON          equ	983	;# 
  5007   0003D8                     ADCPCON         equ	984	;# 
  5008   0003D8                     ADCP            equ	984	;# 
  5009   0003D9                     ADLTH           equ	985	;# 
  5010   0003D9                     ADLTHL          equ	985	;# 
  5011   0003DA                     ADLTHH          equ	986	;# 
  5012   0003DB                     ADUTH           equ	987	;# 
  5013   0003DB                     ADUTHL          equ	987	;# 
  5014   0003DC                     ADUTHH          equ	988	;# 
  5015   0003DD                     ADERR           equ	989	;# 
  5016   0003DD                     ADERRL          equ	989	;# 
  5017   0003DE                     ADERRH          equ	990	;# 
  5018   0003DF                     ADSTPT          equ	991	;# 
  5019   0003DF                     ADSTPTL         equ	991	;# 
  5020   0003E0                     ADSTPTH         equ	992	;# 
  5021   0003E1                     ADFLTR          equ	993	;# 
  5022   0003E1                     ADFLTRL         equ	993	;# 
  5023   0003E2                     ADFLTRH         equ	994	;# 
  5024   0003E3                     ADACC           equ	995	;# 
  5025   0003E3                     ADACCL          equ	995	;# 
  5026   0003E4                     ADACCH          equ	996	;# 
  5027   0003E5                     ADACCU          equ	997	;# 
  5028   0003E6                     ADCNT           equ	998	;# 
  5029   0003E7                     ADRPT           equ	999	;# 
  5030   0003E8                     ADPREV          equ	1000	;# 
  5031   0003E8                     ADPREVL         equ	1000	;# 
  5032   0003E9                     ADPREVH         equ	1001	;# 
  5033   0003EA                     ADRES           equ	1002	;# 
  5034   0003EA                     ADRESL          equ	1002	;# 
  5035   0003EB                     ADRESH          equ	1003	;# 
  5036   0003EC                     ADPCH           equ	1004	;# 
  5037   0003EE                     ADACQ           equ	1006	;# 
  5038   0003EE                     ADACQL          equ	1006	;# 
  5039   0003EF                     ADACQH          equ	1007	;# 
  5040   0003F0                     ADCAP           equ	1008	;# 
  5041   0003F1                     ADPRE           equ	1009	;# 
  5042   0003F1                     ADPREL          equ	1009	;# 
  5043   0003F2                     ADPREH          equ	1010	;# 
  5044   0003F3                     ADCON0          equ	1011	;# 
  5045   0003F4                     ADCON1          equ	1012	;# 
  5046   0003F5                     ADCON2          equ	1013	;# 
  5047   0003F6                     ADCON3          equ	1014	;# 
  5048   0003F7                     ADSTAT          equ	1015	;# 
  5049   0003F8                     ADREF           equ	1016	;# 
  5050   0003F9                     ADACT           equ	1017	;# 
  5051   0003FA                     ADCLK           equ	1018	;# 
  5052   000400                     ANSELA          equ	1024	;# 
  5053   000401                     WPUA            equ	1025	;# 
  5054   000402                     ODCONA          equ	1026	;# 
  5055   000403                     SLRCONA         equ	1027	;# 
  5056   000404                     INLVLA          equ	1028	;# 
  5057   000405                     IOCAP           equ	1029	;# 
  5058   000406                     IOCAN           equ	1030	;# 
  5059   000407                     IOCAF           equ	1031	;# 
  5060   000408                     ANSELB          equ	1032	;# 
  5061   000409                     WPUB            equ	1033	;# 
  5062   00040A                     ODCONB          equ	1034	;# 
  5063   00040B                     SLRCONB         equ	1035	;# 
  5064   00040C                     INLVLB          equ	1036	;# 
  5065   00040D                     IOCBP           equ	1037	;# 
  5066   00040E                     IOCBN           equ	1038	;# 
  5067   00040F                     IOCBF           equ	1039	;# 
  5068   000410                     ANSELC          equ	1040	;# 
  5069   000411                     WPUC            equ	1041	;# 
  5070   000412                     ODCONC          equ	1042	;# 
  5071   000413                     SLRCONC         equ	1043	;# 
  5072   000414                     INLVLC          equ	1044	;# 
  5073   000415                     IOCCP           equ	1045	;# 
  5074   000416                     IOCCN           equ	1046	;# 
  5075   000417                     IOCCF           equ	1047	;# 
  5076   000418                     ANSELD          equ	1048	;# 
  5077   000419                     WPUD            equ	1049	;# 
  5078   00041A                     ODCOND          equ	1050	;# 
  5079   00041B                     SLRCOND         equ	1051	;# 
  5080   00041C                     INLVLD          equ	1052	;# 
  5081   000420                     ANSELE          equ	1056	;# 
  5082   000421                     WPUE            equ	1057	;# 
  5083   000422                     ODCONE          equ	1058	;# 
  5084   000423                     SLRCONE         equ	1059	;# 
  5085   000424                     INLVLE          equ	1060	;# 
  5086   000425                     IOCEP           equ	1061	;# 
  5087   000426                     IOCEN           equ	1062	;# 
  5088   000427                     IOCEF           equ	1063	;# 
  5089   000428                     ANSELF          equ	1064	;# 
  5090   000429                     WPUF            equ	1065	;# 
  5091   00042A                     ODCONF          equ	1066	;# 
  5092   00042B                     SLRCONF         equ	1067	;# 
  5093   00042C                     INLVLF          equ	1068	;# 
  5094   000440                     NCO1ACC         equ	1088	;# 
  5095   000440                     NCO1ACCL        equ	1088	;# 
  5096   000441                     NCO1ACCH        equ	1089	;# 
  5097   000442                     NCO1ACCU        equ	1090	;# 
  5098   000443                     NCO1INC         equ	1091	;# 
  5099   000443                     NCO1INCL        equ	1091	;# 
  5100   000444                     NCO1INCH        equ	1092	;# 
  5101   000445                     NCO1INCU        equ	1093	;# 
  5102   000446                     NCO1CON         equ	1094	;# 
  5103   000447                     NCO1CLK         equ	1095	;# 
  5104   000448                     NCO2ACC         equ	1096	;# 
  5105   000448                     NCO2ACCL        equ	1096	;# 
  5106   000449                     NCO2ACCH        equ	1097	;# 
  5107   00044A                     NCO2ACCU        equ	1098	;# 
  5108   00044B                     NCO2INC         equ	1099	;# 
  5109   00044B                     NCO2INCL        equ	1099	;# 
  5110   00044C                     NCO2INCH        equ	1100	;# 
  5111   00044D                     NCO2INCU        equ	1101	;# 
  5112   00044E                     NCO2CON         equ	1102	;# 
  5113   00044F                     NCO2CLK         equ	1103	;# 
  5114   000450                     NCO3ACC         equ	1104	;# 
  5115   000450                     NCO3ACCL        equ	1104	;# 
  5116   000451                     NCO3ACCH        equ	1105	;# 
  5117   000452                     NCO3ACCU        equ	1106	;# 
  5118   000453                     NCO3INC         equ	1107	;# 
  5119   000453                     NCO3INCL        equ	1107	;# 
  5120   000454                     NCO3INCH        equ	1108	;# 
  5121   000455                     NCO3INCU        equ	1109	;# 
  5122   000456                     NCO3CON         equ	1110	;# 
  5123   000457                     NCO3CLK         equ	1111	;# 
  5124   000459                     IVTLOCK         equ	1113	;# 
  5125   00045A                     IVTAD           equ	1114	;# 
  5126   00045A                     IVTADL          equ	1114	;# 
  5127   00045B                     IVTADH          equ	1115	;# 
  5128   00045C                     IVTADU          equ	1116	;# 
  5129   00045D                     IVTBASE         equ	1117	;# 
  5130   00045D                     IVTBASEL        equ	1117	;# 
  5131   00045E                     IVTBASEH        equ	1118	;# 
  5132   00045F                     IVTBASEU        equ	1119	;# 
  5133   000460                     PWM1ERS         equ	1120	;# 
  5134   000461                     PWM1CLK         equ	1121	;# 
  5135   000462                     PWM1LDS         equ	1122	;# 
  5136   000463                     PWM1PR          equ	1123	;# 
  5137   000463                     PWM1PRL         equ	1123	;# 
  5138   000464                     PWM1PRH         equ	1124	;# 
  5139   000465                     PWM1CPRE        equ	1125	;# 
  5140   000466                     PWM1PIPOS       equ	1126	;# 
  5141   000467                     PWM1GIR         equ	1127	;# 
  5142   000468                     PWM1GIE         equ	1128	;# 
  5143   000469                     PWM1CON         equ	1129	;# 
  5144   00046A                     PWM1S1CFG       equ	1130	;# 
  5145   00046B                     PWM1S1P1        equ	1131	;# 
  5146   00046B                     PWM1S1P1L       equ	1131	;# 
  5147   00046C                     PWM1S1P1H       equ	1132	;# 
  5148   00046D                     PWM1S1P2        equ	1133	;# 
  5149   00046D                     PWM1S1P2L       equ	1133	;# 
  5150   00046E                     PWM1S1P2H       equ	1134	;# 
  5151   00046F                     PWM2ERS         equ	1135	;# 
  5152   000470                     PWM2CLK         equ	1136	;# 
  5153   000471                     PWM2LDS         equ	1137	;# 
  5154   000472                     PWM2PR          equ	1138	;# 
  5155   000472                     PWM2PRL         equ	1138	;# 
  5156   000473                     PWM2PRH         equ	1139	;# 
  5157   000474                     PWM2CPRE        equ	1140	;# 
  5158   000475                     PWM2PIPOS       equ	1141	;# 
  5159   000476                     PWM2GIR         equ	1142	;# 
  5160   000477                     PWM2GIE         equ	1143	;# 
  5161   000478                     PWM2CON         equ	1144	;# 
  5162   000479                     PWM2S1CFG       equ	1145	;# 
  5163   00047A                     PWM2S1P1        equ	1146	;# 
  5164   00047A                     PWM2S1P1L       equ	1146	;# 
  5165   00047B                     PWM2S1P1H       equ	1147	;# 
  5166   00047C                     PWM2S1P2        equ	1148	;# 
  5167   00047C                     PWM2S1P2L       equ	1148	;# 
  5168   00047D                     PWM2S1P2H       equ	1149	;# 
  5169   00047E                     PWM3ERS         equ	1150	;# 
  5170   00047F                     PWM3CLK         equ	1151	;# 
  5171   000480                     PWM3LDS         equ	1152	;# 
  5172   000481                     PWM3PR          equ	1153	;# 
  5173   000481                     PWM3PRL         equ	1153	;# 
  5174   000482                     PWM3PRH         equ	1154	;# 
  5175   000483                     PWM3CPRE        equ	1155	;# 
  5176   000484                     PWM3PIPOS       equ	1156	;# 
  5177   000485                     PWM3GIR         equ	1157	;# 
  5178   000486                     PWM3GIE         equ	1158	;# 
  5179   000487                     PWM3CON         equ	1159	;# 
  5180   000488                     PWM3S1CFG       equ	1160	;# 
  5181   000489                     PWM3S1P1        equ	1161	;# 
  5182   000489                     PWM3S1P1L       equ	1161	;# 
  5183   00048A                     PWM3S1P1H       equ	1162	;# 
  5184   00048B                     PWM3S1P2        equ	1163	;# 
  5185   00048B                     PWM3S1P2L       equ	1163	;# 
  5186   00048C                     PWM3S1P2H       equ	1164	;# 
  5187   00049C                     PWMLOAD         equ	1180	;# 
  5188   00049D                     PWMEN           equ	1181	;# 
  5189   00049E                     PIE0            equ	1182	;# 
  5190   00049F                     PIE1            equ	1183	;# 
  5191   0004A0                     PIE2            equ	1184	;# 
  5192   0004A1                     PIE3            equ	1185	;# 
  5193   0004A2                     PIE4            equ	1186	;# 
  5194   0004A3                     PIE5            equ	1187	;# 
  5195   0004A4                     PIE6            equ	1188	;# 
  5196   0004A5                     PIE7            equ	1189	;# 
  5197   0004A6                     PIE8            equ	1190	;# 
  5198   0004A7                     PIE9            equ	1191	;# 
  5199   0004A8                     PIE10           equ	1192	;# 
  5200   0004A9                     PIE11           equ	1193	;# 
  5201   0004AA                     PIE12           equ	1194	;# 
  5202   0004AB                     PIE13           equ	1195	;# 
  5203   0004AC                     PIE14           equ	1196	;# 
  5204   0004AD                     PIE15           equ	1197	;# 
  5205   0004AE                     PIR0            equ	1198	;# 
  5206   0004AF                     PIR1            equ	1199	;# 
  5207   0004B0                     PIR2            equ	1200	;# 
  5208   0004B1                     PIR3            equ	1201	;# 
  5209   0004B2                     PIR4            equ	1202	;# 
  5210   0004B3                     PIR5            equ	1203	;# 
  5211   0004B4                     PIR6            equ	1204	;# 
  5212   0004B5                     PIR7            equ	1205	;# 
  5213   0004B6                     PIR8            equ	1206	;# 
  5214   0004B7                     PIR9            equ	1207	;# 
  5215   0004B8                     PIR10           equ	1208	;# 
  5216   0004B9                     PIR11           equ	1209	;# 
  5217   0004BA                     PIR12           equ	1210	;# 
  5218   0004BB                     PIR13           equ	1211	;# 
  5219   0004BC                     PIR14           equ	1212	;# 
  5220   0004BD                     PIR15           equ	1213	;# 
  5221   0004BE                     LATA            equ	1214	;# 
  5222   0004BF                     LATB            equ	1215	;# 
  5223   0004C0                     LATC            equ	1216	;# 
  5224   0004C1                     LATD            equ	1217	;# 
  5225   0004C2                     LATE            equ	1218	;# 
  5226   0004C3                     LATF            equ	1219	;# 
  5227   0004C6                     TRISA           equ	1222	;# 
  5228   0004C7                     TRISB           equ	1223	;# 
  5229   0004C8                     TRISC           equ	1224	;# 
  5230   0004C9                     TRISD           equ	1225	;# 
  5231   0004CA                     TRISE           equ	1226	;# 
  5232   0004CB                     TRISF           equ	1227	;# 
  5233   0004CE                     PORTA           equ	1230	;# 
  5234   0004CF                     PORTB           equ	1231	;# 
  5235   0004D0                     PORTC           equ	1232	;# 
  5236   0004D1                     PORTD           equ	1233	;# 
  5237   0004D2                     PORTE           equ	1234	;# 
  5238   0004D3                     PORTF           equ	1235	;# 
  5239   0004D6                     INTCON0         equ	1238	;# 
  5240   0004D7                     INTCON1         equ	1239	;# 
  5241   0004D8                     STATUS          equ	1240	;# 
  5242   0004D9                     FSR2            equ	1241	;# 
  5243   0004D9                     FSR2L           equ	1241	;# 
  5244   0004DA                     FSR2H           equ	1242	;# 
  5245   0004DB                     PLUSW2          equ	1243	;# 
  5246   0004DC                     PREINC2         equ	1244	;# 
  5247   0004DD                     POSTDEC2        equ	1245	;# 
  5248   0004DE                     POSTINC2        equ	1246	;# 
  5249   0004DF                     INDF2           equ	1247	;# 
  5250   0004E0                     BSR             equ	1248	;# 
  5251   0004E1                     FSR1            equ	1249	;# 
  5252   0004E1                     FSR1L           equ	1249	;# 
  5253   0004E2                     FSR1H           equ	1250	;# 
  5254   0004E3                     PLUSW1          equ	1251	;# 
  5255   0004E4                     PREINC1         equ	1252	;# 
  5256   0004E5                     POSTDEC1        equ	1253	;# 
  5257   0004E6                     POSTINC1        equ	1254	;# 
  5258   0004E7                     INDF1           equ	1255	;# 
  5259   0004E8                     WREG            equ	1256	;# 
  5260   0004E9                     FSR0            equ	1257	;# 
  5261   0004E9                     FSR0L           equ	1257	;# 
  5262   0004EA                     FSR0H           equ	1258	;# 
  5263   0004EB                     PLUSW0          equ	1259	;# 
  5264   0004EC                     PREINC0         equ	1260	;# 
  5265   0004ED                     POSTDEC0        equ	1261	;# 
  5266   0004EE                     POSTINC0        equ	1262	;# 
  5267   0004EF                     INDF0           equ	1263	;# 
  5268   0004F0                     PCON0           equ	1264	;# 
  5269   0004F1                     PCON1           equ	1265	;# 
  5270   0004F2                     CPUDOZE         equ	1266	;# 
  5271   0004F3                     PROD            equ	1267	;# 
  5272   0004F3                     PRODL           equ	1267	;# 
  5273   0004F4                     PRODH           equ	1268	;# 
  5274   0004F5                     TABLAT          equ	1269	;# 
  5275   0004F6                     TBLPTR          equ	1270	;# 
  5276   0004F6                     TBLPTRL         equ	1270	;# 
  5277   0004F7                     TBLPTRH         equ	1271	;# 
  5278   0004F8                     TBLPTRU         equ	1272	;# 
  5279   0004F9                     PCLAT           equ	1273	;# 
  5280   0004F9                     PCL             equ	1273	;# 
  5281   0004FA                     PCLATH          equ	1274	;# 
  5282   0004FB                     PCLATU          equ	1275	;# 
  5283   0004FC                     STKPTR          equ	1276	;# 
  5284   0004FD                     TOS             equ	1277	;# 
  5285   0004FD                     TOSL            equ	1277	;# 
  5286   0004FE                     TOSH            equ	1278	;# 
  5287   0004FF                     TOSU            equ	1279	;# 
  5288   000039                     CLKRCON         equ	57	;# 
  5289   00003A                     CLKRCLK         equ	58	;# 
  5290   000040                     NVMCON0         equ	64	;# 
  5291   000041                     NVMCON1         equ	65	;# 
  5292   000042                     NVMLOCK         equ	66	;# 
  5293   000043                     NVMADR          equ	67	;# 
  5294   000043                     NVMADRL         equ	67	;# 
  5295   000044                     NVMADRH         equ	68	;# 
  5296   000045                     NVMADRU         equ	69	;# 
  5297   000046                     NVMDAT          equ	70	;# 
  5298   000046                     NVMDATL         equ	70	;# 
  5299   000047                     NVMDATH         equ	71	;# 
  5300   000048                     VREGCON         equ	72	;# 
  5301   000049                     BORCON          equ	73	;# 
  5302   00004A                     HLVDCON0        equ	74	;# 
  5303   00004B                     HLVDCON1        equ	75	;# 
  5304   00004C                     ZCDCON          equ	76	;# 
  5305   000060                     PMD0            equ	96	;# 
  5306   000061                     PMD1            equ	97	;# 
  5307   000063                     PMD3            equ	99	;# 
  5308   000064                     PMD4            equ	100	;# 
  5309   000065                     PMD5            equ	101	;# 
  5310   000066                     PMD6            equ	102	;# 
  5311   000067                     PMD7            equ	103	;# 
  5312   000068                     PMD8            equ	104	;# 
  5313   00006A                     MD1CON0         equ	106	;# 
  5314   00006B                     MD1CON1         equ	107	;# 
  5315   00006C                     MD1SRC          equ	108	;# 
  5316   00006D                     MD1CARL         equ	109	;# 
  5317   00006E                     MD1CARH         equ	110	;# 
  5318   00006F                     CMOUT           equ	111	;# 
  5319   000070                     CM1CON0         equ	112	;# 
  5320   000071                     CM1CON1         equ	113	;# 
  5321   000072                     CM1NCH          equ	114	;# 
  5322   000073                     CM1PCH          equ	115	;# 
  5323   000074                     CM2CON0         equ	116	;# 
  5324   000075                     CM2CON1         equ	117	;# 
  5325   000076                     CM2NCH          equ	118	;# 
  5326   000077                     CM2PCH          equ	119	;# 
  5327   000078                     WDTCON0         equ	120	;# 
  5328   000079                     WDTCON1         equ	121	;# 
  5329   00007A                     WDTPS           equ	122	;# 
  5330   00007A                     WDTPSL          equ	122	;# 
  5331   00007B                     WDTPSH          equ	123	;# 
  5332   00007C                     WDTTMR          equ	124	;# 
  5333   00007D                     DAC1DAT         equ	125	;# 
  5334   00007D                     DAC1DATL        equ	125	;# 
  5335   00007F                     DAC1CON         equ	127	;# 
  5336   000080                     SPI1RXB         equ	128	;# 
  5337   000081                     SPI1TXB         equ	129	;# 
  5338   000082                     SPI1TCNT        equ	130	;# 
  5339   000082                     SPI1TCNTL       equ	130	;# 
  5340   000083                     SPI1TCNTH       equ	131	;# 
  5341   000084                     SPI1CON0        equ	132	;# 
  5342   000085                     SPI1CON1        equ	133	;# 
  5343   000086                     SPI1CON2        equ	134	;# 
  5344   000087                     SPI1STATUS      equ	135	;# 
  5345   000088                     SPI1TWIDTH      equ	136	;# 
  5346   000089                     SPI1BAUD        equ	137	;# 
  5347   00008A                     SPI1INTF        equ	138	;# 
  5348   00008B                     SPI1INTE        equ	139	;# 
  5349   00008C                     SPI1CLK         equ	140	;# 
  5350   00008D                     SPI2RXB         equ	141	;# 
  5351   00008E                     SPI2TXB         equ	142	;# 
  5352   00008F                     SPI2TCNT        equ	143	;# 
  5353   00008F                     SPI2TCNTL       equ	143	;# 
  5354   000090                     SPI2TCNTH       equ	144	;# 
  5355   000091                     SPI2CON0        equ	145	;# 
  5356   000092                     SPI2CON1        equ	146	;# 
  5357   000093                     SPI2CON2        equ	147	;# 
  5358   000094                     SPI2STATUS      equ	148	;# 
  5359   000095                     SPI2TWIDTH      equ	149	;# 
  5360   000096                     SPI2BAUD        equ	150	;# 
  5361   000097                     SPI2INTF        equ	151	;# 
  5362   000098                     SPI2INTE        equ	152	;# 
  5363   000099                     SPI2CLK         equ	153	;# 
  5364   0000AC                     ACTCON          equ	172	;# 
  5365   0000AD                     OSCCON1         equ	173	;# 
  5366   0000AE                     OSCCON2         equ	174	;# 
  5367   0000AF                     OSCCON3         equ	175	;# 
  5368   0000B0                     OSCTUNE         equ	176	;# 
  5369   0000B1                     OSCFRQ          equ	177	;# 
  5370   0000B1                     OSCFREQ         equ	177	;# 
  5371   0000B2                     OSCSTAT         equ	178	;# 
  5372   0000B2                     OSCSTAT1        equ	178	;# 
  5373   0000B3                     OSCEN           equ	179	;# 
  5374   0000B4                     PRLOCK          equ	180	;# 
  5375   0000B5                     SCANPR          equ	181	;# 
  5376   0000B6                     DMA1PR          equ	182	;# 
  5377   0000B7                     DMA2PR          equ	183	;# 
  5378   0000B8                     DMA3PR          equ	184	;# 
  5379   0000B9                     DMA4PR          equ	185	;# 
  5380   0000BA                     DMA5PR          equ	186	;# 
  5381   0000BB                     DMA6PR          equ	187	;# 
  5382   0000BE                     MAINPR          equ	190	;# 
  5383   0000BF                     ISRPR           equ	191	;# 
  5384   0000D4                     CLCDATA         equ	212	;# 
  5385   0000D5                     CLCSELECT       equ	213	;# 
  5386   0000D6                     CLCnCON         equ	214	;# 
  5387   0000D7                     CLCnPOL         equ	215	;# 
  5388   0000D8                     CLCnSEL0        equ	216	;# 
  5389   0000D9                     CLCnSEL1        equ	217	;# 
  5390   0000DA                     CLCnSEL2        equ	218	;# 
  5391   0000DB                     CLCnSEL3        equ	219	;# 
  5392   0000DC                     CLCnGLS0        equ	220	;# 
  5393   0000DD                     CLCnGLS1        equ	221	;# 
  5394   0000DE                     CLCnGLS2        equ	222	;# 
  5395   0000DF                     CLCnGLS3        equ	223	;# 
  5396   0000E8                     DMASELECT       equ	232	;# 
  5397   0000E9                     DMAnBUF         equ	233	;# 
  5398   0000EA                     DMAnDCNT        equ	234	;# 
  5399   0000EA                     DMAnDCNTL       equ	234	;# 
  5400   0000EB                     DMAnDCNTH       equ	235	;# 
  5401   0000EC                     DMAnDPTR        equ	236	;# 
  5402   0000EC                     DMAnDPTRL       equ	236	;# 
  5403   0000ED                     DMAnDPTRH       equ	237	;# 
  5404   0000EE                     DMAnDSZ         equ	238	;# 
  5405   0000EE                     DMAnDSZL        equ	238	;# 
  5406   0000EF                     DMAnDSZH        equ	239	;# 
  5407   0000F0                     DMAnDSA         equ	240	;# 
  5408   0000F0                     DMAnDSAL        equ	240	;# 
  5409   0000F1                     DMAnDSAH        equ	241	;# 
  5410   0000F2                     DMAnSCNT        equ	242	;# 
  5411   0000F2                     DMAnSCNTL       equ	242	;# 
  5412   0000F3                     DMAnSCNTH       equ	243	;# 
  5413   0000F4                     DMAnSPTR        equ	244	;# 
  5414   0000F4                     DMAnSPTRL       equ	244	;# 
  5415   0000F5                     DMAnSPTRH       equ	245	;# 
  5416   0000F6                     DMAnSPTRU       equ	246	;# 
  5417   0000F7                     DMAnSSZ         equ	247	;# 
  5418   0000F7                     DMAnSSZL        equ	247	;# 
  5419   0000F8                     DMAnSSZH        equ	248	;# 
  5420   0000F9                     DMAnSSA         equ	249	;# 
  5421   0000F9                     DMAnSSAL        equ	249	;# 
  5422   0000FA                     DMAnSSAH        equ	250	;# 
  5423   0000FB                     DMAnSSAU        equ	251	;# 
  5424   0000FC                     DMAnCON0        equ	252	;# 
  5425   0000FD                     DMAnCON1        equ	253	;# 
  5426   0000FE                     DMAnAIRQ        equ	254	;# 
  5427   0000FF                     DMAnSIRQ        equ	255	;# 
  5428   000200                     PPSLOCK         equ	512	;# 
  5429   000201                     RA0PPS          equ	513	;# 
  5430   000202                     RA1PPS          equ	514	;# 
  5431   000203                     RA2PPS          equ	515	;# 
  5432   000204                     RA3PPS          equ	516	;# 
  5433   000205                     RA4PPS          equ	517	;# 
  5434   000206                     RA5PPS          equ	518	;# 
  5435   000207                     RA6PPS          equ	519	;# 
  5436   000208                     RA7PPS          equ	520	;# 
  5437   000209                     RB0PPS          equ	521	;# 
  5438   00020A                     RB1PPS          equ	522	;# 
  5439   00020B                     RB2PPS          equ	523	;# 
  5440   00020C                     RB3PPS          equ	524	;# 
  5441   00020D                     RB4PPS          equ	525	;# 
  5442   00020E                     RB5PPS          equ	526	;# 
  5443   00020F                     RB6PPS          equ	527	;# 
  5444   000210                     RB7PPS          equ	528	;# 
  5445   000211                     RC0PPS          equ	529	;# 
  5446   000212                     RC1PPS          equ	530	;# 
  5447   000213                     RC2PPS          equ	531	;# 
  5448   000214                     RC3PPS          equ	532	;# 
  5449   000215                     RC4PPS          equ	533	;# 
  5450   000216                     RC5PPS          equ	534	;# 
  5451   000217                     RC6PPS          equ	535	;# 
  5452   000218                     RC7PPS          equ	536	;# 
  5453   000219                     RD0PPS          equ	537	;# 
  5454   00021A                     RD1PPS          equ	538	;# 
  5455   00021B                     RD2PPS          equ	539	;# 
  5456   00021C                     RD3PPS          equ	540	;# 
  5457   00021D                     RD4PPS          equ	541	;# 
  5458   00021E                     RD5PPS          equ	542	;# 
  5459   00021F                     RD6PPS          equ	543	;# 
  5460   000220                     RD7PPS          equ	544	;# 
  5461   000221                     RE0PPS          equ	545	;# 
  5462   000222                     RE1PPS          equ	546	;# 
  5463   000223                     RE2PPS          equ	547	;# 
  5464   000229                     RF0PPS          equ	553	;# 
  5465   00022A                     RF1PPS          equ	554	;# 
  5466   00022B                     RF2PPS          equ	555	;# 
  5467   00022C                     RF3PPS          equ	556	;# 
  5468   00022D                     RF4PPS          equ	557	;# 
  5469   00022E                     RF5PPS          equ	558	;# 
  5470   00022F                     RF6PPS          equ	559	;# 
  5471   000230                     RF7PPS          equ	560	;# 
  5472   00023E                     INT0PPS         equ	574	;# 
  5473   00023F                     INT1PPS         equ	575	;# 
  5474   000240                     INT2PPS         equ	576	;# 
  5475   000241                     T0CKIPPS        equ	577	;# 
  5476   000242                     T1CKIPPS        equ	578	;# 
  5477   000243                     T1GPPS          equ	579	;# 
  5478   000244                     T3CKIPPS        equ	580	;# 
  5479   000245                     T3GPPS          equ	581	;# 
  5480   000246                     T5CKIPPS        equ	582	;# 
  5481   000247                     T5GPPS          equ	583	;# 
  5482   000248                     T2INPPS         equ	584	;# 
  5483   000249                     T4INPPS         equ	585	;# 
  5484   00024A                     T6INPPS         equ	586	;# 
  5485   00024F                     CCP1PPS         equ	591	;# 
  5486   000250                     CCP2PPS         equ	592	;# 
  5487   000251                     CCP3PPS         equ	593	;# 
  5488   000253                     PWM1ERSPPS      equ	595	;# 
  5489   000254                     PWM2ERSPPS      equ	596	;# 
  5490   000255                     PWM3ERSPPS      equ	597	;# 
  5491   000257                     PWMIN0PPS       equ	599	;# 
  5492   000258                     PWMIN1PPS       equ	600	;# 
  5493   000259                     SMT1WINPPS      equ	601	;# 
  5494   00025A                     SMT1SIGPPS      equ	602	;# 
  5495   00025B                     CWG1PPS         equ	603	;# 
  5496   00025B                     CWG1INPPS       equ	603	;# 
  5497   00025C                     CWG2PPS         equ	604	;# 
  5498   00025C                     CWG2INPPS       equ	604	;# 
  5499   00025D                     CWG3PPS         equ	605	;# 
  5500   00025D                     CWG3INPPS       equ	605	;# 
  5501   00025E                     MD1CARLPPS      equ	606	;# 
  5502   00025E                     MDCARLPPS       equ	606	;# 
  5503   00025F                     MD1CARHPPS      equ	607	;# 
  5504   00025F                     MDCARHPPS       equ	607	;# 
  5505   000260                     MD1SRCPPS       equ	608	;# 
  5506   000260                     MDSRCPPS        equ	608	;# 
  5507   000261                     CLCIN0PPS       equ	609	;# 
  5508   000262                     CLCIN1PPS       equ	610	;# 
  5509   000263                     CLCIN2PPS       equ	611	;# 
  5510   000264                     CLCIN3PPS       equ	612	;# 
  5511   000265                     CLCIN4PPS       equ	613	;# 
  5512   000266                     CLCIN5PPS       equ	614	;# 
  5513   000267                     CLCIN6PPS       equ	615	;# 
  5514   000268                     CLCIN7PPS       equ	616	;# 
  5515   000269                     ADACTPPS        equ	617	;# 
  5516   00026A                     SPI1SCKPPS      equ	618	;# 
  5517   00026B                     SPI1SDIPPS      equ	619	;# 
  5518   00026C                     SPI1SSPPS       equ	620	;# 
  5519   00026D                     SPI2SCKPPS      equ	621	;# 
  5520   00026E                     SPI2SDIPPS      equ	622	;# 
  5521   00026F                     SPI2SSPPS       equ	623	;# 
  5522   000270                     I2C1SDAPPS      equ	624	;# 
  5523   000271                     I2C1SCLPPS      equ	625	;# 
  5524   000272                     U1RXPPS         equ	626	;# 
  5525   000273                     U1CTSPPS        equ	627	;# 
  5526   000274                     U2RXPPS         equ	628	;# 
  5527   000275                     U2CTSPPS        equ	629	;# 
  5528   000276                     U3RXPPS         equ	630	;# 
  5529   000277                     U3CTSPPS        equ	631	;# 
  5530   000278                     U4RXPPS         equ	632	;# 
  5531   000279                     U4CTSPPS        equ	633	;# 
  5532   00027A                     U5RXPPS         equ	634	;# 
  5533   00027B                     U5CTSPPS        equ	635	;# 
  5534   000286                     RC4I2C          equ	646	;# 
  5535   000287                     RC3I2C          equ	647	;# 
  5536   000288                     RB2I2C          equ	648	;# 
  5537   000289                     RB1I2C          equ	649	;# 
  5538   00028B                     I2C1RXB         equ	651	;# 
  5539   00028C                     I2C1TXB         equ	652	;# 
  5540   00028D                     I2C1CNT         equ	653	;# 
  5541   00028E                     I2C1ADB0        equ	654	;# 
  5542   00028F                     I2C1ADB1        equ	655	;# 
  5543   000290                     I2C1ADR0        equ	656	;# 
  5544   000291                     I2C1ADR1        equ	657	;# 
  5545   000292                     I2C1ADR2        equ	658	;# 
  5546   000293                     I2C1ADR3        equ	659	;# 
  5547   000294                     I2C1CON0        equ	660	;# 
  5548   000295                     I2C1CON1        equ	661	;# 
  5549   000296                     I2C1CON2        equ	662	;# 
  5550   000297                     I2C1ERR         equ	663	;# 
  5551   000298                     I2C1STAT0       equ	664	;# 
  5552   000299                     I2C1STAT1       equ	665	;# 
  5553   00029A                     I2C1PIR         equ	666	;# 
  5554   00029B                     I2C1PIE         equ	667	;# 
  5555   00029C                     I2C1CLK         equ	668	;# 
  5556   00029D                     I2C1BTO         equ	669	;# 
  5557   0002A1                     U1RXB           equ	673	;# 
  5558   0002A1                     U1RXBL          equ	673	;# 
  5559   0002A2                     U1RXCHK         equ	674	;# 
  5560   0002A3                     U1TXB           equ	675	;# 
  5561   0002A3                     U1TXBL          equ	675	;# 
  5562   0002A4                     U1TXCHK         equ	676	;# 
  5563   0002A5                     U1P1            equ	677	;# 
  5564   0002A5                     U1P1L           equ	677	;# 
  5565   0002A6                     U1P1H           equ	678	;# 
  5566   0002A7                     U1P2            equ	679	;# 
  5567   0002A7                     U1P2L           equ	679	;# 
  5568   0002A8                     U1P2H           equ	680	;# 
  5569   0002A9                     U1P3            equ	681	;# 
  5570   0002A9                     U1P3L           equ	681	;# 
  5571   0002AA                     U1P3H           equ	682	;# 
  5572   0002AB                     U1CON0          equ	683	;# 
  5573   0002AC                     U1CON1          equ	684	;# 
  5574   0002AD                     U1CON2          equ	685	;# 
  5575   0002AE                     U1BRG           equ	686	;# 
  5576   0002AE                     U1BRGL          equ	686	;# 
  5577   0002AF                     U1BRGH          equ	687	;# 
  5578   0002B0                     U1FIFO          equ	688	;# 
  5579   0002B1                     U1UIR           equ	689	;# 
  5580   0002B2                     U1ERRIR         equ	690	;# 
  5581   0002B3                     U1ERRIE         equ	691	;# 
  5582   0002B4                     U2RXB           equ	692	;# 
  5583   0002B4                     U2RXBL          equ	692	;# 
  5584   0002B6                     U2TXB           equ	694	;# 
  5585   0002B6                     U2TXBL          equ	694	;# 
  5586   0002B8                     U2P1            equ	696	;# 
  5587   0002B8                     U2P1L           equ	696	;# 
  5588   0002BA                     U2P2            equ	698	;# 
  5589   0002BA                     U2P2L           equ	698	;# 
  5590   0002BC                     U2P3            equ	700	;# 
  5591   0002BC                     U2P3L           equ	700	;# 
  5592   0002BE                     U2CON0          equ	702	;# 
  5593   0002BF                     U2CON1          equ	703	;# 
  5594   0002C0                     U2CON2          equ	704	;# 
  5595   0002C1                     U2BRG           equ	705	;# 
  5596   0002C1                     U2BRGL          equ	705	;# 
  5597   0002C2                     U2BRGH          equ	706	;# 
  5598   0002C3                     U2FIFO          equ	707	;# 
  5599   0002C4                     U2UIR           equ	708	;# 
  5600   0002C5                     U2ERRIR         equ	709	;# 
  5601   0002C6                     U2ERRIE         equ	710	;# 
  5602   0002C7                     U3RXB           equ	711	;# 
  5603   0002C7                     U3RXBL          equ	711	;# 
  5604   0002C9                     U3TXB           equ	713	;# 
  5605   0002C9                     U3TXBL          equ	713	;# 
  5606   0002CB                     U3P1            equ	715	;# 
  5607   0002CB                     U3P1L           equ	715	;# 
  5608   0002CD                     U3P2            equ	717	;# 
  5609   0002CD                     U3P2L           equ	717	;# 
  5610   0002CF                     U3P3            equ	719	;# 
  5611   0002CF                     U3P3L           equ	719	;# 
  5612   0002D1                     U3CON0          equ	721	;# 
  5613   0002D2                     U3CON1          equ	722	;# 
  5614   0002D3                     U3CON2          equ	723	;# 
  5615   0002D4                     U3BRG           equ	724	;# 
  5616   0002D4                     U3BRGL          equ	724	;# 
  5617   0002D5                     U3BRGH          equ	725	;# 
  5618   0002D6                     U3FIFO          equ	726	;# 
  5619   0002D7                     U3UIR           equ	727	;# 
  5620   0002D8                     U3ERRIR         equ	728	;# 
  5621   0002D9                     U3ERRIE         equ	729	;# 
  5622   0002DA                     U4RXB           equ	730	;# 
  5623   0002DA                     U4RXBL          equ	730	;# 
  5624   0002DC                     U4TXB           equ	732	;# 
  5625   0002DC                     U4TXBL          equ	732	;# 
  5626   0002DE                     U4P1            equ	734	;# 
  5627   0002DE                     U4P1L           equ	734	;# 
  5628   0002E0                     U4P2            equ	736	;# 
  5629   0002E0                     U4P2L           equ	736	;# 
  5630   0002E2                     U4P3            equ	738	;# 
  5631   0002E2                     U4P3L           equ	738	;# 
  5632   0002E4                     U4CON0          equ	740	;# 
  5633   0002E5                     U4CON1          equ	741	;# 
  5634   0002E6                     U4CON2          equ	742	;# 
  5635   0002E7                     U4BRG           equ	743	;# 
  5636   0002E7                     U4BRGL          equ	743	;# 
  5637   0002E8                     U4BRGH          equ	744	;# 
  5638   0002E9                     U4FIFO          equ	745	;# 
  5639   0002EA                     U4UIR           equ	746	;# 
  5640   0002EB                     U4ERRIR         equ	747	;# 
  5641   0002EC                     U4ERRIE         equ	748	;# 
  5642   0002ED                     U5RXB           equ	749	;# 
  5643   0002ED                     U5RXBL          equ	749	;# 
  5644   0002EF                     U5TXB           equ	751	;# 
  5645   0002EF                     U5TXBL          equ	751	;# 
  5646   0002F1                     U5P1            equ	753	;# 
  5647   0002F1                     U5P1L           equ	753	;# 
  5648   0002F3                     U5P2            equ	755	;# 
  5649   0002F3                     U5P2L           equ	755	;# 
  5650   0002F5                     U5P3            equ	757	;# 
  5651   0002F5                     U5P3L           equ	757	;# 
  5652   0002F7                     U5CON0          equ	759	;# 
  5653   0002F8                     U5CON1          equ	760	;# 
  5654   0002F9                     U5CON2          equ	761	;# 
  5655   0002FA                     U5BRG           equ	762	;# 
  5656   0002FA                     U5BRGL          equ	762	;# 
  5657   0002FB                     U5BRGH          equ	763	;# 
  5658   0002FC                     U5FIFO          equ	764	;# 
  5659   0002FD                     U5UIR           equ	765	;# 
  5660   0002FE                     U5ERRIR         equ	766	;# 
  5661   0002FF                     U5ERRIE         equ	767	;# 
  5662   000300                     SMT1TMR         equ	768	;# 
  5663   000300                     SMT1TMRL        equ	768	;# 
  5664   000301                     SMT1TMRH        equ	769	;# 
  5665   000302                     SMT1TMRU        equ	770	;# 
  5666   000303                     SMT1CPR         equ	771	;# 
  5667   000303                     SMT1CPRL        equ	771	;# 
  5668   000304                     SMT1CPRH        equ	772	;# 
  5669   000305                     SMT1CPRU        equ	773	;# 
  5670   000306                     SMT1CPW         equ	774	;# 
  5671   000306                     SMT1CPWL        equ	774	;# 
  5672   000307                     SMT1CPWH        equ	775	;# 
  5673   000308                     SMT1CPWU        equ	776	;# 
  5674   000309                     SMT1PR          equ	777	;# 
  5675   000309                     SMT1PRL         equ	777	;# 
  5676   00030A                     SMT1PRH         equ	778	;# 
  5677   00030B                     SMT1PRU         equ	779	;# 
  5678   00030C                     SMT1CON0        equ	780	;# 
  5679   00030D                     SMT1CON1        equ	781	;# 
  5680   00030E                     SMT1STAT        equ	782	;# 
  5681   00030F                     SMT1CLK         equ	783	;# 
  5682   000310                     SMT1SIG         equ	784	;# 
  5683   000311                     SMT1WIN         equ	785	;# 
  5684   000318                     TMR0L           equ	792	;# 
  5685   000318                     TMR0            equ	792	;# 
  5686   000319                     TMR0H           equ	793	;# 
  5687   000319                     PR0             equ	793	;# 
  5688   00031A                     T0CON0          equ	794	;# 
  5689   00031B                     T0CON1          equ	795	;# 
  5690   00031C                     TMR1            equ	796	;# 
  5691   00031C                     TMR1L           equ	796	;# 
  5692   00031D                     TMR1H           equ	797	;# 
  5693   00031E                     T1CON           equ	798	;# 
  5694   00031E                     TMR1CON         equ	798	;# 
  5695   00031F                     T1GCON          equ	799	;# 
  5696   00031F                     TMR1GCON        equ	799	;# 
  5697   000320                     T1GATE          equ	800	;# 
  5698   000320                     TMR1GATE        equ	800	;# 
  5699   000321                     T1CLK           equ	801	;# 
  5700   000321                     TMR1CLK         equ	801	;# 
  5701   000321                     PR1             equ	801	;# 
  5702   000322                     T2TMR           equ	802	;# 
  5703   000322                     TMR2            equ	802	;# 
  5704   000323                     T2PR            equ	803	;# 
  5705   000323                     PR2             equ	803	;# 
  5706   000324                     T2CON           equ	804	;# 
  5707   000325                     T2HLT           equ	805	;# 
  5708   000326                     T2CLKCON        equ	806	;# 
  5709   000326                     T2CLK           equ	806	;# 
  5710   000327                     T2RST           equ	807	;# 
  5711   000328                     TMR3            equ	808	;# 
  5712   000328                     TMR3L           equ	808	;# 
  5713   000329                     TMR3H           equ	809	;# 
  5714   00032A                     T3CON           equ	810	;# 
  5715   00032A                     TMR3CON         equ	810	;# 
  5716   00032B                     T3GCON          equ	811	;# 
  5717   00032B                     TMR3GCON        equ	811	;# 
  5718   00032C                     T3GATE          equ	812	;# 
  5719   00032C                     TMR3GATE        equ	812	;# 
  5720   00032D                     T3CLK           equ	813	;# 
  5721   00032D                     TMR3CLK         equ	813	;# 
  5722   00032D                     PR3             equ	813	;# 
  5723   00032E                     T4TMR           equ	814	;# 
  5724   00032E                     TMR4            equ	814	;# 
  5725   00032F                     T4PR            equ	815	;# 
  5726   00032F                     PR4             equ	815	;# 
  5727   000330                     T4CON           equ	816	;# 
  5728   000331                     T4HLT           equ	817	;# 
  5729   000332                     T4CLKCON        equ	818	;# 
  5730   000332                     T4CLK           equ	818	;# 
  5731   000333                     T4RST           equ	819	;# 
  5732   000334                     TMR5            equ	820	;# 
  5733   000334                     TMR5L           equ	820	;# 
  5734   000335                     TMR5H           equ	821	;# 
  5735   000336                     T5CON           equ	822	;# 
  5736   000336                     TMR5CON         equ	822	;# 
  5737   000337                     T5GCON          equ	823	;# 
  5738   000337                     TMR5GCON        equ	823	;# 
  5739   000338                     T5GATE          equ	824	;# 
  5740   000338                     TMR5GATE        equ	824	;# 
  5741   000339                     T5CLK           equ	825	;# 
  5742   000339                     TMR5CLK         equ	825	;# 
  5743   000339                     PR5             equ	825	;# 
  5744   00033A                     T6TMR           equ	826	;# 
  5745   00033A                     TMR6            equ	826	;# 
  5746   00033B                     T6PR            equ	827	;# 
  5747   00033B                     PR6             equ	827	;# 
  5748   00033C                     T6CON           equ	828	;# 
  5749   00033D                     T6HLT           equ	829	;# 
  5750   00033E                     T6CLKCON        equ	830	;# 
  5751   00033E                     T6CLK           equ	830	;# 
  5752   00033F                     T6RST           equ	831	;# 
  5753   000340                     CCPR1           equ	832	;# 
  5754   000340                     CCPR1L          equ	832	;# 
  5755   000341                     CCPR1H          equ	833	;# 
  5756   000342                     CCP1CON         equ	834	;# 
  5757   000343                     CCP1CAP         equ	835	;# 
  5758   000344                     CCPR2           equ	836	;# 
  5759   000344                     CCPR2L          equ	836	;# 
  5760   000345                     CCPR2H          equ	837	;# 
  5761   000346                     CCP2CON         equ	838	;# 
  5762   000347                     CCP2CAP         equ	839	;# 
  5763   000348                     CCPR3           equ	840	;# 
  5764   000348                     CCPR3L          equ	840	;# 
  5765   000349                     CCPR3H          equ	841	;# 
  5766   00034A                     CCP3CON         equ	842	;# 
  5767   00034B                     CCP3CAP         equ	843	;# 
  5768   00034C                     CCPTMRS0        equ	844	;# 
  5769   00034F                     CRCDATA         equ	847	;# 
  5770   00034F                     CRCDATL         equ	847	;# 
  5771   000350                     CRCDATH         equ	848	;# 
  5772   000351                     CRCACC          equ	849	;# 
  5773   000351                     CRCACCL         equ	849	;# 
  5774   000352                     CRCACCH         equ	850	;# 
  5775   000353                     CRCSHFT         equ	851	;# 
  5776   000353                     CRCSHIFTL       equ	851	;# 
  5777   000354                     CRCSHIFTH       equ	852	;# 
  5778   000355                     CRCXOR          equ	853	;# 
  5779   000355                     CRCXORL         equ	853	;# 
  5780   000356                     CRCXORH         equ	854	;# 
  5781   000357                     CRCCON0         equ	855	;# 
  5782   000358                     CRCCON1         equ	856	;# 
  5783   00035A                     SCANLADR        equ	858	;# 
  5784   00035A                     SCANLADRL       equ	858	;# 
  5785   00035B                     SCANLADRH       equ	859	;# 
  5786   00035C                     SCANLADRU       equ	860	;# 
  5787   00035D                     SCANHADR        equ	861	;# 
  5788   00035D                     SCANHADRL       equ	861	;# 
  5789   00035E                     SCANHADRH       equ	862	;# 
  5790   00035F                     SCANHADRU       equ	863	;# 
  5791   000360                     SCANCON0        equ	864	;# 
  5792   000361                     SCANTRIG        equ	865	;# 
  5793   000362                     IPR0            equ	866	;# 
  5794   000363                     IPR1            equ	867	;# 
  5795   000364                     IPR2            equ	868	;# 
  5796   000365                     IPR3            equ	869	;# 
  5797   000366                     IPR4            equ	870	;# 
  5798   000367                     IPR5            equ	871	;# 
  5799   000368                     IPR6            equ	872	;# 
  5800   000369                     IPR7            equ	873	;# 
  5801   00036A                     IPR8            equ	874	;# 
  5802   00036B                     IPR9            equ	875	;# 
  5803   00036C                     IPR10           equ	876	;# 
  5804   00036D                     IPR11           equ	877	;# 
  5805   00036E                     IPR12           equ	878	;# 
  5806   00036F                     IPR13           equ	879	;# 
  5807   000370                     IPR14           equ	880	;# 
  5808   000371                     IPR15           equ	881	;# 
  5809   000373                     STATUS_CSHAD    equ	883	;# 
  5810   000374                     WREG_CSHAD      equ	884	;# 
  5811   000375                     BSR_CSHAD       equ	885	;# 
  5812   000376                     SHADCON         equ	886	;# 
  5813   000377                     STATUS_SHAD     equ	887	;# 
  5814   000378                     WREG_SHAD       equ	888	;# 
  5815   000379                     BSR_SHAD        equ	889	;# 
  5816   00037A                     PCLATH_SHAD     equ	890	;# 
  5817   00037B                     PCLATU_SHAD     equ	891	;# 
  5818   00037C                     FSR0SH          equ	892	;# 
  5819   00037C                     FSR0L_SHAD      equ	892	;# 
  5820   00037D                     FSR0H_SHAD      equ	893	;# 
  5821   00037E                     FSR1SH          equ	894	;# 
  5822   00037E                     FSR1L_SHAD      equ	894	;# 
  5823   00037F                     FSR1H_SHAD      equ	895	;# 
  5824   000380                     FSR2SH          equ	896	;# 
  5825   000380                     FSR2L_SHAD      equ	896	;# 
  5826   000381                     FSR2H_SHAD      equ	897	;# 
  5827   000382                     PRODSH          equ	898	;# 
  5828   000382                     PRODL_SHAD      equ	898	;# 
  5829   000383                     PRODH_SHAD      equ	899	;# 
  5830   0003BC                     CWG1CLK         equ	956	;# 
  5831   0003BC                     CWG1CLKCON      equ	956	;# 
  5832   0003BD                     CWG1ISM         equ	957	;# 
  5833   0003BD                     CWG1DAT         equ	957	;# 
  5834   0003BE                     CWG1DBR         equ	958	;# 
  5835   0003BF                     CWG1DBF         equ	959	;# 
  5836   0003C0                     CWG1CON0        equ	960	;# 
  5837   0003C1                     CWG1CON1        equ	961	;# 
  5838   0003C2                     CWG1AS0         equ	962	;# 
  5839   0003C3                     CWG1AS1         equ	963	;# 
  5840   0003C4                     CWG1STR         equ	964	;# 
  5841   0003C5                     CWG2CLK         equ	965	;# 
  5842   0003C5                     CWG2CLKCON      equ	965	;# 
  5843   0003C6                     CWG2ISM         equ	966	;# 
  5844   0003C6                     CWG2DAT         equ	966	;# 
  5845   0003C7                     CWG2DBR         equ	967	;# 
  5846   0003C8                     CWG2DBF         equ	968	;# 
  5847   0003C9                     CWG2CON0        equ	969	;# 
  5848   0003CA                     CWG2CON1        equ	970	;# 
  5849   0003CB                     CWG2AS0         equ	971	;# 
  5850   0003CC                     CWG2AS1         equ	972	;# 
  5851   0003CD                     CWG2STR         equ	973	;# 
  5852   0003CE                     CWG3CLK         equ	974	;# 
  5853   0003CE                     CWG3CLKCON      equ	974	;# 
  5854   0003CF                     CWG3ISM         equ	975	;# 
  5855   0003CF                     CWG3DAT         equ	975	;# 
  5856   0003D0                     CWG3DBR         equ	976	;# 
  5857   0003D1                     CWG3DBF         equ	977	;# 
  5858   0003D2                     CWG3CON0        equ	978	;# 
  5859   0003D3                     CWG3CON1        equ	979	;# 
  5860   0003D4                     CWG3AS0         equ	980	;# 
  5861   0003D5                     CWG3AS1         equ	981	;# 
  5862   0003D6                     CWG3STR         equ	982	;# 
  5863   0003D7                     FVRCON          equ	983	;# 
  5864   0003D8                     ADCPCON         equ	984	;# 
  5865   0003D8                     ADCP            equ	984	;# 
  5866   0003D9                     ADLTH           equ	985	;# 
  5867   0003D9                     ADLTHL          equ	985	;# 
  5868   0003DA                     ADLTHH          equ	986	;# 
  5869   0003DB                     ADUTH           equ	987	;# 
  5870   0003DB                     ADUTHL          equ	987	;# 
  5871   0003DC                     ADUTHH          equ	988	;# 
  5872   0003DD                     ADERR           equ	989	;# 
  5873   0003DD                     ADERRL          equ	989	;# 
  5874   0003DE                     ADERRH          equ	990	;# 
  5875   0003DF                     ADSTPT          equ	991	;# 
  5876   0003DF                     ADSTPTL         equ	991	;# 
  5877   0003E0                     ADSTPTH         equ	992	;# 
  5878   0003E1                     ADFLTR          equ	993	;# 
  5879   0003E1                     ADFLTRL         equ	993	;# 
  5880   0003E2                     ADFLTRH         equ	994	;# 
  5881   0003E3                     ADACC           equ	995	;# 
  5882   0003E3                     ADACCL          equ	995	;# 
  5883   0003E4                     ADACCH          equ	996	;# 
  5884   0003E5                     ADACCU          equ	997	;# 
  5885   0003E6                     ADCNT           equ	998	;# 
  5886   0003E7                     ADRPT           equ	999	;# 
  5887   0003E8                     ADPREV          equ	1000	;# 
  5888   0003E8                     ADPREVL         equ	1000	;# 
  5889   0003E9                     ADPREVH         equ	1001	;# 
  5890   0003EA                     ADRES           equ	1002	;# 
  5891   0003EA                     ADRESL          equ	1002	;# 
  5892   0003EB                     ADRESH          equ	1003	;# 
  5893   0003EC                     ADPCH           equ	1004	;# 
  5894   0003EE                     ADACQ           equ	1006	;# 
  5895   0003EE                     ADACQL          equ	1006	;# 
  5896   0003EF                     ADACQH          equ	1007	;# 
  5897   0003F0                     ADCAP           equ	1008	;# 
  5898   0003F1                     ADPRE           equ	1009	;# 
  5899   0003F1                     ADPREL          equ	1009	;# 
  5900   0003F2                     ADPREH          equ	1010	;# 
  5901   0003F3                     ADCON0          equ	1011	;# 
  5902   0003F4                     ADCON1          equ	1012	;# 
  5903   0003F5                     ADCON2          equ	1013	;# 
  5904   0003F6                     ADCON3          equ	1014	;# 
  5905   0003F7                     ADSTAT          equ	1015	;# 
  5906   0003F8                     ADREF           equ	1016	;# 
  5907   0003F9                     ADACT           equ	1017	;# 
  5908   0003FA                     ADCLK           equ	1018	;# 
  5909   000400                     ANSELA          equ	1024	;# 
  5910   000401                     WPUA            equ	1025	;# 
  5911   000402                     ODCONA          equ	1026	;# 
  5912   000403                     SLRCONA         equ	1027	;# 
  5913   000404                     INLVLA          equ	1028	;# 
  5914   000405                     IOCAP           equ	1029	;# 
  5915   000406                     IOCAN           equ	1030	;# 
  5916   000407                     IOCAF           equ	1031	;# 
  5917   000408                     ANSELB          equ	1032	;# 
  5918   000409                     WPUB            equ	1033	;# 
  5919   00040A                     ODCONB          equ	1034	;# 
  5920   00040B                     SLRCONB         equ	1035	;# 
  5921   00040C                     INLVLB          equ	1036	;# 
  5922   00040D                     IOCBP           equ	1037	;# 
  5923   00040E                     IOCBN           equ	1038	;# 
  5924   00040F                     IOCBF           equ	1039	;# 
  5925   000410                     ANSELC          equ	1040	;# 
  5926   000411                     WPUC            equ	1041	;# 
  5927   000412                     ODCONC          equ	1042	;# 
  5928   000413                     SLRCONC         equ	1043	;# 
  5929   000414                     INLVLC          equ	1044	;# 
  5930   000415                     IOCCP           equ	1045	;# 
  5931   000416                     IOCCN           equ	1046	;# 
  5932   000417                     IOCCF           equ	1047	;# 
  5933   000418                     ANSELD          equ	1048	;# 
  5934   000419                     WPUD            equ	1049	;# 
  5935   00041A                     ODCOND          equ	1050	;# 
  5936   00041B                     SLRCOND         equ	1051	;# 
  5937   00041C                     INLVLD          equ	1052	;# 
  5938   000420                     ANSELE          equ	1056	;# 
  5939   000421                     WPUE            equ	1057	;# 
  5940   000422                     ODCONE          equ	1058	;# 
  5941   000423                     SLRCONE         equ	1059	;# 
  5942   000424                     INLVLE          equ	1060	;# 
  5943   000425                     IOCEP           equ	1061	;# 
  5944   000426                     IOCEN           equ	1062	;# 
  5945   000427                     IOCEF           equ	1063	;# 
  5946   000428                     ANSELF          equ	1064	;# 
  5947   000429                     WPUF            equ	1065	;# 
  5948   00042A                     ODCONF          equ	1066	;# 
  5949   00042B                     SLRCONF         equ	1067	;# 
  5950   00042C                     INLVLF          equ	1068	;# 
  5951   000440                     NCO1ACC         equ	1088	;# 
  5952   000440                     NCO1ACCL        equ	1088	;# 
  5953   000441                     NCO1ACCH        equ	1089	;# 
  5954   000442                     NCO1ACCU        equ	1090	;# 
  5955   000443                     NCO1INC         equ	1091	;# 
  5956   000443                     NCO1INCL        equ	1091	;# 
  5957   000444                     NCO1INCH        equ	1092	;# 
  5958   000445                     NCO1INCU        equ	1093	;# 
  5959   000446                     NCO1CON         equ	1094	;# 
  5960   000447                     NCO1CLK         equ	1095	;# 
  5961   000448                     NCO2ACC         equ	1096	;# 
  5962   000448                     NCO2ACCL        equ	1096	;# 
  5963   000449                     NCO2ACCH        equ	1097	;# 
  5964   00044A                     NCO2ACCU        equ	1098	;# 
  5965   00044B                     NCO2INC         equ	1099	;# 
  5966   00044B                     NCO2INCL        equ	1099	;# 
  5967   00044C                     NCO2INCH        equ	1100	;# 
  5968   00044D                     NCO2INCU        equ	1101	;# 
  5969   00044E                     NCO2CON         equ	1102	;# 
  5970   00044F                     NCO2CLK         equ	1103	;# 
  5971   000450                     NCO3ACC         equ	1104	;# 
  5972   000450                     NCO3ACCL        equ	1104	;# 
  5973   000451                     NCO3ACCH        equ	1105	;# 
  5974   000452                     NCO3ACCU        equ	1106	;# 
  5975   000453                     NCO3INC         equ	1107	;# 
  5976   000453                     NCO3INCL        equ	1107	;# 
  5977   000454                     NCO3INCH        equ	1108	;# 
  5978   000455                     NCO3INCU        equ	1109	;# 
  5979   000456                     NCO3CON         equ	1110	;# 
  5980   000457                     NCO3CLK         equ	1111	;# 
  5981   000459                     IVTLOCK         equ	1113	;# 
  5982   00045A                     IVTAD           equ	1114	;# 
  5983   00045A                     IVTADL          equ	1114	;# 
  5984   00045B                     IVTADH          equ	1115	;# 
  5985   00045C                     IVTADU          equ	1116	;# 
  5986   00045D                     IVTBASE         equ	1117	;# 
  5987   00045D                     IVTBASEL        equ	1117	;# 
  5988   00045E                     IVTBASEH        equ	1118	;# 
  5989   00045F                     IVTBASEU        equ	1119	;# 
  5990   000460                     PWM1ERS         equ	1120	;# 
  5991   000461                     PWM1CLK         equ	1121	;# 
  5992   000462                     PWM1LDS         equ	1122	;# 
  5993   000463                     PWM1PR          equ	1123	;# 
  5994   000463                     PWM1PRL         equ	1123	;# 
  5995   000464                     PWM1PRH         equ	1124	;# 
  5996   000465                     PWM1CPRE        equ	1125	;# 
  5997   000466                     PWM1PIPOS       equ	1126	;# 
  5998   000467                     PWM1GIR         equ	1127	;# 
  5999   000468                     PWM1GIE         equ	1128	;# 
  6000   000469                     PWM1CON         equ	1129	;# 
  6001   00046A                     PWM1S1CFG       equ	1130	;# 
  6002   00046B                     PWM1S1P1        equ	1131	;# 
  6003   00046B                     PWM1S1P1L       equ	1131	;# 
  6004   00046C                     PWM1S1P1H       equ	1132	;# 
  6005   00046D                     PWM1S1P2        equ	1133	;# 
  6006   00046D                     PWM1S1P2L       equ	1133	;# 
  6007   00046E                     PWM1S1P2H       equ	1134	;# 
  6008   00046F                     PWM2ERS         equ	1135	;# 
  6009   000470                     PWM2CLK         equ	1136	;# 
  6010   000471                     PWM2LDS         equ	1137	;# 
  6011   000472                     PWM2PR          equ	1138	;# 
  6012   000472                     PWM2PRL         equ	1138	;# 
  6013   000473                     PWM2PRH         equ	1139	;# 
  6014   000474                     PWM2CPRE        equ	1140	;# 
  6015   000475                     PWM2PIPOS       equ	1141	;# 
  6016   000476                     PWM2GIR         equ	1142	;# 
  6017   000477                     PWM2GIE         equ	1143	;# 
  6018   000478                     PWM2CON         equ	1144	;# 
  6019   000479                     PWM2S1CFG       equ	1145	;# 
  6020   00047A                     PWM2S1P1        equ	1146	;# 
  6021   00047A                     PWM2S1P1L       equ	1146	;# 
  6022   00047B                     PWM2S1P1H       equ	1147	;# 
  6023   00047C                     PWM2S1P2        equ	1148	;# 
  6024   00047C                     PWM2S1P2L       equ	1148	;# 
  6025   00047D                     PWM2S1P2H       equ	1149	;# 
  6026   00047E                     PWM3ERS         equ	1150	;# 
  6027   00047F                     PWM3CLK         equ	1151	;# 
  6028   000480                     PWM3LDS         equ	1152	;# 
  6029   000481                     PWM3PR          equ	1153	;# 
  6030   000481                     PWM3PRL         equ	1153	;# 
  6031   000482                     PWM3PRH         equ	1154	;# 
  6032   000483                     PWM3CPRE        equ	1155	;# 
  6033   000484                     PWM3PIPOS       equ	1156	;# 
  6034   000485                     PWM3GIR         equ	1157	;# 
  6035   000486                     PWM3GIE         equ	1158	;# 
  6036   000487                     PWM3CON         equ	1159	;# 
  6037   000488                     PWM3S1CFG       equ	1160	;# 
  6038   000489                     PWM3S1P1        equ	1161	;# 
  6039   000489                     PWM3S1P1L       equ	1161	;# 
  6040   00048A                     PWM3S1P1H       equ	1162	;# 
  6041   00048B                     PWM3S1P2        equ	1163	;# 
  6042   00048B                     PWM3S1P2L       equ	1163	;# 
  6043   00048C                     PWM3S1P2H       equ	1164	;# 
  6044   00049C                     PWMLOAD         equ	1180	;# 
  6045   00049D                     PWMEN           equ	1181	;# 
  6046   00049E                     PIE0            equ	1182	;# 
  6047   00049F                     PIE1            equ	1183	;# 
  6048   0004A0                     PIE2            equ	1184	;# 
  6049   0004A1                     PIE3            equ	1185	;# 
  6050   0004A2                     PIE4            equ	1186	;# 
  6051   0004A3                     PIE5            equ	1187	;# 
  6052   0004A4                     PIE6            equ	1188	;# 
  6053   0004A5                     PIE7            equ	1189	;# 
  6054   0004A6                     PIE8            equ	1190	;# 
  6055   0004A7                     PIE9            equ	1191	;# 
  6056   0004A8                     PIE10           equ	1192	;# 
  6057   0004A9                     PIE11           equ	1193	;# 
  6058   0004AA                     PIE12           equ	1194	;# 
  6059   0004AB                     PIE13           equ	1195	;# 
  6060   0004AC                     PIE14           equ	1196	;# 
  6061   0004AD                     PIE15           equ	1197	;# 
  6062   0004AE                     PIR0            equ	1198	;# 
  6063   0004AF                     PIR1            equ	1199	;# 
  6064   0004B0                     PIR2            equ	1200	;# 
  6065   0004B1                     PIR3            equ	1201	;# 
  6066   0004B2                     PIR4            equ	1202	;# 
  6067   0004B3                     PIR5            equ	1203	;# 
  6068   0004B4                     PIR6            equ	1204	;# 
  6069   0004B5                     PIR7            equ	1205	;# 
  6070   0004B6                     PIR8            equ	1206	;# 
  6071   0004B7                     PIR9            equ	1207	;# 
  6072   0004B8                     PIR10           equ	1208	;# 
  6073   0004B9                     PIR11           equ	1209	;# 
  6074   0004BA                     PIR12           equ	1210	;# 
  6075   0004BB                     PIR13           equ	1211	;# 
  6076   0004BC                     PIR14           equ	1212	;# 
  6077   0004BD                     PIR15           equ	1213	;# 
  6078   0004BE                     LATA            equ	1214	;# 
  6079   0004BF                     LATB            equ	1215	;# 
  6080   0004C0                     LATC            equ	1216	;# 
  6081   0004C1                     LATD            equ	1217	;# 
  6082   0004C2                     LATE            equ	1218	;# 
  6083   0004C3                     LATF            equ	1219	;# 
  6084   0004C6                     TRISA           equ	1222	;# 
  6085   0004C7                     TRISB           equ	1223	;# 
  6086   0004C8                     TRISC           equ	1224	;# 
  6087   0004C9                     TRISD           equ	1225	;# 
  6088   0004CA                     TRISE           equ	1226	;# 
  6089   0004CB                     TRISF           equ	1227	;# 
  6090   0004CE                     PORTA           equ	1230	;# 
  6091   0004CF                     PORTB           equ	1231	;# 
  6092   0004D0                     PORTC           equ	1232	;# 
  6093   0004D1                     PORTD           equ	1233	;# 
  6094   0004D2                     PORTE           equ	1234	;# 
  6095   0004D3                     PORTF           equ	1235	;# 
  6096   0004D6                     INTCON0         equ	1238	;# 
  6097   0004D7                     INTCON1         equ	1239	;# 
  6098   0004D8                     STATUS          equ	1240	;# 
  6099   0004D9                     FSR2            equ	1241	;# 
  6100   0004D9                     FSR2L           equ	1241	;# 
  6101   0004DA                     FSR2H           equ	1242	;# 
  6102   0004DB                     PLUSW2          equ	1243	;# 
  6103   0004DC                     PREINC2         equ	1244	;# 
  6104   0004DD                     POSTDEC2        equ	1245	;# 
  6105   0004DE                     POSTINC2        equ	1246	;# 
  6106   0004DF                     INDF2           equ	1247	;# 
  6107   0004E0                     BSR             equ	1248	;# 
  6108   0004E1                     FSR1            equ	1249	;# 
  6109   0004E1                     FSR1L           equ	1249	;# 
  6110   0004E2                     FSR1H           equ	1250	;# 
  6111   0004E3                     PLUSW1          equ	1251	;# 
  6112   0004E4                     PREINC1         equ	1252	;# 
  6113   0004E5                     POSTDEC1        equ	1253	;# 
  6114   0004E6                     POSTINC1        equ	1254	;# 
  6115   0004E7                     INDF1           equ	1255	;# 
  6116   0004E8                     WREG            equ	1256	;# 
  6117   0004E9                     FSR0            equ	1257	;# 
  6118   0004E9                     FSR0L           equ	1257	;# 
  6119   0004EA                     FSR0H           equ	1258	;# 
  6120   0004EB                     PLUSW0          equ	1259	;# 
  6121   0004EC                     PREINC0         equ	1260	;# 
  6122   0004ED                     POSTDEC0        equ	1261	;# 
  6123   0004EE                     POSTINC0        equ	1262	;# 
  6124   0004EF                     INDF0           equ	1263	;# 
  6125   0004F0                     PCON0           equ	1264	;# 
  6126   0004F1                     PCON1           equ	1265	;# 
  6127   0004F2                     CPUDOZE         equ	1266	;# 
  6128   0004F3                     PROD            equ	1267	;# 
  6129   0004F3                     PRODL           equ	1267	;# 
  6130   0004F4                     PRODH           equ	1268	;# 
  6131   0004F5                     TABLAT          equ	1269	;# 
  6132   0004F6                     TBLPTR          equ	1270	;# 
  6133   0004F6                     TBLPTRL         equ	1270	;# 
  6134   0004F7                     TBLPTRH         equ	1271	;# 
  6135   0004F8                     TBLPTRU         equ	1272	;# 
  6136   0004F9                     PCLAT           equ	1273	;# 
  6137   0004F9                     PCL             equ	1273	;# 
  6138   0004FA                     PCLATH          equ	1274	;# 
  6139   0004FB                     PCLATU          equ	1275	;# 
  6140   0004FC                     STKPTR          equ	1276	;# 
  6141   0004FD                     TOS             equ	1277	;# 
  6142   0004FD                     TOSL            equ	1277	;# 
  6143   0004FE                     TOSH            equ	1278	;# 
  6144   0004FF                     TOSU            equ	1279	;# 
  6145   000039                     CLKRCON         equ	57	;# 
  6146   00003A                     CLKRCLK         equ	58	;# 
  6147   000040                     NVMCON0         equ	64	;# 
  6148   000041                     NVMCON1         equ	65	;# 
  6149   000042                     NVMLOCK         equ	66	;# 
  6150   000043                     NVMADR          equ	67	;# 
  6151   000043                     NVMADRL         equ	67	;# 
  6152   000044                     NVMADRH         equ	68	;# 
  6153   000045                     NVMADRU         equ	69	;# 
  6154   000046                     NVMDAT          equ	70	;# 
  6155   000046                     NVMDATL         equ	70	;# 
  6156   000047                     NVMDATH         equ	71	;# 
  6157   000048                     VREGCON         equ	72	;# 
  6158   000049                     BORCON          equ	73	;# 
  6159   00004A                     HLVDCON0        equ	74	;# 
  6160   00004B                     HLVDCON1        equ	75	;# 
  6161   00004C                     ZCDCON          equ	76	;# 
  6162   000060                     PMD0            equ	96	;# 
  6163   000061                     PMD1            equ	97	;# 
  6164   000063                     PMD3            equ	99	;# 
  6165   000064                     PMD4            equ	100	;# 
  6166   000065                     PMD5            equ	101	;# 
  6167   000066                     PMD6            equ	102	;# 
  6168   000067                     PMD7            equ	103	;# 
  6169   000068                     PMD8            equ	104	;# 
  6170   00006A                     MD1CON0         equ	106	;# 
  6171   00006B                     MD1CON1         equ	107	;# 
  6172   00006C                     MD1SRC          equ	108	;# 
  6173   00006D                     MD1CARL         equ	109	;# 
  6174   00006E                     MD1CARH         equ	110	;# 
  6175   00006F                     CMOUT           equ	111	;# 
  6176   000070                     CM1CON0         equ	112	;# 
  6177   000071                     CM1CON1         equ	113	;# 
  6178   000072                     CM1NCH          equ	114	;# 
  6179   000073                     CM1PCH          equ	115	;# 
  6180   000074                     CM2CON0         equ	116	;# 
  6181   000075                     CM2CON1         equ	117	;# 
  6182   000076                     CM2NCH          equ	118	;# 
  6183   000077                     CM2PCH          equ	119	;# 
  6184   000078                     WDTCON0         equ	120	;# 
  6185   000079                     WDTCON1         equ	121	;# 
  6186   00007A                     WDTPS           equ	122	;# 
  6187   00007A                     WDTPSL          equ	122	;# 
  6188   00007B                     WDTPSH          equ	123	;# 
  6189   00007C                     WDTTMR          equ	124	;# 
  6190   00007D                     DAC1DAT         equ	125	;# 
  6191   00007D                     DAC1DATL        equ	125	;# 
  6192   00007F                     DAC1CON         equ	127	;# 
  6193   000080                     SPI1RXB         equ	128	;# 
  6194   000081                     SPI1TXB         equ	129	;# 
  6195   000082                     SPI1TCNT        equ	130	;# 
  6196   000082                     SPI1TCNTL       equ	130	;# 
  6197   000083                     SPI1TCNTH       equ	131	;# 
  6198   000084                     SPI1CON0        equ	132	;# 
  6199   000085                     SPI1CON1        equ	133	;# 
  6200   000086                     SPI1CON2        equ	134	;# 
  6201   000087                     SPI1STATUS      equ	135	;# 
  6202   000088                     SPI1TWIDTH      equ	136	;# 
  6203   000089                     SPI1BAUD        equ	137	;# 
  6204   00008A                     SPI1INTF        equ	138	;# 
  6205   00008B                     SPI1INTE        equ	139	;# 
  6206   00008C                     SPI1CLK         equ	140	;# 
  6207   00008D                     SPI2RXB         equ	141	;# 
  6208   00008E                     SPI2TXB         equ	142	;# 
  6209   00008F                     SPI2TCNT        equ	143	;# 
  6210   00008F                     SPI2TCNTL       equ	143	;# 
  6211   000090                     SPI2TCNTH       equ	144	;# 
  6212   000091                     SPI2CON0        equ	145	;# 
  6213   000092                     SPI2CON1        equ	146	;# 
  6214   000093                     SPI2CON2        equ	147	;# 
  6215   000094                     SPI2STATUS      equ	148	;# 
  6216   000095                     SPI2TWIDTH      equ	149	;# 
  6217   000096                     SPI2BAUD        equ	150	;# 
  6218   000097                     SPI2INTF        equ	151	;# 
  6219   000098                     SPI2INTE        equ	152	;# 
  6220   000099                     SPI2CLK         equ	153	;# 
  6221   0000AC                     ACTCON          equ	172	;# 
  6222   0000AD                     OSCCON1         equ	173	;# 
  6223   0000AE                     OSCCON2         equ	174	;# 
  6224   0000AF                     OSCCON3         equ	175	;# 
  6225   0000B0                     OSCTUNE         equ	176	;# 
  6226   0000B1                     OSCFRQ          equ	177	;# 
  6227   0000B1                     OSCFREQ         equ	177	;# 
  6228   0000B2                     OSCSTAT         equ	178	;# 
  6229   0000B2                     OSCSTAT1        equ	178	;# 
  6230   0000B3                     OSCEN           equ	179	;# 
  6231   0000B4                     PRLOCK          equ	180	;# 
  6232   0000B5                     SCANPR          equ	181	;# 
  6233   0000B6                     DMA1PR          equ	182	;# 
  6234   0000B7                     DMA2PR          equ	183	;# 
  6235   0000B8                     DMA3PR          equ	184	;# 
  6236   0000B9                     DMA4PR          equ	185	;# 
  6237   0000BA                     DMA5PR          equ	186	;# 
  6238   0000BB                     DMA6PR          equ	187	;# 
  6239   0000BE                     MAINPR          equ	190	;# 
  6240   0000BF                     ISRPR           equ	191	;# 
  6241   0000D4                     CLCDATA         equ	212	;# 
  6242   0000D5                     CLCSELECT       equ	213	;# 
  6243   0000D6                     CLCnCON         equ	214	;# 
  6244   0000D7                     CLCnPOL         equ	215	;# 
  6245   0000D8                     CLCnSEL0        equ	216	;# 
  6246   0000D9                     CLCnSEL1        equ	217	;# 
  6247   0000DA                     CLCnSEL2        equ	218	;# 
  6248   0000DB                     CLCnSEL3        equ	219	;# 
  6249   0000DC                     CLCnGLS0        equ	220	;# 
  6250   0000DD                     CLCnGLS1        equ	221	;# 
  6251   0000DE                     CLCnGLS2        equ	222	;# 
  6252   0000DF                     CLCnGLS3        equ	223	;# 
  6253   0000E8                     DMASELECT       equ	232	;# 
  6254   0000E9                     DMAnBUF         equ	233	;# 
  6255   0000EA                     DMAnDCNT        equ	234	;# 
  6256   0000EA                     DMAnDCNTL       equ	234	;# 
  6257   0000EB                     DMAnDCNTH       equ	235	;# 
  6258   0000EC                     DMAnDPTR        equ	236	;# 
  6259   0000EC                     DMAnDPTRL       equ	236	;# 
  6260   0000ED                     DMAnDPTRH       equ	237	;# 
  6261   0000EE                     DMAnDSZ         equ	238	;# 
  6262   0000EE                     DMAnDSZL        equ	238	;# 
  6263   0000EF                     DMAnDSZH        equ	239	;# 
  6264   0000F0                     DMAnDSA         equ	240	;# 
  6265   0000F0                     DMAnDSAL        equ	240	;# 
  6266   0000F1                     DMAnDSAH        equ	241	;# 
  6267   0000F2                     DMAnSCNT        equ	242	;# 
  6268   0000F2                     DMAnSCNTL       equ	242	;# 
  6269   0000F3                     DMAnSCNTH       equ	243	;# 
  6270   0000F4                     DMAnSPTR        equ	244	;# 
  6271   0000F4                     DMAnSPTRL       equ	244	;# 
  6272   0000F5                     DMAnSPTRH       equ	245	;# 
  6273   0000F6                     DMAnSPTRU       equ	246	;# 
  6274   0000F7                     DMAnSSZ         equ	247	;# 
  6275   0000F7                     DMAnSSZL        equ	247	;# 
  6276   0000F8                     DMAnSSZH        equ	248	;# 
  6277   0000F9                     DMAnSSA         equ	249	;# 
  6278   0000F9                     DMAnSSAL        equ	249	;# 
  6279   0000FA                     DMAnSSAH        equ	250	;# 
  6280   0000FB                     DMAnSSAU        equ	251	;# 
  6281   0000FC                     DMAnCON0        equ	252	;# 
  6282   0000FD                     DMAnCON1        equ	253	;# 
  6283   0000FE                     DMAnAIRQ        equ	254	;# 
  6284   0000FF                     DMAnSIRQ        equ	255	;# 
  6285   000200                     PPSLOCK         equ	512	;# 
  6286   000201                     RA0PPS          equ	513	;# 
  6287   000202                     RA1PPS          equ	514	;# 
  6288   000203                     RA2PPS          equ	515	;# 
  6289   000204                     RA3PPS          equ	516	;# 
  6290   000205                     RA4PPS          equ	517	;# 
  6291   000206                     RA5PPS          equ	518	;# 
  6292   000207                     RA6PPS          equ	519	;# 
  6293   000208                     RA7PPS          equ	520	;# 
  6294   000209                     RB0PPS          equ	521	;# 
  6295   00020A                     RB1PPS          equ	522	;# 
  6296   00020B                     RB2PPS          equ	523	;# 
  6297   00020C                     RB3PPS          equ	524	;# 
  6298   00020D                     RB4PPS          equ	525	;# 
  6299   00020E                     RB5PPS          equ	526	;# 
  6300   00020F                     RB6PPS          equ	527	;# 
  6301   000210                     RB7PPS          equ	528	;# 
  6302   000211                     RC0PPS          equ	529	;# 
  6303   000212                     RC1PPS          equ	530	;# 
  6304   000213                     RC2PPS          equ	531	;# 
  6305   000214                     RC3PPS          equ	532	;# 
  6306   000215                     RC4PPS          equ	533	;# 
  6307   000216                     RC5PPS          equ	534	;# 
  6308   000217                     RC6PPS          equ	535	;# 
  6309   000218                     RC7PPS          equ	536	;# 
  6310   000219                     RD0PPS          equ	537	;# 
  6311   00021A                     RD1PPS          equ	538	;# 
  6312   00021B                     RD2PPS          equ	539	;# 
  6313   00021C                     RD3PPS          equ	540	;# 
  6314   00021D                     RD4PPS          equ	541	;# 
  6315   00021E                     RD5PPS          equ	542	;# 
  6316   00021F                     RD6PPS          equ	543	;# 
  6317   000220                     RD7PPS          equ	544	;# 
  6318   000221                     RE0PPS          equ	545	;# 
  6319   000222                     RE1PPS          equ	546	;# 
  6320   000223                     RE2PPS          equ	547	;# 
  6321   000229                     RF0PPS          equ	553	;# 
  6322   00022A                     RF1PPS          equ	554	;# 
  6323   00022B                     RF2PPS          equ	555	;# 
  6324   00022C                     RF3PPS          equ	556	;# 
  6325   00022D                     RF4PPS          equ	557	;# 
  6326   00022E                     RF5PPS          equ	558	;# 
  6327   00022F                     RF6PPS          equ	559	;# 
  6328   000230                     RF7PPS          equ	560	;# 
  6329   00023E                     INT0PPS         equ	574	;# 
  6330   00023F                     INT1PPS         equ	575	;# 
  6331   000240                     INT2PPS         equ	576	;# 
  6332   000241                     T0CKIPPS        equ	577	;# 
  6333   000242                     T1CKIPPS        equ	578	;# 
  6334   000243                     T1GPPS          equ	579	;# 
  6335   000244                     T3CKIPPS        equ	580	;# 
  6336   000245                     T3GPPS          equ	581	;# 
  6337   000246                     T5CKIPPS        equ	582	;# 
  6338   000247                     T5GPPS          equ	583	;# 
  6339   000248                     T2INPPS         equ	584	;# 
  6340   000249                     T4INPPS         equ	585	;# 
  6341   00024A                     T6INPPS         equ	586	;# 
  6342   00024F                     CCP1PPS         equ	591	;# 
  6343   000250                     CCP2PPS         equ	592	;# 
  6344   000251                     CCP3PPS         equ	593	;# 
  6345   000253                     PWM1ERSPPS      equ	595	;# 
  6346   000254                     PWM2ERSPPS      equ	596	;# 
  6347   000255                     PWM3ERSPPS      equ	597	;# 
  6348   000257                     PWMIN0PPS       equ	599	;# 
  6349   000258                     PWMIN1PPS       equ	600	;# 
  6350   000259                     SMT1WINPPS      equ	601	;# 
  6351   00025A                     SMT1SIGPPS      equ	602	;# 
  6352   00025B                     CWG1PPS         equ	603	;# 
  6353   00025B                     CWG1INPPS       equ	603	;# 
  6354   00025C                     CWG2PPS         equ	604	;# 
  6355   00025C                     CWG2INPPS       equ	604	;# 
  6356   00025D                     CWG3PPS         equ	605	;# 
  6357   00025D                     CWG3INPPS       equ	605	;# 
  6358   00025E                     MD1CARLPPS      equ	606	;# 
  6359   00025E                     MDCARLPPS       equ	606	;# 
  6360   00025F                     MD1CARHPPS      equ	607	;# 
  6361   00025F                     MDCARHPPS       equ	607	;# 
  6362   000260                     MD1SRCPPS       equ	608	;# 
  6363   000260                     MDSRCPPS        equ	608	;# 
  6364   000261                     CLCIN0PPS       equ	609	;# 
  6365   000262                     CLCIN1PPS       equ	610	;# 
  6366   000263                     CLCIN2PPS       equ	611	;# 
  6367   000264                     CLCIN3PPS       equ	612	;# 
  6368   000265                     CLCIN4PPS       equ	613	;# 
  6369   000266                     CLCIN5PPS       equ	614	;# 
  6370   000267                     CLCIN6PPS       equ	615	;# 
  6371   000268                     CLCIN7PPS       equ	616	;# 
  6372   000269                     ADACTPPS        equ	617	;# 
  6373   00026A                     SPI1SCKPPS      equ	618	;# 
  6374   00026B                     SPI1SDIPPS      equ	619	;# 
  6375   00026C                     SPI1SSPPS       equ	620	;# 
  6376   00026D                     SPI2SCKPPS      equ	621	;# 
  6377   00026E                     SPI2SDIPPS      equ	622	;# 
  6378   00026F                     SPI2SSPPS       equ	623	;# 
  6379   000270                     I2C1SDAPPS      equ	624	;# 
  6380   000271                     I2C1SCLPPS      equ	625	;# 
  6381   000272                     U1RXPPS         equ	626	;# 
  6382   000273                     U1CTSPPS        equ	627	;# 
  6383   000274                     U2RXPPS         equ	628	;# 
  6384   000275                     U2CTSPPS        equ	629	;# 
  6385   000276                     U3RXPPS         equ	630	;# 
  6386   000277                     U3CTSPPS        equ	631	;# 
  6387   000278                     U4RXPPS         equ	632	;# 
  6388   000279                     U4CTSPPS        equ	633	;# 
  6389   00027A                     U5RXPPS         equ	634	;# 
  6390   00027B                     U5CTSPPS        equ	635	;# 
  6391   000286                     RC4I2C          equ	646	;# 
  6392   000287                     RC3I2C          equ	647	;# 
  6393   000288                     RB2I2C          equ	648	;# 
  6394   000289                     RB1I2C          equ	649	;# 
  6395   00028B                     I2C1RXB         equ	651	;# 
  6396   00028C                     I2C1TXB         equ	652	;# 
  6397   00028D                     I2C1CNT         equ	653	;# 
  6398   00028E                     I2C1ADB0        equ	654	;# 
  6399   00028F                     I2C1ADB1        equ	655	;# 
  6400   000290                     I2C1ADR0        equ	656	;# 
  6401   000291                     I2C1ADR1        equ	657	;# 
  6402   000292                     I2C1ADR2        equ	658	;# 
  6403   000293                     I2C1ADR3        equ	659	;# 
  6404   000294                     I2C1CON0        equ	660	;# 
  6405   000295                     I2C1CON1        equ	661	;# 
  6406   000296                     I2C1CON2        equ	662	;# 
  6407   000297                     I2C1ERR         equ	663	;# 
  6408   000298                     I2C1STAT0       equ	664	;# 
  6409   000299                     I2C1STAT1       equ	665	;# 
  6410   00029A                     I2C1PIR         equ	666	;# 
  6411   00029B                     I2C1PIE         equ	667	;# 
  6412   00029C                     I2C1CLK         equ	668	;# 
  6413   00029D                     I2C1BTO         equ	669	;# 
  6414   0002A1                     U1RXB           equ	673	;# 
  6415   0002A1                     U1RXBL          equ	673	;# 
  6416   0002A2                     U1RXCHK         equ	674	;# 
  6417   0002A3                     U1TXB           equ	675	;# 
  6418   0002A3                     U1TXBL          equ	675	;# 
  6419   0002A4                     U1TXCHK         equ	676	;# 
  6420   0002A5                     U1P1            equ	677	;# 
  6421   0002A5                     U1P1L           equ	677	;# 
  6422   0002A6                     U1P1H           equ	678	;# 
  6423   0002A7                     U1P2            equ	679	;# 
  6424   0002A7                     U1P2L           equ	679	;# 
  6425   0002A8                     U1P2H           equ	680	;# 
  6426   0002A9                     U1P3            equ	681	;# 
  6427   0002A9                     U1P3L           equ	681	;# 
  6428   0002AA                     U1P3H           equ	682	;# 
  6429   0002AB                     U1CON0          equ	683	;# 
  6430   0002AC                     U1CON1          equ	684	;# 
  6431   0002AD                     U1CON2          equ	685	;# 
  6432   0002AE                     U1BRG           equ	686	;# 
  6433   0002AE                     U1BRGL          equ	686	;# 
  6434   0002AF                     U1BRGH          equ	687	;# 
  6435   0002B0                     U1FIFO          equ	688	;# 
  6436   0002B1                     U1UIR           equ	689	;# 
  6437   0002B2                     U1ERRIR         equ	690	;# 
  6438   0002B3                     U1ERRIE         equ	691	;# 
  6439   0002B4                     U2RXB           equ	692	;# 
  6440   0002B4                     U2RXBL          equ	692	;# 
  6441   0002B6                     U2TXB           equ	694	;# 
  6442   0002B6                     U2TXBL          equ	694	;# 
  6443   0002B8                     U2P1            equ	696	;# 
  6444   0002B8                     U2P1L           equ	696	;# 
  6445   0002BA                     U2P2            equ	698	;# 
  6446   0002BA                     U2P2L           equ	698	;# 
  6447   0002BC                     U2P3            equ	700	;# 
  6448   0002BC                     U2P3L           equ	700	;# 
  6449   0002BE                     U2CON0          equ	702	;# 
  6450   0002BF                     U2CON1          equ	703	;# 
  6451   0002C0                     U2CON2          equ	704	;# 
  6452   0002C1                     U2BRG           equ	705	;# 
  6453   0002C1                     U2BRGL          equ	705	;# 
  6454   0002C2                     U2BRGH          equ	706	;# 
  6455   0002C3                     U2FIFO          equ	707	;# 
  6456   0002C4                     U2UIR           equ	708	;# 
  6457   0002C5                     U2ERRIR         equ	709	;# 
  6458   0002C6                     U2ERRIE         equ	710	;# 
  6459   0002C7                     U3RXB           equ	711	;# 
  6460   0002C7                     U3RXBL          equ	711	;# 
  6461   0002C9                     U3TXB           equ	713	;# 
  6462   0002C9                     U3TXBL          equ	713	;# 
  6463   0002CB                     U3P1            equ	715	;# 
  6464   0002CB                     U3P1L           equ	715	;# 
  6465   0002CD                     U3P2            equ	717	;# 
  6466   0002CD                     U3P2L           equ	717	;# 
  6467   0002CF                     U3P3            equ	719	;# 
  6468   0002CF                     U3P3L           equ	719	;# 
  6469   0002D1                     U3CON0          equ	721	;# 
  6470   0002D2                     U3CON1          equ	722	;# 
  6471   0002D3                     U3CON2          equ	723	;# 
  6472   0002D4                     U3BRG           equ	724	;# 
  6473   0002D4                     U3BRGL          equ	724	;# 
  6474   0002D5                     U3BRGH          equ	725	;# 
  6475   0002D6                     U3FIFO          equ	726	;# 
  6476   0002D7                     U3UIR           equ	727	;# 
  6477   0002D8                     U3ERRIR         equ	728	;# 
  6478   0002D9                     U3ERRIE         equ	729	;# 
  6479   0002DA                     U4RXB           equ	730	;# 
  6480   0002DA                     U4RXBL          equ	730	;# 
  6481   0002DC                     U4TXB           equ	732	;# 
  6482   0002DC                     U4TXBL          equ	732	;# 
  6483   0002DE                     U4P1            equ	734	;# 
  6484   0002DE                     U4P1L           equ	734	;# 
  6485   0002E0                     U4P2            equ	736	;# 
  6486   0002E0                     U4P2L           equ	736	;# 
  6487   0002E2                     U4P3            equ	738	;# 
  6488   0002E2                     U4P3L           equ	738	;# 
  6489   0002E4                     U4CON0          equ	740	;# 
  6490   0002E5                     U4CON1          equ	741	;# 
  6491   0002E6                     U4CON2          equ	742	;# 
  6492   0002E7                     U4BRG           equ	743	;# 
  6493   0002E7                     U4BRGL          equ	743	;# 
  6494   0002E8                     U4BRGH          equ	744	;# 
  6495   0002E9                     U4FIFO          equ	745	;# 
  6496   0002EA                     U4UIR           equ	746	;# 
  6497   0002EB                     U4ERRIR         equ	747	;# 
  6498   0002EC                     U4ERRIE         equ	748	;# 
  6499   0002ED                     U5RXB           equ	749	;# 
  6500   0002ED                     U5RXBL          equ	749	;# 
  6501   0002EF                     U5TXB           equ	751	;# 
  6502   0002EF                     U5TXBL          equ	751	;# 
  6503   0002F1                     U5P1            equ	753	;# 
  6504   0002F1                     U5P1L           equ	753	;# 
  6505   0002F3                     U5P2            equ	755	;# 
  6506   0002F3                     U5P2L           equ	755	;# 
  6507   0002F5                     U5P3            equ	757	;# 
  6508   0002F5                     U5P3L           equ	757	;# 
  6509   0002F7                     U5CON0          equ	759	;# 
  6510   0002F8                     U5CON1          equ	760	;# 
  6511   0002F9                     U5CON2          equ	761	;# 
  6512   0002FA                     U5BRG           equ	762	;# 
  6513   0002FA                     U5BRGL          equ	762	;# 
  6514   0002FB                     U5BRGH          equ	763	;# 
  6515   0002FC                     U5FIFO          equ	764	;# 
  6516   0002FD                     U5UIR           equ	765	;# 
  6517   0002FE                     U5ERRIR         equ	766	;# 
  6518   0002FF                     U5ERRIE         equ	767	;# 
  6519   000300                     SMT1TMR         equ	768	;# 
  6520   000300                     SMT1TMRL        equ	768	;# 
  6521   000301                     SMT1TMRH        equ	769	;# 
  6522   000302                     SMT1TMRU        equ	770	;# 
  6523   000303                     SMT1CPR         equ	771	;# 
  6524   000303                     SMT1CPRL        equ	771	;# 
  6525   000304                     SMT1CPRH        equ	772	;# 
  6526   000305                     SMT1CPRU        equ	773	;# 
  6527   000306                     SMT1CPW         equ	774	;# 
  6528   000306                     SMT1CPWL        equ	774	;# 
  6529   000307                     SMT1CPWH        equ	775	;# 
  6530   000308                     SMT1CPWU        equ	776	;# 
  6531   000309                     SMT1PR          equ	777	;# 
  6532   000309                     SMT1PRL         equ	777	;# 
  6533   00030A                     SMT1PRH         equ	778	;# 
  6534   00030B                     SMT1PRU         equ	779	;# 
  6535   00030C                     SMT1CON0        equ	780	;# 
  6536   00030D                     SMT1CON1        equ	781	;# 
  6537   00030E                     SMT1STAT        equ	782	;# 
  6538   00030F                     SMT1CLK         equ	783	;# 
  6539   000310                     SMT1SIG         equ	784	;# 
  6540   000311                     SMT1WIN         equ	785	;# 
  6541   000318                     TMR0L           equ	792	;# 
  6542   000318                     TMR0            equ	792	;# 
  6543   000319                     TMR0H           equ	793	;# 
  6544   000319                     PR0             equ	793	;# 
  6545   00031A                     T0CON0          equ	794	;# 
  6546   00031B                     T0CON1          equ	795	;# 
  6547   00031C                     TMR1            equ	796	;# 
  6548   00031C                     TMR1L           equ	796	;# 
  6549   00031D                     TMR1H           equ	797	;# 
  6550   00031E                     T1CON           equ	798	;# 
  6551   00031E                     TMR1CON         equ	798	;# 
  6552   00031F                     T1GCON          equ	799	;# 
  6553   00031F                     TMR1GCON        equ	799	;# 
  6554   000320                     T1GATE          equ	800	;# 
  6555   000320                     TMR1GATE        equ	800	;# 
  6556   000321                     T1CLK           equ	801	;# 
  6557   000321                     TMR1CLK         equ	801	;# 
  6558   000321                     PR1             equ	801	;# 
  6559   000322                     T2TMR           equ	802	;# 
  6560   000322                     TMR2            equ	802	;# 
  6561   000323                     T2PR            equ	803	;# 
  6562   000323                     PR2             equ	803	;# 
  6563   000324                     T2CON           equ	804	;# 
  6564   000325                     T2HLT           equ	805	;# 
  6565   000326                     T2CLKCON        equ	806	;# 
  6566   000326                     T2CLK           equ	806	;# 
  6567   000327                     T2RST           equ	807	;# 
  6568   000328                     TMR3            equ	808	;# 
  6569   000328                     TMR3L           equ	808	;# 
  6570   000329                     TMR3H           equ	809	;# 
  6571   00032A                     T3CON           equ	810	;# 
  6572   00032A                     TMR3CON         equ	810	;# 
  6573   00032B                     T3GCON          equ	811	;# 
  6574   00032B                     TMR3GCON        equ	811	;# 
  6575   00032C                     T3GATE          equ	812	;# 
  6576   00032C                     TMR3GATE        equ	812	;# 
  6577   00032D                     T3CLK           equ	813	;# 
  6578   00032D                     TMR3CLK         equ	813	;# 
  6579   00032D                     PR3             equ	813	;# 
  6580   00032E                     T4TMR           equ	814	;# 
  6581   00032E                     TMR4            equ	814	;# 
  6582   00032F                     T4PR            equ	815	;# 
  6583   00032F                     PR4             equ	815	;# 
  6584   000330                     T4CON           equ	816	;# 
  6585   000331                     T4HLT           equ	817	;# 
  6586   000332                     T4CLKCON        equ	818	;# 
  6587   000332                     T4CLK           equ	818	;# 
  6588   000333                     T4RST           equ	819	;# 
  6589   000334                     TMR5            equ	820	;# 
  6590   000334                     TMR5L           equ	820	;# 
  6591   000335                     TMR5H           equ	821	;# 
  6592   000336                     T5CON           equ	822	;# 
  6593   000336                     TMR5CON         equ	822	;# 
  6594   000337                     T5GCON          equ	823	;# 
  6595   000337                     TMR5GCON        equ	823	;# 
  6596   000338                     T5GATE          equ	824	;# 
  6597   000338                     TMR5GATE        equ	824	;# 
  6598   000339                     T5CLK           equ	825	;# 
  6599   000339                     TMR5CLK         equ	825	;# 
  6600   000339                     PR5             equ	825	;# 
  6601   00033A                     T6TMR           equ	826	;# 
  6602   00033A                     TMR6            equ	826	;# 
  6603   00033B                     T6PR            equ	827	;# 
  6604   00033B                     PR6             equ	827	;# 
  6605   00033C                     T6CON           equ	828	;# 
  6606   00033D                     T6HLT           equ	829	;# 
  6607   00033E                     T6CLKCON        equ	830	;# 
  6608   00033E                     T6CLK           equ	830	;# 
  6609   00033F                     T6RST           equ	831	;# 
  6610   000340                     CCPR1           equ	832	;# 
  6611   000340                     CCPR1L          equ	832	;# 
  6612   000341                     CCPR1H          equ	833	;# 
  6613   000342                     CCP1CON         equ	834	;# 
  6614   000343                     CCP1CAP         equ	835	;# 
  6615   000344                     CCPR2           equ	836	;# 
  6616   000344                     CCPR2L          equ	836	;# 
  6617   000345                     CCPR2H          equ	837	;# 
  6618   000346                     CCP2CON         equ	838	;# 
  6619   000347                     CCP2CAP         equ	839	;# 
  6620   000348                     CCPR3           equ	840	;# 
  6621   000348                     CCPR3L          equ	840	;# 
  6622   000349                     CCPR3H          equ	841	;# 
  6623   00034A                     CCP3CON         equ	842	;# 
  6624   00034B                     CCP3CAP         equ	843	;# 
  6625   00034C                     CCPTMRS0        equ	844	;# 
  6626   00034F                     CRCDATA         equ	847	;# 
  6627   00034F                     CRCDATL         equ	847	;# 
  6628   000350                     CRCDATH         equ	848	;# 
  6629   000351                     CRCACC          equ	849	;# 
  6630   000351                     CRCACCL         equ	849	;# 
  6631   000352                     CRCACCH         equ	850	;# 
  6632   000353                     CRCSHFT         equ	851	;# 
  6633   000353                     CRCSHIFTL       equ	851	;# 
  6634   000354                     CRCSHIFTH       equ	852	;# 
  6635   000355                     CRCXOR          equ	853	;# 
  6636   000355                     CRCXORL         equ	853	;# 
  6637   000356                     CRCXORH         equ	854	;# 
  6638   000357                     CRCCON0         equ	855	;# 
  6639   000358                     CRCCON1         equ	856	;# 
  6640   00035A                     SCANLADR        equ	858	;# 
  6641   00035A                     SCANLADRL       equ	858	;# 
  6642   00035B                     SCANLADRH       equ	859	;# 
  6643   00035C                     SCANLADRU       equ	860	;# 
  6644   00035D                     SCANHADR        equ	861	;# 
  6645   00035D                     SCANHADRL       equ	861	;# 
  6646   00035E                     SCANHADRH       equ	862	;# 
  6647   00035F                     SCANHADRU       equ	863	;# 
  6648   000360                     SCANCON0        equ	864	;# 
  6649   000361                     SCANTRIG        equ	865	;# 
  6650   000362                     IPR0            equ	866	;# 
  6651   000363                     IPR1            equ	867	;# 
  6652   000364                     IPR2            equ	868	;# 
  6653   000365                     IPR3            equ	869	;# 
  6654   000366                     IPR4            equ	870	;# 
  6655   000367                     IPR5            equ	871	;# 
  6656   000368                     IPR6            equ	872	;# 
  6657   000369                     IPR7            equ	873	;# 
  6658   00036A                     IPR8            equ	874	;# 
  6659   00036B                     IPR9            equ	875	;# 
  6660   00036C                     IPR10           equ	876	;# 
  6661   00036D                     IPR11           equ	877	;# 
  6662   00036E                     IPR12           equ	878	;# 
  6663   00036F                     IPR13           equ	879	;# 
  6664   000370                     IPR14           equ	880	;# 
  6665   000371                     IPR15           equ	881	;# 
  6666   000373                     STATUS_CSHAD    equ	883	;# 
  6667   000374                     WREG_CSHAD      equ	884	;# 
  6668   000375                     BSR_CSHAD       equ	885	;# 
  6669   000376                     SHADCON         equ	886	;# 
  6670   000377                     STATUS_SHAD     equ	887	;# 
  6671   000378                     WREG_SHAD       equ	888	;# 
  6672   000379                     BSR_SHAD        equ	889	;# 
  6673   00037A                     PCLATH_SHAD     equ	890	;# 
  6674   00037B                     PCLATU_SHAD     equ	891	;# 
  6675   00037C                     FSR0SH          equ	892	;# 
  6676   00037C                     FSR0L_SHAD      equ	892	;# 
  6677   00037D                     FSR0H_SHAD      equ	893	;# 
  6678   00037E                     FSR1SH          equ	894	;# 
  6679   00037E                     FSR1L_SHAD      equ	894	;# 
  6680   00037F                     FSR1H_SHAD      equ	895	;# 
  6681   000380                     FSR2SH          equ	896	;# 
  6682   000380                     FSR2L_SHAD      equ	896	;# 
  6683   000381                     FSR2H_SHAD      equ	897	;# 
  6684   000382                     PRODSH          equ	898	;# 
  6685   000382                     PRODL_SHAD      equ	898	;# 
  6686   000383                     PRODH_SHAD      equ	899	;# 
  6687   0003BC                     CWG1CLK         equ	956	;# 
  6688   0003BC                     CWG1CLKCON      equ	956	;# 
  6689   0003BD                     CWG1ISM         equ	957	;# 
  6690   0003BD                     CWG1DAT         equ	957	;# 
  6691   0003BE                     CWG1DBR         equ	958	;# 
  6692   0003BF                     CWG1DBF         equ	959	;# 
  6693   0003C0                     CWG1CON0        equ	960	;# 
  6694   0003C1                     CWG1CON1        equ	961	;# 
  6695   0003C2                     CWG1AS0         equ	962	;# 
  6696   0003C3                     CWG1AS1         equ	963	;# 
  6697   0003C4                     CWG1STR         equ	964	;# 
  6698   0003C5                     CWG2CLK         equ	965	;# 
  6699   0003C5                     CWG2CLKCON      equ	965	;# 
  6700   0003C6                     CWG2ISM         equ	966	;# 
  6701   0003C6                     CWG2DAT         equ	966	;# 
  6702   0003C7                     CWG2DBR         equ	967	;# 
  6703   0003C8                     CWG2DBF         equ	968	;# 
  6704   0003C9                     CWG2CON0        equ	969	;# 
  6705   0003CA                     CWG2CON1        equ	970	;# 
  6706   0003CB                     CWG2AS0         equ	971	;# 
  6707   0003CC                     CWG2AS1         equ	972	;# 
  6708   0003CD                     CWG2STR         equ	973	;# 
  6709   0003CE                     CWG3CLK         equ	974	;# 
  6710   0003CE                     CWG3CLKCON      equ	974	;# 
  6711   0003CF                     CWG3ISM         equ	975	;# 
  6712   0003CF                     CWG3DAT         equ	975	;# 
  6713   0003D0                     CWG3DBR         equ	976	;# 
  6714   0003D1                     CWG3DBF         equ	977	;# 
  6715   0003D2                     CWG3CON0        equ	978	;# 
  6716   0003D3                     CWG3CON1        equ	979	;# 
  6717   0003D4                     CWG3AS0         equ	980	;# 
  6718   0003D5                     CWG3AS1         equ	981	;# 
  6719   0003D6                     CWG3STR         equ	982	;# 
  6720   0003D7                     FVRCON          equ	983	;# 
  6721   0003D8                     ADCPCON         equ	984	;# 
  6722   0003D8                     ADCP            equ	984	;# 
  6723   0003D9                     ADLTH           equ	985	;# 
  6724   0003D9                     ADLTHL          equ	985	;# 
  6725   0003DA                     ADLTHH          equ	986	;# 
  6726   0003DB                     ADUTH           equ	987	;# 
  6727   0003DB                     ADUTHL          equ	987	;# 
  6728   0003DC                     ADUTHH          equ	988	;# 
  6729   0003DD                     ADERR           equ	989	;# 
  6730   0003DD                     ADERRL          equ	989	;# 
  6731   0003DE                     ADERRH          equ	990	;# 
  6732   0003DF                     ADSTPT          equ	991	;# 
  6733   0003DF                     ADSTPTL         equ	991	;# 
  6734   0003E0                     ADSTPTH         equ	992	;# 
  6735   0003E1                     ADFLTR          equ	993	;# 
  6736   0003E1                     ADFLTRL         equ	993	;# 
  6737   0003E2                     ADFLTRH         equ	994	;# 
  6738   0003E3                     ADACC           equ	995	;# 
  6739   0003E3                     ADACCL          equ	995	;# 
  6740   0003E4                     ADACCH          equ	996	;# 
  6741   0003E5                     ADACCU          equ	997	;# 
  6742   0003E6                     ADCNT           equ	998	;# 
  6743   0003E7                     ADRPT           equ	999	;# 
  6744   0003E8                     ADPREV          equ	1000	;# 
  6745   0003E8                     ADPREVL         equ	1000	;# 
  6746   0003E9                     ADPREVH         equ	1001	;# 
  6747   0003EA                     ADRES           equ	1002	;# 
  6748   0003EA                     ADRESL          equ	1002	;# 
  6749   0003EB                     ADRESH          equ	1003	;# 
  6750   0003EC                     ADPCH           equ	1004	;# 
  6751   0003EE                     ADACQ           equ	1006	;# 
  6752   0003EE                     ADACQL          equ	1006	;# 
  6753   0003EF                     ADACQH          equ	1007	;# 
  6754   0003F0                     ADCAP           equ	1008	;# 
  6755   0003F1                     ADPRE           equ	1009	;# 
  6756   0003F1                     ADPREL          equ	1009	;# 
  6757   0003F2                     ADPREH          equ	1010	;# 
  6758   0003F3                     ADCON0          equ	1011	;# 
  6759   0003F4                     ADCON1          equ	1012	;# 
  6760   0003F5                     ADCON2          equ	1013	;# 
  6761   0003F6                     ADCON3          equ	1014	;# 
  6762   0003F7                     ADSTAT          equ	1015	;# 
  6763   0003F8                     ADREF           equ	1016	;# 
  6764   0003F9                     ADACT           equ	1017	;# 
  6765   0003FA                     ADCLK           equ	1018	;# 
  6766   000400                     ANSELA          equ	1024	;# 
  6767   000401                     WPUA            equ	1025	;# 
  6768   000402                     ODCONA          equ	1026	;# 
  6769   000403                     SLRCONA         equ	1027	;# 
  6770   000404                     INLVLA          equ	1028	;# 
  6771   000405                     IOCAP           equ	1029	;# 
  6772   000406                     IOCAN           equ	1030	;# 
  6773   000407                     IOCAF           equ	1031	;# 
  6774   000408                     ANSELB          equ	1032	;# 
  6775   000409                     WPUB            equ	1033	;# 
  6776   00040A                     ODCONB          equ	1034	;# 
  6777   00040B                     SLRCONB         equ	1035	;# 
  6778   00040C                     INLVLB          equ	1036	;# 
  6779   00040D                     IOCBP           equ	1037	;# 
  6780   00040E                     IOCBN           equ	1038	;# 
  6781   00040F                     IOCBF           equ	1039	;# 
  6782   000410                     ANSELC          equ	1040	;# 
  6783   000411                     WPUC            equ	1041	;# 
  6784   000412                     ODCONC          equ	1042	;# 
  6785   000413                     SLRCONC         equ	1043	;# 
  6786   000414                     INLVLC          equ	1044	;# 
  6787   000415                     IOCCP           equ	1045	;# 
  6788   000416                     IOCCN           equ	1046	;# 
  6789   000417                     IOCCF           equ	1047	;# 
  6790   000418                     ANSELD          equ	1048	;# 
  6791   000419                     WPUD            equ	1049	;# 
  6792   00041A                     ODCOND          equ	1050	;# 
  6793   00041B                     SLRCOND         equ	1051	;# 
  6794   00041C                     INLVLD          equ	1052	;# 
  6795   000420                     ANSELE          equ	1056	;# 
  6796   000421                     WPUE            equ	1057	;# 
  6797   000422                     ODCONE          equ	1058	;# 
  6798   000423                     SLRCONE         equ	1059	;# 
  6799   000424                     INLVLE          equ	1060	;# 
  6800   000425                     IOCEP           equ	1061	;# 
  6801   000426                     IOCEN           equ	1062	;# 
  6802   000427                     IOCEF           equ	1063	;# 
  6803   000428                     ANSELF          equ	1064	;# 
  6804   000429                     WPUF            equ	1065	;# 
  6805   00042A                     ODCONF          equ	1066	;# 
  6806   00042B                     SLRCONF         equ	1067	;# 
  6807   00042C                     INLVLF          equ	1068	;# 
  6808   000440                     NCO1ACC         equ	1088	;# 
  6809   000440                     NCO1ACCL        equ	1088	;# 
  6810   000441                     NCO1ACCH        equ	1089	;# 
  6811   000442                     NCO1ACCU        equ	1090	;# 
  6812   000443                     NCO1INC         equ	1091	;# 
  6813   000443                     NCO1INCL        equ	1091	;# 
  6814   000444                     NCO1INCH        equ	1092	;# 
  6815   000445                     NCO1INCU        equ	1093	;# 
  6816   000446                     NCO1CON         equ	1094	;# 
  6817   000447                     NCO1CLK         equ	1095	;# 
  6818   000448                     NCO2ACC         equ	1096	;# 
  6819   000448                     NCO2ACCL        equ	1096	;# 
  6820   000449                     NCO2ACCH        equ	1097	;# 
  6821   00044A                     NCO2ACCU        equ	1098	;# 
  6822   00044B                     NCO2INC         equ	1099	;# 
  6823   00044B                     NCO2INCL        equ	1099	;# 
  6824   00044C                     NCO2INCH        equ	1100	;# 
  6825   00044D                     NCO2INCU        equ	1101	;# 
  6826   00044E                     NCO2CON         equ	1102	;# 
  6827   00044F                     NCO2CLK         equ	1103	;# 
  6828   000450                     NCO3ACC         equ	1104	;# 
  6829   000450                     NCO3ACCL        equ	1104	;# 
  6830   000451                     NCO3ACCH        equ	1105	;# 
  6831   000452                     NCO3ACCU        equ	1106	;# 
  6832   000453                     NCO3INC         equ	1107	;# 
  6833   000453                     NCO3INCL        equ	1107	;# 
  6834   000454                     NCO3INCH        equ	1108	;# 
  6835   000455                     NCO3INCU        equ	1109	;# 
  6836   000456                     NCO3CON         equ	1110	;# 
  6837   000457                     NCO3CLK         equ	1111	;# 
  6838   000459                     IVTLOCK         equ	1113	;# 
  6839   00045A                     IVTAD           equ	1114	;# 
  6840   00045A                     IVTADL          equ	1114	;# 
  6841   00045B                     IVTADH          equ	1115	;# 
  6842   00045C                     IVTADU          equ	1116	;# 
  6843   00045D                     IVTBASE         equ	1117	;# 
  6844   00045D                     IVTBASEL        equ	1117	;# 
  6845   00045E                     IVTBASEH        equ	1118	;# 
  6846   00045F                     IVTBASEU        equ	1119	;# 
  6847   000460                     PWM1ERS         equ	1120	;# 
  6848   000461                     PWM1CLK         equ	1121	;# 
  6849   000462                     PWM1LDS         equ	1122	;# 
  6850   000463                     PWM1PR          equ	1123	;# 
  6851   000463                     PWM1PRL         equ	1123	;# 
  6852   000464                     PWM1PRH         equ	1124	;# 
  6853   000465                     PWM1CPRE        equ	1125	;# 
  6854   000466                     PWM1PIPOS       equ	1126	;# 
  6855   000467                     PWM1GIR         equ	1127	;# 
  6856   000468                     PWM1GIE         equ	1128	;# 
  6857   000469                     PWM1CON         equ	1129	;# 
  6858   00046A                     PWM1S1CFG       equ	1130	;# 
  6859   00046B                     PWM1S1P1        equ	1131	;# 
  6860   00046B                     PWM1S1P1L       equ	1131	;# 
  6861   00046C                     PWM1S1P1H       equ	1132	;# 
  6862   00046D                     PWM1S1P2        equ	1133	;# 
  6863   00046D                     PWM1S1P2L       equ	1133	;# 
  6864   00046E                     PWM1S1P2H       equ	1134	;# 
  6865   00046F                     PWM2ERS         equ	1135	;# 
  6866   000470                     PWM2CLK         equ	1136	;# 
  6867   000471                     PWM2LDS         equ	1137	;# 
  6868   000472                     PWM2PR          equ	1138	;# 
  6869   000472                     PWM2PRL         equ	1138	;# 
  6870   000473                     PWM2PRH         equ	1139	;# 
  6871   000474                     PWM2CPRE        equ	1140	;# 
  6872   000475                     PWM2PIPOS       equ	1141	;# 
  6873   000476                     PWM2GIR         equ	1142	;# 
  6874   000477                     PWM2GIE         equ	1143	;# 
  6875   000478                     PWM2CON         equ	1144	;# 
  6876   000479                     PWM2S1CFG       equ	1145	;# 
  6877   00047A                     PWM2S1P1        equ	1146	;# 
  6878   00047A                     PWM2S1P1L       equ	1146	;# 
  6879   00047B                     PWM2S1P1H       equ	1147	;# 
  6880   00047C                     PWM2S1P2        equ	1148	;# 
  6881   00047C                     PWM2S1P2L       equ	1148	;# 
  6882   00047D                     PWM2S1P2H       equ	1149	;# 
  6883   00047E                     PWM3ERS         equ	1150	;# 
  6884   00047F                     PWM3CLK         equ	1151	;# 
  6885   000480                     PWM3LDS         equ	1152	;# 
  6886   000481                     PWM3PR          equ	1153	;# 
  6887   000481                     PWM3PRL         equ	1153	;# 
  6888   000482                     PWM3PRH         equ	1154	;# 
  6889   000483                     PWM3CPRE        equ	1155	;# 
  6890   000484                     PWM3PIPOS       equ	1156	;# 
  6891   000485                     PWM3GIR         equ	1157	;# 
  6892   000486                     PWM3GIE         equ	1158	;# 
  6893   000487                     PWM3CON         equ	1159	;# 
  6894   000488                     PWM3S1CFG       equ	1160	;# 
  6895   000489                     PWM3S1P1        equ	1161	;# 
  6896   000489                     PWM3S1P1L       equ	1161	;# 
  6897   00048A                     PWM3S1P1H       equ	1162	;# 
  6898   00048B                     PWM3S1P2        equ	1163	;# 
  6899   00048B                     PWM3S1P2L       equ	1163	;# 
  6900   00048C                     PWM3S1P2H       equ	1164	;# 
  6901   00049C                     PWMLOAD         equ	1180	;# 
  6902   00049D                     PWMEN           equ	1181	;# 
  6903   00049E                     PIE0            equ	1182	;# 
  6904   00049F                     PIE1            equ	1183	;# 
  6905   0004A0                     PIE2            equ	1184	;# 
  6906   0004A1                     PIE3            equ	1185	;# 
  6907   0004A2                     PIE4            equ	1186	;# 
  6908   0004A3                     PIE5            equ	1187	;# 
  6909   0004A4                     PIE6            equ	1188	;# 
  6910   0004A5                     PIE7            equ	1189	;# 
  6911   0004A6                     PIE8            equ	1190	;# 
  6912   0004A7                     PIE9            equ	1191	;# 
  6913   0004A8                     PIE10           equ	1192	;# 
  6914   0004A9                     PIE11           equ	1193	;# 
  6915   0004AA                     PIE12           equ	1194	;# 
  6916   0004AB                     PIE13           equ	1195	;# 
  6917   0004AC                     PIE14           equ	1196	;# 
  6918   0004AD                     PIE15           equ	1197	;# 
  6919   0004AE                     PIR0            equ	1198	;# 
  6920   0004AF                     PIR1            equ	1199	;# 
  6921   0004B0                     PIR2            equ	1200	;# 
  6922   0004B1                     PIR3            equ	1201	;# 
  6923   0004B2                     PIR4            equ	1202	;# 
  6924   0004B3                     PIR5            equ	1203	;# 
  6925   0004B4                     PIR6            equ	1204	;# 
  6926   0004B5                     PIR7            equ	1205	;# 
  6927   0004B6                     PIR8            equ	1206	;# 
  6928   0004B7                     PIR9            equ	1207	;# 
  6929   0004B8                     PIR10           equ	1208	;# 
  6930   0004B9                     PIR11           equ	1209	;# 
  6931   0004BA                     PIR12           equ	1210	;# 
  6932   0004BB                     PIR13           equ	1211	;# 
  6933   0004BC                     PIR14           equ	1212	;# 
  6934   0004BD                     PIR15           equ	1213	;# 
  6935   0004BE                     LATA            equ	1214	;# 
  6936   0004BF                     LATB            equ	1215	;# 
  6937   0004C0                     LATC            equ	1216	;# 
  6938   0004C1                     LATD            equ	1217	;# 
  6939   0004C2                     LATE            equ	1218	;# 
  6940   0004C3                     LATF            equ	1219	;# 
  6941   0004C6                     TRISA           equ	1222	;# 
  6942   0004C7                     TRISB           equ	1223	;# 
  6943   0004C8                     TRISC           equ	1224	;# 
  6944   0004C9                     TRISD           equ	1225	;# 
  6945   0004CA                     TRISE           equ	1226	;# 
  6946   0004CB                     TRISF           equ	1227	;# 
  6947   0004CE                     PORTA           equ	1230	;# 
  6948   0004CF                     PORTB           equ	1231	;# 
  6949   0004D0                     PORTC           equ	1232	;# 
  6950   0004D1                     PORTD           equ	1233	;# 
  6951   0004D2                     PORTE           equ	1234	;# 
  6952   0004D3                     PORTF           equ	1235	;# 
  6953   0004D6                     INTCON0         equ	1238	;# 
  6954   0004D7                     INTCON1         equ	1239	;# 
  6955   0004D8                     STATUS          equ	1240	;# 
  6956   0004D9                     FSR2            equ	1241	;# 
  6957   0004D9                     FSR2L           equ	1241	;# 
  6958   0004DA                     FSR2H           equ	1242	;# 
  6959   0004DB                     PLUSW2          equ	1243	;# 
  6960   0004DC                     PREINC2         equ	1244	;# 
  6961   0004DD                     POSTDEC2        equ	1245	;# 
  6962   0004DE                     POSTINC2        equ	1246	;# 
  6963   0004DF                     INDF2           equ	1247	;# 
  6964   0004E0                     BSR             equ	1248	;# 
  6965   0004E1                     FSR1            equ	1249	;# 
  6966   0004E1                     FSR1L           equ	1249	;# 
  6967   0004E2                     FSR1H           equ	1250	;# 
  6968   0004E3                     PLUSW1          equ	1251	;# 
  6969   0004E4                     PREINC1         equ	1252	;# 
  6970   0004E5                     POSTDEC1        equ	1253	;# 
  6971   0004E6                     POSTINC1        equ	1254	;# 
  6972   0004E7                     INDF1           equ	1255	;# 
  6973   0004E8                     WREG            equ	1256	;# 
  6974   0004E9                     FSR0            equ	1257	;# 
  6975   0004E9                     FSR0L           equ	1257	;# 
  6976   0004EA                     FSR0H           equ	1258	;# 
  6977   0004EB                     PLUSW0          equ	1259	;# 
  6978   0004EC                     PREINC0         equ	1260	;# 
  6979   0004ED                     POSTDEC0        equ	1261	;# 
  6980   0004EE                     POSTINC0        equ	1262	;# 
  6981   0004EF                     INDF0           equ	1263	;# 
  6982   0004F0                     PCON0           equ	1264	;# 
  6983   0004F1                     PCON1           equ	1265	;# 
  6984   0004F2                     CPUDOZE         equ	1266	;# 
  6985   0004F3                     PROD            equ	1267	;# 
  6986   0004F3                     PRODL           equ	1267	;# 
  6987   0004F4                     PRODH           equ	1268	;# 
  6988   0004F5                     TABLAT          equ	1269	;# 
  6989   0004F6                     TBLPTR          equ	1270	;# 
  6990   0004F6                     TBLPTRL         equ	1270	;# 
  6991   0004F7                     TBLPTRH         equ	1271	;# 
  6992   0004F8                     TBLPTRU         equ	1272	;# 
  6993   0004F9                     PCLAT           equ	1273	;# 
  6994   0004F9                     PCL             equ	1273	;# 
  6995   0004FA                     PCLATH          equ	1274	;# 
  6996   0004FB                     PCLATU          equ	1275	;# 
  6997   0004FC                     STKPTR          equ	1276	;# 
  6998   0004FD                     TOS             equ	1277	;# 
  6999   0004FD                     TOSL            equ	1277	;# 
  7000   0004FE                     TOSH            equ	1278	;# 
  7001   0004FF                     TOSU            equ	1279	;# 
  7002   000039                     CLKRCON         equ	57	;# 
  7003   00003A                     CLKRCLK         equ	58	;# 
  7004   000040                     NVMCON0         equ	64	;# 
  7005   000041                     NVMCON1         equ	65	;# 
  7006   000042                     NVMLOCK         equ	66	;# 
  7007   000043                     NVMADR          equ	67	;# 
  7008   000043                     NVMADRL         equ	67	;# 
  7009   000044                     NVMADRH         equ	68	;# 
  7010   000045                     NVMADRU         equ	69	;# 
  7011   000046                     NVMDAT          equ	70	;# 
  7012   000046                     NVMDATL         equ	70	;# 
  7013   000047                     NVMDATH         equ	71	;# 
  7014   000048                     VREGCON         equ	72	;# 
  7015   000049                     BORCON          equ	73	;# 
  7016   00004A                     HLVDCON0        equ	74	;# 
  7017   00004B                     HLVDCON1        equ	75	;# 
  7018   00004C                     ZCDCON          equ	76	;# 
  7019   000060                     PMD0            equ	96	;# 
  7020   000061                     PMD1            equ	97	;# 
  7021   000063                     PMD3            equ	99	;# 
  7022   000064                     PMD4            equ	100	;# 
  7023   000065                     PMD5            equ	101	;# 
  7024   000066                     PMD6            equ	102	;# 
  7025   000067                     PMD7            equ	103	;# 
  7026   000068                     PMD8            equ	104	;# 
  7027   00006A                     MD1CON0         equ	106	;# 
  7028   00006B                     MD1CON1         equ	107	;# 
  7029   00006C                     MD1SRC          equ	108	;# 
  7030   00006D                     MD1CARL         equ	109	;# 
  7031   00006E                     MD1CARH         equ	110	;# 
  7032   00006F                     CMOUT           equ	111	;# 
  7033   000070                     CM1CON0         equ	112	;# 
  7034   000071                     CM1CON1         equ	113	;# 
  7035   000072                     CM1NCH          equ	114	;# 
  7036   000073                     CM1PCH          equ	115	;# 
  7037   000074                     CM2CON0         equ	116	;# 
  7038   000075                     CM2CON1         equ	117	;# 
  7039   000076                     CM2NCH          equ	118	;# 
  7040   000077                     CM2PCH          equ	119	;# 
  7041   000078                     WDTCON0         equ	120	;# 
  7042   000079                     WDTCON1         equ	121	;# 
  7043   00007A                     WDTPS           equ	122	;# 
  7044   00007A                     WDTPSL          equ	122	;# 
  7045   00007B                     WDTPSH          equ	123	;# 
  7046   00007C                     WDTTMR          equ	124	;# 
  7047   00007D                     DAC1DAT         equ	125	;# 
  7048   00007D                     DAC1DATL        equ	125	;# 
  7049   00007F                     DAC1CON         equ	127	;# 
  7050   000080                     SPI1RXB         equ	128	;# 
  7051   000081                     SPI1TXB         equ	129	;# 
  7052   000082                     SPI1TCNT        equ	130	;# 
  7053   000082                     SPI1TCNTL       equ	130	;# 
  7054   000083                     SPI1TCNTH       equ	131	;# 
  7055   000084                     SPI1CON0        equ	132	;# 
  7056   000085                     SPI1CON1        equ	133	;# 
  7057   000086                     SPI1CON2        equ	134	;# 
  7058   000087                     SPI1STATUS      equ	135	;# 
  7059   000088                     SPI1TWIDTH      equ	136	;# 
  7060   000089                     SPI1BAUD        equ	137	;# 
  7061   00008A                     SPI1INTF        equ	138	;# 
  7062   00008B                     SPI1INTE        equ	139	;# 
  7063   00008C                     SPI1CLK         equ	140	;# 
  7064   00008D                     SPI2RXB         equ	141	;# 
  7065   00008E                     SPI2TXB         equ	142	;# 
  7066   00008F                     SPI2TCNT        equ	143	;# 
  7067   00008F                     SPI2TCNTL       equ	143	;# 
  7068   000090                     SPI2TCNTH       equ	144	;# 
  7069   000091                     SPI2CON0        equ	145	;# 
  7070   000092                     SPI2CON1        equ	146	;# 
  7071   000093                     SPI2CON2        equ	147	;# 
  7072   000094                     SPI2STATUS      equ	148	;# 
  7073   000095                     SPI2TWIDTH      equ	149	;# 
  7074   000096                     SPI2BAUD        equ	150	;# 
  7075   000097                     SPI2INTF        equ	151	;# 
  7076   000098                     SPI2INTE        equ	152	;# 
  7077   000099                     SPI2CLK         equ	153	;# 
  7078   0000AC                     ACTCON          equ	172	;# 
  7079   0000AD                     OSCCON1         equ	173	;# 
  7080   0000AE                     OSCCON2         equ	174	;# 
  7081   0000AF                     OSCCON3         equ	175	;# 
  7082   0000B0                     OSCTUNE         equ	176	;# 
  7083   0000B1                     OSCFRQ          equ	177	;# 
  7084   0000B1                     OSCFREQ         equ	177	;# 
  7085   0000B2                     OSCSTAT         equ	178	;# 
  7086   0000B2                     OSCSTAT1        equ	178	;# 
  7087   0000B3                     OSCEN           equ	179	;# 
  7088   0000B4                     PRLOCK          equ	180	;# 
  7089   0000B5                     SCANPR          equ	181	;# 
  7090   0000B6                     DMA1PR          equ	182	;# 
  7091   0000B7                     DMA2PR          equ	183	;# 
  7092   0000B8                     DMA3PR          equ	184	;# 
  7093   0000B9                     DMA4PR          equ	185	;# 
  7094   0000BA                     DMA5PR          equ	186	;# 
  7095   0000BB                     DMA6PR          equ	187	;# 
  7096   0000BE                     MAINPR          equ	190	;# 
  7097   0000BF                     ISRPR           equ	191	;# 
  7098   0000D4                     CLCDATA         equ	212	;# 
  7099   0000D5                     CLCSELECT       equ	213	;# 
  7100   0000D6                     CLCnCON         equ	214	;# 
  7101   0000D7                     CLCnPOL         equ	215	;# 
  7102   0000D8                     CLCnSEL0        equ	216	;# 
  7103   0000D9                     CLCnSEL1        equ	217	;# 
  7104   0000DA                     CLCnSEL2        equ	218	;# 
  7105   0000DB                     CLCnSEL3        equ	219	;# 
  7106   0000DC                     CLCnGLS0        equ	220	;# 
  7107   0000DD                     CLCnGLS1        equ	221	;# 
  7108   0000DE                     CLCnGLS2        equ	222	;# 
  7109   0000DF                     CLCnGLS3        equ	223	;# 
  7110   0000E8                     DMASELECT       equ	232	;# 
  7111   0000E9                     DMAnBUF         equ	233	;# 
  7112   0000EA                     DMAnDCNT        equ	234	;# 
  7113   0000EA                     DMAnDCNTL       equ	234	;# 
  7114   0000EB                     DMAnDCNTH       equ	235	;# 
  7115   0000EC                     DMAnDPTR        equ	236	;# 
  7116   0000EC                     DMAnDPTRL       equ	236	;# 
  7117   0000ED                     DMAnDPTRH       equ	237	;# 
  7118   0000EE                     DMAnDSZ         equ	238	;# 
  7119   0000EE                     DMAnDSZL        equ	238	;# 
  7120   0000EF                     DMAnDSZH        equ	239	;# 
  7121   0000F0                     DMAnDSA         equ	240	;# 
  7122   0000F0                     DMAnDSAL        equ	240	;# 
  7123   0000F1                     DMAnDSAH        equ	241	;# 
  7124   0000F2                     DMAnSCNT        equ	242	;# 
  7125   0000F2                     DMAnSCNTL       equ	242	;# 
  7126   0000F3                     DMAnSCNTH       equ	243	;# 
  7127   0000F4                     DMAnSPTR        equ	244	;# 
  7128   0000F4                     DMAnSPTRL       equ	244	;# 
  7129   0000F5                     DMAnSPTRH       equ	245	;# 
  7130   0000F6                     DMAnSPTRU       equ	246	;# 
  7131   0000F7                     DMAnSSZ         equ	247	;# 
  7132   0000F7                     DMAnSSZL        equ	247	;# 
  7133   0000F8                     DMAnSSZH        equ	248	;# 
  7134   0000F9                     DMAnSSA         equ	249	;# 
  7135   0000F9                     DMAnSSAL        equ	249	;# 
  7136   0000FA                     DMAnSSAH        equ	250	;# 
  7137   0000FB                     DMAnSSAU        equ	251	;# 
  7138   0000FC                     DMAnCON0        equ	252	;# 
  7139   0000FD                     DMAnCON1        equ	253	;# 
  7140   0000FE                     DMAnAIRQ        equ	254	;# 
  7141   0000FF                     DMAnSIRQ        equ	255	;# 
  7142   000200                     PPSLOCK         equ	512	;# 
  7143   000201                     RA0PPS          equ	513	;# 
  7144   000202                     RA1PPS          equ	514	;# 
  7145   000203                     RA2PPS          equ	515	;# 
  7146   000204                     RA3PPS          equ	516	;# 
  7147   000205                     RA4PPS          equ	517	;# 
  7148   000206                     RA5PPS          equ	518	;# 
  7149   000207                     RA6PPS          equ	519	;# 
  7150   000208                     RA7PPS          equ	520	;# 
  7151   000209                     RB0PPS          equ	521	;# 
  7152   00020A                     RB1PPS          equ	522	;# 
  7153   00020B                     RB2PPS          equ	523	;# 
  7154   00020C                     RB3PPS          equ	524	;# 
  7155   00020D                     RB4PPS          equ	525	;# 
  7156   00020E                     RB5PPS          equ	526	;# 
  7157   00020F                     RB6PPS          equ	527	;# 
  7158   000210                     RB7PPS          equ	528	;# 
  7159   000211                     RC0PPS          equ	529	;# 
  7160   000212                     RC1PPS          equ	530	;# 
  7161   000213                     RC2PPS          equ	531	;# 
  7162   000214                     RC3PPS          equ	532	;# 
  7163   000215                     RC4PPS          equ	533	;# 
  7164   000216                     RC5PPS          equ	534	;# 
  7165   000217                     RC6PPS          equ	535	;# 
  7166   000218                     RC7PPS          equ	536	;# 
  7167   000219                     RD0PPS          equ	537	;# 
  7168   00021A                     RD1PPS          equ	538	;# 
  7169   00021B                     RD2PPS          equ	539	;# 
  7170   00021C                     RD3PPS          equ	540	;# 
  7171   00021D                     RD4PPS          equ	541	;# 
  7172   00021E                     RD5PPS          equ	542	;# 
  7173   00021F                     RD6PPS          equ	543	;# 
  7174   000220                     RD7PPS          equ	544	;# 
  7175   000221                     RE0PPS          equ	545	;# 
  7176   000222                     RE1PPS          equ	546	;# 
  7177   000223                     RE2PPS          equ	547	;# 
  7178   000229                     RF0PPS          equ	553	;# 
  7179   00022A                     RF1PPS          equ	554	;# 
  7180   00022B                     RF2PPS          equ	555	;# 
  7181   00022C                     RF3PPS          equ	556	;# 
  7182   00022D                     RF4PPS          equ	557	;# 
  7183   00022E                     RF5PPS          equ	558	;# 
  7184   00022F                     RF6PPS          equ	559	;# 
  7185   000230                     RF7PPS          equ	560	;# 
  7186   00023E                     INT0PPS         equ	574	;# 
  7187   00023F                     INT1PPS         equ	575	;# 
  7188   000240                     INT2PPS         equ	576	;# 
  7189   000241                     T0CKIPPS        equ	577	;# 
  7190   000242                     T1CKIPPS        equ	578	;# 
  7191   000243                     T1GPPS          equ	579	;# 
  7192   000244                     T3CKIPPS        equ	580	;# 
  7193   000245                     T3GPPS          equ	581	;# 
  7194   000246                     T5CKIPPS        equ	582	;# 
  7195   000247                     T5GPPS          equ	583	;# 
  7196   000248                     T2INPPS         equ	584	;# 
  7197   000249                     T4INPPS         equ	585	;# 
  7198   00024A                     T6INPPS         equ	586	;# 
  7199   00024F                     CCP1PPS         equ	591	;# 
  7200   000250                     CCP2PPS         equ	592	;# 
  7201   000251                     CCP3PPS         equ	593	;# 
  7202   000253                     PWM1ERSPPS      equ	595	;# 
  7203   000254                     PWM2ERSPPS      equ	596	;# 
  7204   000255                     PWM3ERSPPS      equ	597	;# 
  7205   000257                     PWMIN0PPS       equ	599	;# 
  7206   000258                     PWMIN1PPS       equ	600	;# 
  7207   000259                     SMT1WINPPS      equ	601	;# 
  7208   00025A                     SMT1SIGPPS      equ	602	;# 
  7209   00025B                     CWG1PPS         equ	603	;# 
  7210   00025B                     CWG1INPPS       equ	603	;# 
  7211   00025C                     CWG2PPS         equ	604	;# 
  7212   00025C                     CWG2INPPS       equ	604	;# 
  7213   00025D                     CWG3PPS         equ	605	;# 
  7214   00025D                     CWG3INPPS       equ	605	;# 
  7215   00025E                     MD1CARLPPS      equ	606	;# 
  7216   00025E                     MDCARLPPS       equ	606	;# 
  7217   00025F                     MD1CARHPPS      equ	607	;# 
  7218   00025F                     MDCARHPPS       equ	607	;# 
  7219   000260                     MD1SRCPPS       equ	608	;# 
  7220   000260                     MDSRCPPS        equ	608	;# 
  7221   000261                     CLCIN0PPS       equ	609	;# 
  7222   000262                     CLCIN1PPS       equ	610	;# 
  7223   000263                     CLCIN2PPS       equ	611	;# 
  7224   000264                     CLCIN3PPS       equ	612	;# 
  7225   000265                     CLCIN4PPS       equ	613	;# 
  7226   000266                     CLCIN5PPS       equ	614	;# 
  7227   000267                     CLCIN6PPS       equ	615	;# 
  7228   000268                     CLCIN7PPS       equ	616	;# 
  7229   000269                     ADACTPPS        equ	617	;# 
  7230   00026A                     SPI1SCKPPS      equ	618	;# 
  7231   00026B                     SPI1SDIPPS      equ	619	;# 
  7232   00026C                     SPI1SSPPS       equ	620	;# 
  7233   00026D                     SPI2SCKPPS      equ	621	;# 
  7234   00026E                     SPI2SDIPPS      equ	622	;# 
  7235   00026F                     SPI2SSPPS       equ	623	;# 
  7236   000270                     I2C1SDAPPS      equ	624	;# 
  7237   000271                     I2C1SCLPPS      equ	625	;# 
  7238   000272                     U1RXPPS         equ	626	;# 
  7239   000273                     U1CTSPPS        equ	627	;# 
  7240   000274                     U2RXPPS         equ	628	;# 
  7241   000275                     U2CTSPPS        equ	629	;# 
  7242   000276                     U3RXPPS         equ	630	;# 
  7243   000277                     U3CTSPPS        equ	631	;# 
  7244   000278                     U4RXPPS         equ	632	;# 
  7245   000279                     U4CTSPPS        equ	633	;# 
  7246   00027A                     U5RXPPS         equ	634	;# 
  7247   00027B                     U5CTSPPS        equ	635	;# 
  7248   000286                     RC4I2C          equ	646	;# 
  7249   000287                     RC3I2C          equ	647	;# 
  7250   000288                     RB2I2C          equ	648	;# 
  7251   000289                     RB1I2C          equ	649	;# 
  7252   00028B                     I2C1RXB         equ	651	;# 
  7253   00028C                     I2C1TXB         equ	652	;# 
  7254   00028D                     I2C1CNT         equ	653	;# 
  7255   00028E                     I2C1ADB0        equ	654	;# 
  7256   00028F                     I2C1ADB1        equ	655	;# 
  7257   000290                     I2C1ADR0        equ	656	;# 
  7258   000291                     I2C1ADR1        equ	657	;# 
  7259   000292                     I2C1ADR2        equ	658	;# 
  7260   000293                     I2C1ADR3        equ	659	;# 
  7261   000294                     I2C1CON0        equ	660	;# 
  7262   000295                     I2C1CON1        equ	661	;# 
  7263   000296                     I2C1CON2        equ	662	;# 
  7264   000297                     I2C1ERR         equ	663	;# 
  7265   000298                     I2C1STAT0       equ	664	;# 
  7266   000299                     I2C1STAT1       equ	665	;# 
  7267   00029A                     I2C1PIR         equ	666	;# 
  7268   00029B                     I2C1PIE         equ	667	;# 
  7269   00029C                     I2C1CLK         equ	668	;# 
  7270   00029D                     I2C1BTO         equ	669	;# 
  7271   0002A1                     U1RXB           equ	673	;# 
  7272   0002A1                     U1RXBL          equ	673	;# 
  7273   0002A2                     U1RXCHK         equ	674	;# 
  7274   0002A3                     U1TXB           equ	675	;# 
  7275   0002A3                     U1TXBL          equ	675	;# 
  7276   0002A4                     U1TXCHK         equ	676	;# 
  7277   0002A5                     U1P1            equ	677	;# 
  7278   0002A5                     U1P1L           equ	677	;# 
  7279   0002A6                     U1P1H           equ	678	;# 
  7280   0002A7                     U1P2            equ	679	;# 
  7281   0002A7                     U1P2L           equ	679	;# 
  7282   0002A8                     U1P2H           equ	680	;# 
  7283   0002A9                     U1P3            equ	681	;# 
  7284   0002A9                     U1P3L           equ	681	;# 
  7285   0002AA                     U1P3H           equ	682	;# 
  7286   0002AB                     U1CON0          equ	683	;# 
  7287   0002AC                     U1CON1          equ	684	;# 
  7288   0002AD                     U1CON2          equ	685	;# 
  7289   0002AE                     U1BRG           equ	686	;# 
  7290   0002AE                     U1BRGL          equ	686	;# 
  7291   0002AF                     U1BRGH          equ	687	;# 
  7292   0002B0                     U1FIFO          equ	688	;# 
  7293   0002B1                     U1UIR           equ	689	;# 
  7294   0002B2                     U1ERRIR         equ	690	;# 
  7295   0002B3                     U1ERRIE         equ	691	;# 
  7296   0002B4                     U2RXB           equ	692	;# 
  7297   0002B4                     U2RXBL          equ	692	;# 
  7298   0002B6                     U2TXB           equ	694	;# 
  7299   0002B6                     U2TXBL          equ	694	;# 
  7300   0002B8                     U2P1            equ	696	;# 
  7301   0002B8                     U2P1L           equ	696	;# 
  7302   0002BA                     U2P2            equ	698	;# 
  7303   0002BA                     U2P2L           equ	698	;# 
  7304   0002BC                     U2P3            equ	700	;# 
  7305   0002BC                     U2P3L           equ	700	;# 
  7306   0002BE                     U2CON0          equ	702	;# 
  7307   0002BF                     U2CON1          equ	703	;# 
  7308   0002C0                     U2CON2          equ	704	;# 
  7309   0002C1                     U2BRG           equ	705	;# 
  7310   0002C1                     U2BRGL          equ	705	;# 
  7311   0002C2                     U2BRGH          equ	706	;# 
  7312   0002C3                     U2FIFO          equ	707	;# 
  7313   0002C4                     U2UIR           equ	708	;# 
  7314   0002C5                     U2ERRIR         equ	709	;# 
  7315   0002C6                     U2ERRIE         equ	710	;# 
  7316   0002C7                     U3RXB           equ	711	;# 
  7317   0002C7                     U3RXBL          equ	711	;# 
  7318   0002C9                     U3TXB           equ	713	;# 
  7319   0002C9                     U3TXBL          equ	713	;# 
  7320   0002CB                     U3P1            equ	715	;# 
  7321   0002CB                     U3P1L           equ	715	;# 
  7322   0002CD                     U3P2            equ	717	;# 
  7323   0002CD                     U3P2L           equ	717	;# 
  7324   0002CF                     U3P3            equ	719	;# 
  7325   0002CF                     U3P3L           equ	719	;# 
  7326   0002D1                     U3CON0          equ	721	;# 
  7327   0002D2                     U3CON1          equ	722	;# 
  7328   0002D3                     U3CON2          equ	723	;# 
  7329   0002D4                     U3BRG           equ	724	;# 
  7330   0002D4                     U3BRGL          equ	724	;# 
  7331   0002D5                     U3BRGH          equ	725	;# 
  7332   0002D6                     U3FIFO          equ	726	;# 
  7333   0002D7                     U3UIR           equ	727	;# 
  7334   0002D8                     U3ERRIR         equ	728	;# 
  7335   0002D9                     U3ERRIE         equ	729	;# 
  7336   0002DA                     U4RXB           equ	730	;# 
  7337   0002DA                     U4RXBL          equ	730	;# 
  7338   0002DC                     U4TXB           equ	732	;# 
  7339   0002DC                     U4TXBL          equ	732	;# 
  7340   0002DE                     U4P1            equ	734	;# 
  7341   0002DE                     U4P1L           equ	734	;# 
  7342   0002E0                     U4P2            equ	736	;# 
  7343   0002E0                     U4P2L           equ	736	;# 
  7344   0002E2                     U4P3            equ	738	;# 
  7345   0002E2                     U4P3L           equ	738	;# 
  7346   0002E4                     U4CON0          equ	740	;# 
  7347   0002E5                     U4CON1          equ	741	;# 
  7348   0002E6                     U4CON2          equ	742	;# 
  7349   0002E7                     U4BRG           equ	743	;# 
  7350   0002E7                     U4BRGL          equ	743	;# 
  7351   0002E8                     U4BRGH          equ	744	;# 
  7352   0002E9                     U4FIFO          equ	745	;# 
  7353   0002EA                     U4UIR           equ	746	;# 
  7354   0002EB                     U4ERRIR         equ	747	;# 
  7355   0002EC                     U4ERRIE         equ	748	;# 
  7356   0002ED                     U5RXB           equ	749	;# 
  7357   0002ED                     U5RXBL          equ	749	;# 
  7358   0002EF                     U5TXB           equ	751	;# 
  7359   0002EF                     U5TXBL          equ	751	;# 
  7360   0002F1                     U5P1            equ	753	;# 
  7361   0002F1                     U5P1L           equ	753	;# 
  7362   0002F3                     U5P2            equ	755	;# 
  7363   0002F3                     U5P2L           equ	755	;# 
  7364   0002F5                     U5P3            equ	757	;# 
  7365   0002F5                     U5P3L           equ	757	;# 
  7366   0002F7                     U5CON0          equ	759	;# 
  7367   0002F8                     U5CON1          equ	760	;# 
  7368   0002F9                     U5CON2          equ	761	;# 
  7369   0002FA                     U5BRG           equ	762	;# 
  7370   0002FA                     U5BRGL          equ	762	;# 
  7371   0002FB                     U5BRGH          equ	763	;# 
  7372   0002FC                     U5FIFO          equ	764	;# 
  7373   0002FD                     U5UIR           equ	765	;# 
  7374   0002FE                     U5ERRIR         equ	766	;# 
  7375   0002FF                     U5ERRIE         equ	767	;# 
  7376   000300                     SMT1TMR         equ	768	;# 
  7377   000300                     SMT1TMRL        equ	768	;# 
  7378   000301                     SMT1TMRH        equ	769	;# 
  7379   000302                     SMT1TMRU        equ	770	;# 
  7380   000303                     SMT1CPR         equ	771	;# 
  7381   000303                     SMT1CPRL        equ	771	;# 
  7382   000304                     SMT1CPRH        equ	772	;# 
  7383   000305                     SMT1CPRU        equ	773	;# 
  7384   000306                     SMT1CPW         equ	774	;# 
  7385   000306                     SMT1CPWL        equ	774	;# 
  7386   000307                     SMT1CPWH        equ	775	;# 
  7387   000308                     SMT1CPWU        equ	776	;# 
  7388   000309                     SMT1PR          equ	777	;# 
  7389   000309                     SMT1PRL         equ	777	;# 
  7390   00030A                     SMT1PRH         equ	778	;# 
  7391   00030B                     SMT1PRU         equ	779	;# 
  7392   00030C                     SMT1CON0        equ	780	;# 
  7393   00030D                     SMT1CON1        equ	781	;# 
  7394   00030E                     SMT1STAT        equ	782	;# 
  7395   00030F                     SMT1CLK         equ	783	;# 
  7396   000310                     SMT1SIG         equ	784	;# 
  7397   000311                     SMT1WIN         equ	785	;# 
  7398   000318                     TMR0L           equ	792	;# 
  7399   000318                     TMR0            equ	792	;# 
  7400   000319                     TMR0H           equ	793	;# 
  7401   000319                     PR0             equ	793	;# 
  7402   00031A                     T0CON0          equ	794	;# 
  7403   00031B                     T0CON1          equ	795	;# 
  7404   00031C                     TMR1            equ	796	;# 
  7405   00031C                     TMR1L           equ	796	;# 
  7406   00031D                     TMR1H           equ	797	;# 
  7407   00031E                     T1CON           equ	798	;# 
  7408   00031E                     TMR1CON         equ	798	;# 
  7409   00031F                     T1GCON          equ	799	;# 
  7410   00031F                     TMR1GCON        equ	799	;# 
  7411   000320                     T1GATE          equ	800	;# 
  7412   000320                     TMR1GATE        equ	800	;# 
  7413   000321                     T1CLK           equ	801	;# 
  7414   000321                     TMR1CLK         equ	801	;# 
  7415   000321                     PR1             equ	801	;# 
  7416   000322                     T2TMR           equ	802	;# 
  7417   000322                     TMR2            equ	802	;# 
  7418   000323                     T2PR            equ	803	;# 
  7419   000323                     PR2             equ	803	;# 
  7420   000324                     T2CON           equ	804	;# 
  7421   000325                     T2HLT           equ	805	;# 
  7422   000326                     T2CLKCON        equ	806	;# 
  7423   000326                     T2CLK           equ	806	;# 
  7424   000327                     T2RST           equ	807	;# 
  7425   000328                     TMR3            equ	808	;# 
  7426   000328                     TMR3L           equ	808	;# 
  7427   000329                     TMR3H           equ	809	;# 
  7428   00032A                     T3CON           equ	810	;# 
  7429   00032A                     TMR3CON         equ	810	;# 
  7430   00032B                     T3GCON          equ	811	;# 
  7431   00032B                     TMR3GCON        equ	811	;# 
  7432   00032C                     T3GATE          equ	812	;# 
  7433   00032C                     TMR3GATE        equ	812	;# 
  7434   00032D                     T3CLK           equ	813	;# 
  7435   00032D                     TMR3CLK         equ	813	;# 
  7436   00032D                     PR3             equ	813	;# 
  7437   00032E                     T4TMR           equ	814	;# 
  7438   00032E                     TMR4            equ	814	;# 
  7439   00032F                     T4PR            equ	815	;# 
  7440   00032F                     PR4             equ	815	;# 
  7441   000330                     T4CON           equ	816	;# 
  7442   000331                     T4HLT           equ	817	;# 
  7443   000332                     T4CLKCON        equ	818	;# 
  7444   000332                     T4CLK           equ	818	;# 
  7445   000333                     T4RST           equ	819	;# 
  7446   000334                     TMR5            equ	820	;# 
  7447   000334                     TMR5L           equ	820	;# 
  7448   000335                     TMR5H           equ	821	;# 
  7449   000336                     T5CON           equ	822	;# 
  7450   000336                     TMR5CON         equ	822	;# 
  7451   000337                     T5GCON          equ	823	;# 
  7452   000337                     TMR5GCON        equ	823	;# 
  7453   000338                     T5GATE          equ	824	;# 
  7454   000338                     TMR5GATE        equ	824	;# 
  7455   000339                     T5CLK           equ	825	;# 
  7456   000339                     TMR5CLK         equ	825	;# 
  7457   000339                     PR5             equ	825	;# 
  7458   00033A                     T6TMR           equ	826	;# 
  7459   00033A                     TMR6            equ	826	;# 
  7460   00033B                     T6PR            equ	827	;# 
  7461   00033B                     PR6             equ	827	;# 
  7462   00033C                     T6CON           equ	828	;# 
  7463   00033D                     T6HLT           equ	829	;# 
  7464   00033E                     T6CLKCON        equ	830	;# 
  7465   00033E                     T6CLK           equ	830	;# 
  7466   00033F                     T6RST           equ	831	;# 
  7467   000340                     CCPR1           equ	832	;# 
  7468   000340                     CCPR1L          equ	832	;# 
  7469   000341                     CCPR1H          equ	833	;# 
  7470   000342                     CCP1CON         equ	834	;# 
  7471   000343                     CCP1CAP         equ	835	;# 
  7472   000344                     CCPR2           equ	836	;# 
  7473   000344                     CCPR2L          equ	836	;# 
  7474   000345                     CCPR2H          equ	837	;# 
  7475   000346                     CCP2CON         equ	838	;# 
  7476   000347                     CCP2CAP         equ	839	;# 
  7477   000348                     CCPR3           equ	840	;# 
  7478   000348                     CCPR3L          equ	840	;# 
  7479   000349                     CCPR3H          equ	841	;# 
  7480   00034A                     CCP3CON         equ	842	;# 
  7481   00034B                     CCP3CAP         equ	843	;# 
  7482   00034C                     CCPTMRS0        equ	844	;# 
  7483   00034F                     CRCDATA         equ	847	;# 
  7484   00034F                     CRCDATL         equ	847	;# 
  7485   000350                     CRCDATH         equ	848	;# 
  7486   000351                     CRCACC          equ	849	;# 
  7487   000351                     CRCACCL         equ	849	;# 
  7488   000352                     CRCACCH         equ	850	;# 
  7489   000353                     CRCSHFT         equ	851	;# 
  7490   000353                     CRCSHIFTL       equ	851	;# 
  7491   000354                     CRCSHIFTH       equ	852	;# 
  7492   000355                     CRCXOR          equ	853	;# 
  7493   000355                     CRCXORL         equ	853	;# 
  7494   000356                     CRCXORH         equ	854	;# 
  7495   000357                     CRCCON0         equ	855	;# 
  7496   000358                     CRCCON1         equ	856	;# 
  7497   00035A                     SCANLADR        equ	858	;# 
  7498   00035A                     SCANLADRL       equ	858	;# 
  7499   00035B                     SCANLADRH       equ	859	;# 
  7500   00035C                     SCANLADRU       equ	860	;# 
  7501   00035D                     SCANHADR        equ	861	;# 
  7502   00035D                     SCANHADRL       equ	861	;# 
  7503   00035E                     SCANHADRH       equ	862	;# 
  7504   00035F                     SCANHADRU       equ	863	;# 
  7505   000360                     SCANCON0        equ	864	;# 
  7506   000361                     SCANTRIG        equ	865	;# 
  7507   000362                     IPR0            equ	866	;# 
  7508   000363                     IPR1            equ	867	;# 
  7509   000364                     IPR2            equ	868	;# 
  7510   000365                     IPR3            equ	869	;# 
  7511   000366                     IPR4            equ	870	;# 
  7512   000367                     IPR5            equ	871	;# 
  7513   000368                     IPR6            equ	872	;# 
  7514   000369                     IPR7            equ	873	;# 
  7515   00036A                     IPR8            equ	874	;# 
  7516   00036B                     IPR9            equ	875	;# 
  7517   00036C                     IPR10           equ	876	;# 
  7518   00036D                     IPR11           equ	877	;# 
  7519   00036E                     IPR12           equ	878	;# 
  7520   00036F                     IPR13           equ	879	;# 
  7521   000370                     IPR14           equ	880	;# 
  7522   000371                     IPR15           equ	881	;# 
  7523   000373                     STATUS_CSHAD    equ	883	;# 
  7524   000374                     WREG_CSHAD      equ	884	;# 
  7525   000375                     BSR_CSHAD       equ	885	;# 
  7526   000376                     SHADCON         equ	886	;# 
  7527   000377                     STATUS_SHAD     equ	887	;# 
  7528   000378                     WREG_SHAD       equ	888	;# 
  7529   000379                     BSR_SHAD        equ	889	;# 
  7530   00037A                     PCLATH_SHAD     equ	890	;# 
  7531   00037B                     PCLATU_SHAD     equ	891	;# 
  7532   00037C                     FSR0SH          equ	892	;# 
  7533   00037C                     FSR0L_SHAD      equ	892	;# 
  7534   00037D                     FSR0H_SHAD      equ	893	;# 
  7535   00037E                     FSR1SH          equ	894	;# 
  7536   00037E                     FSR1L_SHAD      equ	894	;# 
  7537   00037F                     FSR1H_SHAD      equ	895	;# 
  7538   000380                     FSR2SH          equ	896	;# 
  7539   000380                     FSR2L_SHAD      equ	896	;# 
  7540   000381                     FSR2H_SHAD      equ	897	;# 
  7541   000382                     PRODSH          equ	898	;# 
  7542   000382                     PRODL_SHAD      equ	898	;# 
  7543   000383                     PRODH_SHAD      equ	899	;# 
  7544   0003BC                     CWG1CLK         equ	956	;# 
  7545   0003BC                     CWG1CLKCON      equ	956	;# 
  7546   0003BD                     CWG1ISM         equ	957	;# 
  7547   0003BD                     CWG1DAT         equ	957	;# 
  7548   0003BE                     CWG1DBR         equ	958	;# 
  7549   0003BF                     CWG1DBF         equ	959	;# 
  7550   0003C0                     CWG1CON0        equ	960	;# 
  7551   0003C1                     CWG1CON1        equ	961	;# 
  7552   0003C2                     CWG1AS0         equ	962	;# 
  7553   0003C3                     CWG1AS1         equ	963	;# 
  7554   0003C4                     CWG1STR         equ	964	;# 
  7555   0003C5                     CWG2CLK         equ	965	;# 
  7556   0003C5                     CWG2CLKCON      equ	965	;# 
  7557   0003C6                     CWG2ISM         equ	966	;# 
  7558   0003C6                     CWG2DAT         equ	966	;# 
  7559   0003C7                     CWG2DBR         equ	967	;# 
  7560   0003C8                     CWG2DBF         equ	968	;# 
  7561   0003C9                     CWG2CON0        equ	969	;# 
  7562   0003CA                     CWG2CON1        equ	970	;# 
  7563   0003CB                     CWG2AS0         equ	971	;# 
  7564   0003CC                     CWG2AS1         equ	972	;# 
  7565   0003CD                     CWG2STR         equ	973	;# 
  7566   0003CE                     CWG3CLK         equ	974	;# 
  7567   0003CE                     CWG3CLKCON      equ	974	;# 
  7568   0003CF                     CWG3ISM         equ	975	;# 
  7569   0003CF                     CWG3DAT         equ	975	;# 
  7570   0003D0                     CWG3DBR         equ	976	;# 
  7571   0003D1                     CWG3DBF         equ	977	;# 
  7572   0003D2                     CWG3CON0        equ	978	;# 
  7573   0003D3                     CWG3CON1        equ	979	;# 
  7574   0003D4                     CWG3AS0         equ	980	;# 
  7575   0003D5                     CWG3AS1         equ	981	;# 
  7576   0003D6                     CWG3STR         equ	982	;# 
  7577   0003D7                     FVRCON          equ	983	;# 
  7578   0003D8                     ADCPCON         equ	984	;# 
  7579   0003D8                     ADCP            equ	984	;# 
  7580   0003D9                     ADLTH           equ	985	;# 
  7581   0003D9                     ADLTHL          equ	985	;# 
  7582   0003DA                     ADLTHH          equ	986	;# 
  7583   0003DB                     ADUTH           equ	987	;# 
  7584   0003DB                     ADUTHL          equ	987	;# 
  7585   0003DC                     ADUTHH          equ	988	;# 
  7586   0003DD                     ADERR           equ	989	;# 
  7587   0003DD                     ADERRL          equ	989	;# 
  7588   0003DE                     ADERRH          equ	990	;# 
  7589   0003DF                     ADSTPT          equ	991	;# 
  7590   0003DF                     ADSTPTL         equ	991	;# 
  7591   0003E0                     ADSTPTH         equ	992	;# 
  7592   0003E1                     ADFLTR          equ	993	;# 
  7593   0003E1                     ADFLTRL         equ	993	;# 
  7594   0003E2                     ADFLTRH         equ	994	;# 
  7595   0003E3                     ADACC           equ	995	;# 
  7596   0003E3                     ADACCL          equ	995	;# 
  7597   0003E4                     ADACCH          equ	996	;# 
  7598   0003E5                     ADACCU          equ	997	;# 
  7599   0003E6                     ADCNT           equ	998	;# 
  7600   0003E7                     ADRPT           equ	999	;# 
  7601   0003E8                     ADPREV          equ	1000	;# 
  7602   0003E8                     ADPREVL         equ	1000	;# 
  7603   0003E9                     ADPREVH         equ	1001	;# 
  7604   0003EA                     ADRES           equ	1002	;# 
  7605   0003EA                     ADRESL          equ	1002	;# 
  7606   0003EB                     ADRESH          equ	1003	;# 
  7607   0003EC                     ADPCH           equ	1004	;# 
  7608   0003EE                     ADACQ           equ	1006	;# 
  7609   0003EE                     ADACQL          equ	1006	;# 
  7610   0003EF                     ADACQH          equ	1007	;# 
  7611   0003F0                     ADCAP           equ	1008	;# 
  7612   0003F1                     ADPRE           equ	1009	;# 
  7613   0003F1                     ADPREL          equ	1009	;# 
  7614   0003F2                     ADPREH          equ	1010	;# 
  7615   0003F3                     ADCON0          equ	1011	;# 
  7616   0003F4                     ADCON1          equ	1012	;# 
  7617   0003F5                     ADCON2          equ	1013	;# 
  7618   0003F6                     ADCON3          equ	1014	;# 
  7619   0003F7                     ADSTAT          equ	1015	;# 
  7620   0003F8                     ADREF           equ	1016	;# 
  7621   0003F9                     ADACT           equ	1017	;# 
  7622   0003FA                     ADCLK           equ	1018	;# 
  7623   000400                     ANSELA          equ	1024	;# 
  7624   000401                     WPUA            equ	1025	;# 
  7625   000402                     ODCONA          equ	1026	;# 
  7626   000403                     SLRCONA         equ	1027	;# 
  7627   000404                     INLVLA          equ	1028	;# 
  7628   000405                     IOCAP           equ	1029	;# 
  7629   000406                     IOCAN           equ	1030	;# 
  7630   000407                     IOCAF           equ	1031	;# 
  7631   000408                     ANSELB          equ	1032	;# 
  7632   000409                     WPUB            equ	1033	;# 
  7633   00040A                     ODCONB          equ	1034	;# 
  7634   00040B                     SLRCONB         equ	1035	;# 
  7635   00040C                     INLVLB          equ	1036	;# 
  7636   00040D                     IOCBP           equ	1037	;# 
  7637   00040E                     IOCBN           equ	1038	;# 
  7638   00040F                     IOCBF           equ	1039	;# 
  7639   000410                     ANSELC          equ	1040	;# 
  7640   000411                     WPUC            equ	1041	;# 
  7641   000412                     ODCONC          equ	1042	;# 
  7642   000413                     SLRCONC         equ	1043	;# 
  7643   000414                     INLVLC          equ	1044	;# 
  7644   000415                     IOCCP           equ	1045	;# 
  7645   000416                     IOCCN           equ	1046	;# 
  7646   000417                     IOCCF           equ	1047	;# 
  7647   000418                     ANSELD          equ	1048	;# 
  7648   000419                     WPUD            equ	1049	;# 
  7649   00041A                     ODCOND          equ	1050	;# 
  7650   00041B                     SLRCOND         equ	1051	;# 
  7651   00041C                     INLVLD          equ	1052	;# 
  7652   000420                     ANSELE          equ	1056	;# 
  7653   000421                     WPUE            equ	1057	;# 
  7654   000422                     ODCONE          equ	1058	;# 
  7655   000423                     SLRCONE         equ	1059	;# 
  7656   000424                     INLVLE          equ	1060	;# 
  7657   000425                     IOCEP           equ	1061	;# 
  7658   000426                     IOCEN           equ	1062	;# 
  7659   000427                     IOCEF           equ	1063	;# 
  7660   000428                     ANSELF          equ	1064	;# 
  7661   000429                     WPUF            equ	1065	;# 
  7662   00042A                     ODCONF          equ	1066	;# 
  7663   00042B                     SLRCONF         equ	1067	;# 
  7664   00042C                     INLVLF          equ	1068	;# 
  7665   000440                     NCO1ACC         equ	1088	;# 
  7666   000440                     NCO1ACCL        equ	1088	;# 
  7667   000441                     NCO1ACCH        equ	1089	;# 
  7668   000442                     NCO1ACCU        equ	1090	;# 
  7669   000443                     NCO1INC         equ	1091	;# 
  7670   000443                     NCO1INCL        equ	1091	;# 
  7671   000444                     NCO1INCH        equ	1092	;# 
  7672   000445                     NCO1INCU        equ	1093	;# 
  7673   000446                     NCO1CON         equ	1094	;# 
  7674   000447                     NCO1CLK         equ	1095	;# 
  7675   000448                     NCO2ACC         equ	1096	;# 
  7676   000448                     NCO2ACCL        equ	1096	;# 
  7677   000449                     NCO2ACCH        equ	1097	;# 
  7678   00044A                     NCO2ACCU        equ	1098	;# 
  7679   00044B                     NCO2INC         equ	1099	;# 
  7680   00044B                     NCO2INCL        equ	1099	;# 
  7681   00044C                     NCO2INCH        equ	1100	;# 
  7682   00044D                     NCO2INCU        equ	1101	;# 
  7683   00044E                     NCO2CON         equ	1102	;# 
  7684   00044F                     NCO2CLK         equ	1103	;# 
  7685   000450                     NCO3ACC         equ	1104	;# 
  7686   000450                     NCO3ACCL        equ	1104	;# 
  7687   000451                     NCO3ACCH        equ	1105	;# 
  7688   000452                     NCO3ACCU        equ	1106	;# 
  7689   000453                     NCO3INC         equ	1107	;# 
  7690   000453                     NCO3INCL        equ	1107	;# 
  7691   000454                     NCO3INCH        equ	1108	;# 
  7692   000455                     NCO3INCU        equ	1109	;# 
  7693   000456                     NCO3CON         equ	1110	;# 
  7694   000457                     NCO3CLK         equ	1111	;# 
  7695   000459                     IVTLOCK         equ	1113	;# 
  7696   00045A                     IVTAD           equ	1114	;# 
  7697   00045A                     IVTADL          equ	1114	;# 
  7698   00045B                     IVTADH          equ	1115	;# 
  7699   00045C                     IVTADU          equ	1116	;# 
  7700   00045D                     IVTBASE         equ	1117	;# 
  7701   00045D                     IVTBASEL        equ	1117	;# 
  7702   00045E                     IVTBASEH        equ	1118	;# 
  7703   00045F                     IVTBASEU        equ	1119	;# 
  7704   000460                     PWM1ERS         equ	1120	;# 
  7705   000461                     PWM1CLK         equ	1121	;# 
  7706   000462                     PWM1LDS         equ	1122	;# 
  7707   000463                     PWM1PR          equ	1123	;# 
  7708   000463                     PWM1PRL         equ	1123	;# 
  7709   000464                     PWM1PRH         equ	1124	;# 
  7710   000465                     PWM1CPRE        equ	1125	;# 
  7711   000466                     PWM1PIPOS       equ	1126	;# 
  7712   000467                     PWM1GIR         equ	1127	;# 
  7713   000468                     PWM1GIE         equ	1128	;# 
  7714   000469                     PWM1CON         equ	1129	;# 
  7715   00046A                     PWM1S1CFG       equ	1130	;# 
  7716   00046B                     PWM1S1P1        equ	1131	;# 
  7717   00046B                     PWM1S1P1L       equ	1131	;# 
  7718   00046C                     PWM1S1P1H       equ	1132	;# 
  7719   00046D                     PWM1S1P2        equ	1133	;# 
  7720   00046D                     PWM1S1P2L       equ	1133	;# 
  7721   00046E                     PWM1S1P2H       equ	1134	;# 
  7722   00046F                     PWM2ERS         equ	1135	;# 
  7723   000470                     PWM2CLK         equ	1136	;# 
  7724   000471                     PWM2LDS         equ	1137	;# 
  7725   000472                     PWM2PR          equ	1138	;# 
  7726   000472                     PWM2PRL         equ	1138	;# 
  7727   000473                     PWM2PRH         equ	1139	;# 
  7728   000474                     PWM2CPRE        equ	1140	;# 
  7729   000475                     PWM2PIPOS       equ	1141	;# 
  7730   000476                     PWM2GIR         equ	1142	;# 
  7731   000477                     PWM2GIE         equ	1143	;# 
  7732   000478                     PWM2CON         equ	1144	;# 
  7733   000479                     PWM2S1CFG       equ	1145	;# 
  7734   00047A                     PWM2S1P1        equ	1146	;# 
  7735   00047A                     PWM2S1P1L       equ	1146	;# 
  7736   00047B                     PWM2S1P1H       equ	1147	;# 
  7737   00047C                     PWM2S1P2        equ	1148	;# 
  7738   00047C                     PWM2S1P2L       equ	1148	;# 
  7739   00047D                     PWM2S1P2H       equ	1149	;# 
  7740   00047E                     PWM3ERS         equ	1150	;# 
  7741   00047F                     PWM3CLK         equ	1151	;# 
  7742   000480                     PWM3LDS         equ	1152	;# 
  7743   000481                     PWM3PR          equ	1153	;# 
  7744   000481                     PWM3PRL         equ	1153	;# 
  7745   000482                     PWM3PRH         equ	1154	;# 
  7746   000483                     PWM3CPRE        equ	1155	;# 
  7747   000484                     PWM3PIPOS       equ	1156	;# 
  7748   000485                     PWM3GIR         equ	1157	;# 
  7749   000486                     PWM3GIE         equ	1158	;# 
  7750   000487                     PWM3CON         equ	1159	;# 
  7751   000488                     PWM3S1CFG       equ	1160	;# 
  7752   000489                     PWM3S1P1        equ	1161	;# 
  7753   000489                     PWM3S1P1L       equ	1161	;# 
  7754   00048A                     PWM3S1P1H       equ	1162	;# 
  7755   00048B                     PWM3S1P2        equ	1163	;# 
  7756   00048B                     PWM3S1P2L       equ	1163	;# 
  7757   00048C                     PWM3S1P2H       equ	1164	;# 
  7758   00049C                     PWMLOAD         equ	1180	;# 
  7759   00049D                     PWMEN           equ	1181	;# 
  7760   00049E                     PIE0            equ	1182	;# 
  7761   00049F                     PIE1            equ	1183	;# 
  7762   0004A0                     PIE2            equ	1184	;# 
  7763   0004A1                     PIE3            equ	1185	;# 
  7764   0004A2                     PIE4            equ	1186	;# 
  7765   0004A3                     PIE5            equ	1187	;# 
  7766   0004A4                     PIE6            equ	1188	;# 
  7767   0004A5                     PIE7            equ	1189	;# 
  7768   0004A6                     PIE8            equ	1190	;# 
  7769   0004A7                     PIE9            equ	1191	;# 
  7770   0004A8                     PIE10           equ	1192	;# 
  7771   0004A9                     PIE11           equ	1193	;# 
  7772   0004AA                     PIE12           equ	1194	;# 
  7773   0004AB                     PIE13           equ	1195	;# 
  7774   0004AC                     PIE14           equ	1196	;# 
  7775   0004AD                     PIE15           equ	1197	;# 
  7776   0004AE                     PIR0            equ	1198	;# 
  7777   0004AF                     PIR1            equ	1199	;# 
  7778   0004B0                     PIR2            equ	1200	;# 
  7779   0004B1                     PIR3            equ	1201	;# 
  7780   0004B2                     PIR4            equ	1202	;# 
  7781   0004B3                     PIR5            equ	1203	;# 
  7782   0004B4                     PIR6            equ	1204	;# 
  7783   0004B5                     PIR7            equ	1205	;# 
  7784   0004B6                     PIR8            equ	1206	;# 
  7785   0004B7                     PIR9            equ	1207	;# 
  7786   0004B8                     PIR10           equ	1208	;# 
  7787   0004B9                     PIR11           equ	1209	;# 
  7788   0004BA                     PIR12           equ	1210	;# 
  7789   0004BB                     PIR13           equ	1211	;# 
  7790   0004BC                     PIR14           equ	1212	;# 
  7791   0004BD                     PIR15           equ	1213	;# 
  7792   0004BE                     LATA            equ	1214	;# 
  7793   0004BF                     LATB            equ	1215	;# 
  7794   0004C0                     LATC            equ	1216	;# 
  7795   0004C1                     LATD            equ	1217	;# 
  7796   0004C2                     LATE            equ	1218	;# 
  7797   0004C3                     LATF            equ	1219	;# 
  7798   0004C6                     TRISA           equ	1222	;# 
  7799   0004C7                     TRISB           equ	1223	;# 
  7800   0004C8                     TRISC           equ	1224	;# 
  7801   0004C9                     TRISD           equ	1225	;# 
  7802   0004CA                     TRISE           equ	1226	;# 
  7803   0004CB                     TRISF           equ	1227	;# 
  7804   0004CE                     PORTA           equ	1230	;# 
  7805   0004CF                     PORTB           equ	1231	;# 
  7806   0004D0                     PORTC           equ	1232	;# 
  7807   0004D1                     PORTD           equ	1233	;# 
  7808   0004D2                     PORTE           equ	1234	;# 
  7809   0004D3                     PORTF           equ	1235	;# 
  7810   0004D6                     INTCON0         equ	1238	;# 
  7811   0004D7                     INTCON1         equ	1239	;# 
  7812   0004D8                     STATUS          equ	1240	;# 
  7813   0004D9                     FSR2            equ	1241	;# 
  7814   0004D9                     FSR2L           equ	1241	;# 
  7815   0004DA                     FSR2H           equ	1242	;# 
  7816   0004DB                     PLUSW2          equ	1243	;# 
  7817   0004DC                     PREINC2         equ	1244	;# 
  7818   0004DD                     POSTDEC2        equ	1245	;# 
  7819   0004DE                     POSTINC2        equ	1246	;# 
  7820   0004DF                     INDF2           equ	1247	;# 
  7821   0004E0                     BSR             equ	1248	;# 
  7822   0004E1                     FSR1            equ	1249	;# 
  7823   0004E1                     FSR1L           equ	1249	;# 
  7824   0004E2                     FSR1H           equ	1250	;# 
  7825   0004E3                     PLUSW1          equ	1251	;# 
  7826   0004E4                     PREINC1         equ	1252	;# 
  7827   0004E5                     POSTDEC1        equ	1253	;# 
  7828   0004E6                     POSTINC1        equ	1254	;# 
  7829   0004E7                     INDF1           equ	1255	;# 
  7830   0004E8                     WREG            equ	1256	;# 
  7831   0004E9                     FSR0            equ	1257	;# 
  7832   0004E9                     FSR0L           equ	1257	;# 
  7833   0004EA                     FSR0H           equ	1258	;# 
  7834   0004EB                     PLUSW0          equ	1259	;# 
  7835   0004EC                     PREINC0         equ	1260	;# 
  7836   0004ED                     POSTDEC0        equ	1261	;# 
  7837   0004EE                     POSTINC0        equ	1262	;# 
  7838   0004EF                     INDF0           equ	1263	;# 
  7839   0004F0                     PCON0           equ	1264	;# 
  7840   0004F1                     PCON1           equ	1265	;# 
  7841   0004F2                     CPUDOZE         equ	1266	;# 
  7842   0004F3                     PROD            equ	1267	;# 
  7843   0004F3                     PRODL           equ	1267	;# 
  7844   0004F4                     PRODH           equ	1268	;# 
  7845   0004F5                     TABLAT          equ	1269	;# 
  7846   0004F6                     TBLPTR          equ	1270	;# 
  7847   0004F6                     TBLPTRL         equ	1270	;# 
  7848   0004F7                     TBLPTRH         equ	1271	;# 
  7849   0004F8                     TBLPTRU         equ	1272	;# 
  7850   0004F9                     PCLAT           equ	1273	;# 
  7851   0004F9                     PCL             equ	1273	;# 
  7852   0004FA                     PCLATH          equ	1274	;# 
  7853   0004FB                     PCLATU          equ	1275	;# 
  7854   0004FC                     STKPTR          equ	1276	;# 
  7855   0004FD                     TOS             equ	1277	;# 
  7856   0004FD                     TOSL            equ	1277	;# 
  7857   0004FE                     TOSH            equ	1278	;# 
  7858   0004FF                     TOSU            equ	1279	;# 
  7859                           
  7860 ;; Function _SPI1_Deinitialize is unused but had its address taken
  7861   000000                     _SPI1_Deinitialize equ	0
  7862                           
  7863 ;; Function _SPI1_Close is unused but had its address taken
  7864   000000                     _SPI1_Close     equ	0
  7865                           
  7866 ;; Function _SPI1_BufferExchange is unused but had its address taken
  7867   000000                     _SPI1_BufferExchange equ	0
  7868                           
  7869 ;; Function _SPI1_BufferWrite is unused but had its address taken
  7870   000000                     _SPI1_BufferWrite equ	0
  7871                           
  7872 ;; Function _SPI1_BufferRead is unused but had its address taken
  7873   000000                     _SPI1_BufferRead equ	0
  7874                           
  7875 ;; Function _SPI1_ByteWrite is unused but had its address taken
  7876   000000                     _SPI1_ByteWrite equ	0
  7877                           
  7878 ;; Function _SPI1_ByteRead is unused but had its address taken
  7879   000000                     _SPI1_ByteRead  equ	0
  7880                           
  7881 ;; Function _SPI1_IsTxReady is unused but had its address taken
  7882   000000                     _SPI1_IsTxReady equ	0
  7883                           
  7884 ;; Function _SPI1_IsRxReady is unused but had its address taken
  7885   000000                     _SPI1_IsRxReady equ	0
  7886                           
  7887 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  7888   000000                     _INT0_DefaultInterruptHandler equ	0
  7889                           
  7890 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  7891   000000                     _INT1_DefaultInterruptHandler equ	0
  7892                           
  7893 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  7894   000000                     _INT2_DefaultInterruptHandler equ	0
  7895                           
  7896                           	psect	idataBANK5
  7897   011520                     __pidataBANK5:
  7898                           	callstack 0
  7899                           
  7900                           ;initializer for _rf24_pa_dbm
  7901   011520  50                 	db	80
  7902   011521  41                 	db	65
  7903   011522  5F                 	db	95
  7904   011523  4D                 	db	77
  7905   011524  49                 	db	73
  7906   011525  4E                 	db	78
  7907   011526  00                 	db	0
  7908   011527  00                 	db	0
  7909   011528  50                 	db	80
  7910   011529  41                 	db	65
  7911   01152A  5F                 	db	95
  7912   01152B  4C                 	db	76
  7913   01152C  4F                 	db	79
  7914   01152D  57                 	db	87
  7915   01152E  00                 	db	0
  7916   01152F  00                 	db	0
  7917   011530  50                 	db	80
  7918   011531  41                 	db	65
  7919   011532  5F                 	db	95
  7920   011533  48                 	db	72
  7921   011534  49                 	db	73
  7922   011535  47                 	db	71
  7923   011536  48                 	db	72
  7924   011537  00                 	db	0
  7925   011538  50                 	db	80
  7926   011539  41                 	db	65
  7927   01153A  5F                 	db	95
  7928   01153B  4D                 	db	77
  7929   01153C  41                 	db	65
  7930   01153D  58                 	db	88
  7931   01153E  00                 	db	0
  7932   01153F  00                 	db	0
  7933                           
  7934                           ;initializer for _rf24_datarates
  7935   011540  31                 	db	49
  7936   011541  4D                 	db	77
  7937   011542  62                 	db	98
  7938   011543  70                 	db	112
  7939   011544  73                 	db	115
  7940   011545  00                 	db	0
  7941   011546  00                 	db	0
  7942   011547  00                 	db	0
  7943   011548  32                 	db	50
  7944   011549  4D                 	db	77
  7945   01154A  62                 	db	98
  7946   01154B  70                 	db	112
  7947   01154C  73                 	db	115
  7948   01154D  00                 	db	0
  7949   01154E  00                 	db	0
  7950   01154F  00                 	db	0
  7951   011550  32                 	db	50
  7952   011551  35                 	db	53
  7953   011552  30                 	db	48
  7954   011553  4B                 	db	75
  7955   011554  62                 	db	98
  7956   011555  70                 	db	112
  7957   011556  73                 	db	115
  7958   011557  00                 	db	0
  7959                           
  7960                           	psect	mediumconst
  7961   00FE64                     __pmediumconst:
  7962                           	callstack 0
  7963   00FE64  00                 	db	0
  7964   00FE65                     _SPI1_nrf24:
  7965                           	callstack 0
  7966   00FE65  FA                 	db	low _SPI1_Initialize
  7967   00FE66  17                 	db	high _SPI1_Initialize
  7968   00FE67  01                 	db	low (_SPI1_Initialize shr (0+16))
  7969   00FE68  00                 	db	0
  7970   00FE69  00                 	db	0
  7971   00FE6A  00                 	db	0
  7972   00FE6B  32                 	db	low _SPI1_Open
  7973   00FE6C  0C                 	db	high _SPI1_Open
  7974   00FE6D  01                 	db	low (_SPI1_Open shr (0+16))
  7975   00FE6E  00                 	db	0
  7976   00FE6F  00                 	db	0
  7977   00FE70  00                 	db	0
  7978   00FE71  00                 	db	0
  7979   00FE72  00                 	db	0
  7980   00FE73  00                 	db	0
  7981   00FE74  00                 	db	0
  7982   00FE75  00                 	db	0
  7983   00FE76  00                 	db	0
  7984   00FE77  00                 	db	0
  7985   00FE78  00                 	db	0
  7986   00FE79  00                 	db	0
  7987   00FE7A  10                 	db	low _SPI1_ByteExchange
  7988   00FE7B  17                 	db	high _SPI1_ByteExchange
  7989   00FE7C  01                 	db	low (_SPI1_ByteExchange shr (0+16))
  7990   00FE7D  00                 	db	0
  7991   00FE7E  00                 	db	0
  7992   00FE7F  00                 	db	0
  7993   00FE80  00                 	db	0
  7994   00FE81  00                 	db	0
  7995   00FE82  00                 	db	0
  7996   00FE83  00                 	db	0
  7997   00FE84  00                 	db	0
  7998   00FE85  00                 	db	0
  7999   00FE86  00                 	db	0
  8000   00FE87  00                 	db	0
  8001   00FE88  00                 	db	0
  8002   00FE89  00                 	db	0
  8003   00FE8A  00                 	db	0
  8004   00FE8B  00                 	db	0
  8005   00FE8C  00                 	db	0
  8006   00FE8D  00                 	db	0
  8007   00FE8E  00                 	db	0
  8008   00FE8F                     __end_of_SPI1_nrf24:
  8009                           	callstack 0
  8010   00FE8F                     _spi1_configuration:
  8011                           	callstack 0
  8012   00FE8F  02                 	db	2
  8013   00FE90  C0                 	db	192
  8014   00FE91  00                 	db	0
  8015   00FE92  FF                 	db	255
  8016   00FE93  00                 	db	0
  8017   00FE94  02                 	db	2
  8018   00FE95  C0                 	db	192
  8019   00FE96  00                 	db	0
  8020   00FE97  FF                 	db	255
  8021   00FE98  00                 	db	0
  8022   00FE99                     __end_of_spi1_configuration:
  8023                           	callstack 0
  8024   00FE99                     _rf24_crclength:
  8025                           	callstack 0
  8026   00FE99  44                 	db	68
  8027   00FE9A  69                 	db	105
  8028   00FE9B  73                 	db	115
  8029   00FE9C  61                 	db	97
  8030   00FE9D  62                 	db	98
  8031   00FE9E  6C                 	db	108
  8032   00FE9F  65                 	db	101
  8033   00FEA0  64                 	db	100
  8034   00FEA1  00                 	db	0
  8035   00FEA2  00                 	db	0
  8036   00FEA3  38                 	db	56
  8037   00FEA4  20                 	db	32
  8038   00FEA5  62                 	db	98
  8039   00FEA6  69                 	db	105
  8040   00FEA7  74                 	db	116
  8041   00FEA8  73                 	db	115
  8042   00FEA9  00                 	db	0
  8043   00FEAA  00                 	db	0
  8044   00FEAB  00                 	db	0
  8045   00FEAC  00                 	db	0
  8046   00FEAD  31                 	db	49
  8047   00FEAE  36                 	db	54
  8048   00FEAF  20                 	db	32
  8049   00FEB0  62                 	db	98
  8050   00FEB1  69                 	db	105
  8051   00FEB2  74                 	db	116
  8052   00FEB3  73                 	db	115
  8053   00FEB4  00                 	db	0
  8054   00FEB5  00                 	db	0
  8055   00FEB6  00                 	db	0
  8056   00FEB7                     __end_of_rf24_crclength:
  8057                           	callstack 0
  8058   00FEB7                     STR_17:
  8059                           
  8060                           ; BSR set to: 0
  8061   00FEB7  53                 	db	83	;'S'
  8062   00FEB8  54                 	db	84	;'T'
  8063   00FEB9  41                 	db	65	;'A'
  8064   00FEBA  54                 	db	84	;'T'
  8065   00FEBB  55                 	db	85	;'U'
  8066   00FEBC  53                 	db	83	;'S'
  8067   00FEBD  09                 	db	9
  8068   00FEBE  09                 	db	9
  8069   00FEBF  20                 	db	32
  8070   00FEC0  3D                 	db	61	;'='
  8071   00FEC1  20                 	db	32
  8072   00FEC2  30                 	db	48	;'0'
  8073   00FEC3  78                 	db	120	;'x'
  8074   00FEC4  25                 	db	37
  8075   00FEC5  30                 	db	48	;'0'
  8076   00FEC6  32                 	db	50	;'2'
  8077   00FEC7  78                 	db	120	;'x'
  8078   00FEC8  20                 	db	32
  8079   00FEC9  52                 	db	82	;'R'
  8080   00FECA  58                 	db	88	;'X'
  8081   00FECB  5F                 	db	95	;'_'
  8082   00FECC  44                 	db	68	;'D'
  8083   00FECD  52                 	db	82	;'R'
  8084   00FECE  3D                 	db	61	;'='
  8085   00FECF  25                 	db	37
  8086   00FED0  78                 	db	120	;'x'
  8087   00FED1  20                 	db	32
  8088   00FED2  54                 	db	84	;'T'
  8089   00FED3  58                 	db	88	;'X'
  8090   00FED4  5F                 	db	95	;'_'
  8091   00FED5  44                 	db	68	;'D'
  8092   00FED6  53                 	db	83	;'S'
  8093   00FED7  3D                 	db	61	;'='
  8094   00FED8  25                 	db	37
  8095   00FED9  78                 	db	120	;'x'
  8096   00FEDA  20                 	db	32
  8097   00FEDB  4D                 	db	77	;'M'
  8098   00FEDC  41                 	db	65	;'A'
  8099   00FEDD  58                 	db	88	;'X'
  8100   00FEDE  5F                 	db	95	;'_'
  8101   00FEDF  52                 	db	82	;'R'
  8102   00FEE0  54                 	db	84	;'T'
  8103   00FEE1  3D                 	db	61	;'='
  8104   00FEE2  25                 	db	37
  8105   00FEE3  78                 	db	120	;'x'
  8106   00FEE4  20                 	db	32
  8107   00FEE5  52                 	db	82	;'R'
  8108   00FEE6  58                 	db	88	;'X'
  8109   00FEE7  5F                 	db	95	;'_'
  8110   00FEE8  50                 	db	80	;'P'
  8111   00FEE9  5F                 	db	95	;'_'
  8112   00FEEA  4E                 	db	78	;'N'
  8113   00FEEB  4F                 	db	79	;'O'
  8114   00FEEC  3D                 	db	61	;'='
  8115   00FEED  25                 	db	37
  8116   00FEEE  78                 	db	120	;'x'
  8117   00FEEF  20                 	db	32
  8118   00FEF0  54                 	db	84	;'T'
  8119   00FEF1  58                 	db	88	;'X'
  8120   00FEF2  5F                 	db	95	;'_'
  8121   00FEF3  46                 	db	70	;'F'
  8122   00FEF4  55                 	db	85	;'U'
  8123   00FEF5  4C                 	db	76	;'L'
  8124   00FEF6  4C                 	db	76	;'L'
  8125   00FEF7  3D                 	db	61	;'='
  8126   00FEF8  25                 	db	37
  8127   00FEF9  78                 	db	120	;'x'
  8128   00FEFA  0D                 	db	13
  8129   00FEFB  0A                 	db	10
  8130   00FEFC  00                 	db	0
  8131   00FEFD                     STR_2:
  8132                           
  8133                           ; BSR set to: 0
  8134   00FEFD  3D                 	db	61	;'='
  8135   00FEFE  3D                 	db	61	;'='
  8136   00FEFF  3D                 	db	61	;'='
  8137   00FF00  3D                 	db	61	;'='
  8138   00FF01  3D                 	db	61	;'='
  8139   00FF02  3D                 	db	61	;'='
  8140   00FF03  3D                 	db	61	;'='
  8141   00FF04  3D                 	db	61	;'='
  8142   00FF05  3D                 	db	61	;'='
  8143   00FF06  3D                 	db	61	;'='
  8144   00FF07  3D                 	db	61	;'='
  8145   00FF08  3D                 	db	61	;'='
  8146   00FF09  3D                 	db	61	;'='
  8147   00FF0A  3D                 	db	61	;'='
  8148   00FF0B  3D                 	db	61	;'='
  8149   00FF0C  3D                 	db	61	;'='
  8150   00FF0D  20                 	db	32
  8151   00FF0E  4E                 	db	78	;'N'
  8152   00FF0F  52                 	db	82	;'R'
  8153   00FF10  46                 	db	70	;'F'
  8154   00FF11  20                 	db	32
  8155   00FF12  43                 	db	67	;'C'
  8156   00FF13  6F                 	db	111	;'o'
  8157   00FF14  6E                 	db	110	;'n'
  8158   00FF15  66                 	db	102	;'f'
  8159   00FF16  69                 	db	105	;'i'
  8160   00FF17  67                 	db	103	;'g'
  8161   00FF18  75                 	db	117	;'u'
  8162   00FF19  72                 	db	114	;'r'
  8163   00FF1A  61                 	db	97	;'a'
  8164   00FF1B  74                 	db	116	;'t'
  8165   00FF1C  69                 	db	105	;'i'
  8166   00FF1D  6F                 	db	111	;'o'
  8167   00FF1E  6E                 	db	110	;'n'
  8168   00FF1F  20                 	db	32
  8169   00FF20  3D                 	db	61	;'='
  8170   00FF21  3D                 	db	61	;'='
  8171   00FF22  3D                 	db	61	;'='
  8172   00FF23  3D                 	db	61	;'='
  8173   00FF24  3D                 	db	61	;'='
  8174   00FF25  3D                 	db	61	;'='
  8175   00FF26  3D                 	db	61	;'='
  8176   00FF27  3D                 	db	61	;'='
  8177   00FF28  3D                 	db	61	;'='
  8178   00FF29  3D                 	db	61	;'='
  8179   00FF2A  3D                 	db	61	;'='
  8180   00FF2B  3D                 	db	61	;'='
  8181   00FF2C  3D                 	db	61	;'='
  8182   00FF2D  3D                 	db	61	;'='
  8183   00FF2E  3D                 	db	61	;'='
  8184   00FF2F  3D                 	db	61	;'='
  8185   00FF30  0A                 	db	10
  8186   00FF31  00                 	db	0
  8187   00FF32                     STR_16:
  8188                           
  8189                           ; BSR set to: 0
  8190   00FF32  52                 	db	82	;'R'
  8191   00FF33  65                 	db	101	;'e'
  8192   00FF34  74                 	db	116	;'t'
  8193   00FF35  72                 	db	114	;'r'
  8194   00FF36  61                 	db	97	;'a'
  8195   00FF37  6E                 	db	110	;'n'
  8196   00FF38  73                 	db	115	;'s'
  8197   00FF39  6D                 	db	109	;'m'
  8198   00FF3A  69                 	db	105	;'i'
  8199   00FF3B  74                 	db	116	;'t'
  8200   00FF3C  09                 	db	9
  8201   00FF3D  20                 	db	32
  8202   00FF3E  3D                 	db	61	;'='
  8203   00FF3F  20                 	db	32
  8204   00FF40  25                 	db	37
  8205   00FF41  64                 	db	100	;'d'
  8206   00FF42  20                 	db	32
  8207   00FF43  75                 	db	117	;'u'
  8208   00FF44  73                 	db	115	;'s'
  8209   00FF45  0A                 	db	10
  8210   00FF46  00                 	db	0
  8211   00FF47                     STR_14:
  8212                           
  8213                           ; BSR set to: 0
  8214   00FF47  43                 	db	67	;'C'
  8215   00FF48  52                 	db	82	;'R'
  8216   00FF49  43                 	db	67	;'C'
  8217   00FF4A  20                 	db	32
  8218   00FF4B  4C                 	db	76	;'L'
  8219   00FF4C  65                 	db	101	;'e'
  8220   00FF4D  6E                 	db	110	;'n'
  8221   00FF4E  67                 	db	103	;'g'
  8222   00FF4F  74                 	db	116	;'t'
  8223   00FF50  68                 	db	104	;'h'
  8224   00FF51  09                 	db	9
  8225   00FF52  20                 	db	32
  8226   00FF53  3D                 	db	61	;'='
  8227   00FF54  20                 	db	32
  8228   00FF55  25                 	db	37
  8229   00FF56  73                 	db	115	;'s'
  8230   00FF57  0A                 	db	10
  8231   00FF58  00                 	db	0
  8232   00FF59                     STR_13:
  8233                           
  8234                           ; BSR set to: 0
  8235   00FF59  44                 	db	68	;'D'
  8236   00FF5A  61                 	db	97	;'a'
  8237   00FF5B  74                 	db	116	;'t'
  8238   00FF5C  61                 	db	97	;'a'
  8239   00FF5D  20                 	db	32
  8240   00FF5E  52                 	db	82	;'R'
  8241   00FF5F  61                 	db	97	;'a'
  8242   00FF60  74                 	db	116	;'t'
  8243   00FF61  65                 	db	101	;'e'
  8244   00FF62  09                 	db	9
  8245   00FF63  20                 	db	32
  8246   00FF64  3D                 	db	61	;'='
  8247   00FF65  20                 	db	32
  8248   00FF66  25                 	db	37
  8249   00FF67  73                 	db	115	;'s'
  8250   00FF68  0A                 	db	10
  8251   00FF69  00                 	db	0
  8252   00FF6A                     STR_15:
  8253                           
  8254                           ; BSR set to: 0
  8255   00FF6A  50                 	db	80	;'P'
  8256   00FF6B  41                 	db	65	;'A'
  8257   00FF6C  20                 	db	32
  8258   00FF6D  50                 	db	80	;'P'
  8259   00FF6E  6F                 	db	111	;'o'
  8260   00FF6F  77                 	db	119	;'w'
  8261   00FF70  65                 	db	101	;'e'
  8262   00FF71  72                 	db	114	;'r'
  8263   00FF72  09                 	db	9
  8264   00FF73  20                 	db	32
  8265   00FF74  3D                 	db	61	;'='
  8266   00FF75  20                 	db	32
  8267   00FF76  25                 	db	37
  8268   00FF77  73                 	db	115	;'s'
  8269   00FF78  0A                 	db	10
  8270   00FF79  00                 	db	0
  8271   00FF7A                     STR_12:
  8272                           
  8273                           ; BSR set to: 0
  8274   00FF7A  44                 	db	68	;'D'
  8275   00FF7B  59                 	db	89	;'Y'
  8276   00FF7C  4E                 	db	78	;'N'
  8277   00FF7D  50                 	db	80	;'P'
  8278   00FF7E  44                 	db	68	;'D'
  8279   00FF7F  2F                 	db	47
  8280   00FF80  46                 	db	70	;'F'
  8281   00FF81  45                 	db	69	;'E'
  8282   00FF82  41                 	db	65	;'A'
  8283   00FF83  54                 	db	84	;'T'
  8284   00FF84  55                 	db	85	;'U'
  8285   00FF85  52                 	db	82	;'R'
  8286   00FF86  45                 	db	69	;'E'
  8287   00FF87  00                 	db	0
  8288   00FF88                     STR_3:
  8289                           
  8290                           ; BSR set to: 0
  8291   00FF88  52                 	db	82	;'R'
  8292   00FF89  58                 	db	88	;'X'
  8293   00FF8A  5F                 	db	95	;'_'
  8294   00FF8B  41                 	db	65	;'A'
  8295   00FF8C  44                 	db	68	;'D'
  8296   00FF8D  44                 	db	68	;'D'
  8297   00FF8E  52                 	db	82	;'R'
  8298   00FF8F  5F                 	db	95	;'_'
  8299   00FF90  50                 	db	80	;'P'
  8300   00FF91  30                 	db	48	;'0'
  8301   00FF92  2D                 	db	45
  8302   00FF93  31                 	db	49	;'1'
  8303   00FF94  00                 	db	0
  8304   00FF95                     STR_4:
  8305                           
  8306                           ; BSR set to: 0
  8307   00FF95  52                 	db	82	;'R'
  8308   00FF96  58                 	db	88	;'X'
  8309   00FF97  5F                 	db	95	;'_'
  8310   00FF98  41                 	db	65	;'A'
  8311   00FF99  44                 	db	68	;'D'
  8312   00FF9A  44                 	db	68	;'D'
  8313   00FF9B  52                 	db	82	;'R'
  8314   00FF9C  5F                 	db	95	;'_'
  8315   00FF9D  50                 	db	80	;'P'
  8316   00FF9E  32                 	db	50	;'2'
  8317   00FF9F  2D                 	db	45
  8318   00FFA0  35                 	db	53	;'5'
  8319   00FFA1  00                 	db	0
  8320   00FFA2                     STR_6:
  8321                           
  8322                           ; BSR set to: 0
  8323   00FFA2  52                 	db	82	;'R'
  8324   00FFA3  58                 	db	88	;'X'
  8325   00FFA4  5F                 	db	95	;'_'
  8326   00FFA5  50                 	db	80	;'P'
  8327   00FFA6  57                 	db	87	;'W'
  8328   00FFA7  5F                 	db	95	;'_'
  8329   00FFA8  50                 	db	80	;'P'
  8330   00FFA9  30                 	db	48	;'0'
  8331   00FFAA  2D                 	db	45
  8332   00FFAB  36                 	db	54	;'6'
  8333   00FFAC  00                 	db	0
  8334   00FFAD                     STR_8:
  8335                           
  8336                           ; BSR set to: 0
  8337   00FFAD  45                 	db	69	;'E'
  8338   00FFAE  4E                 	db	78	;'N'
  8339   00FFAF  5F                 	db	95	;'_'
  8340   00FFB0  52                 	db	82	;'R'
  8341   00FFB1  58                 	db	88	;'X'
  8342   00FFB2  41                 	db	65	;'A'
  8343   00FFB3  44                 	db	68	;'D'
  8344   00FFB4  44                 	db	68	;'D'
  8345   00FFB5  52                 	db	82	;'R'
  8346   00FFB6  00                 	db	0
  8347   00FFB7                     STR_5:
  8348                           
  8349                           ; BSR set to: 0
  8350   00FFB7  54                 	db	84	;'T'
  8351   00FFB8  58                 	db	88	;'X'
  8352   00FFB9  5F                 	db	95	;'_'
  8353   00FFBA  41                 	db	65	;'A'
  8354   00FFBB  44                 	db	68	;'D'
  8355   00FFBC  44                 	db	68	;'D'
  8356   00FFBD  52                 	db	82	;'R'
  8357   00FFBE  09                 	db	9
  8358   00FFBF  00                 	db	0
  8359   00FFC0                     STR_10:
  8360                           
  8361                           ; BSR set to: 0
  8362   00FFC0  52                 	db	82	;'R'
  8363   00FFC1  46                 	db	70	;'F'
  8364   00FFC2  5F                 	db	95	;'_'
  8365   00FFC3  53                 	db	83	;'S'
  8366   00FFC4  45                 	db	69	;'E'
  8367   00FFC5  54                 	db	84	;'T'
  8368   00FFC6  55                 	db	85	;'U'
  8369   00FFC7  50                 	db	80	;'P'
  8370   00FFC8  00                 	db	0
  8371   00FFC9                     STR_11:
  8372                           
  8373                           ; BSR set to: 0
  8374   00FFC9  43                 	db	67	;'C'
  8375   00FFCA  4F                 	db	79	;'O'
  8376   00FFCB  4E                 	db	78	;'N'
  8377   00FFCC  46                 	db	70	;'F'
  8378   00FFCD  49                 	db	73	;'I'
  8379   00FFCE  47                 	db	71	;'G'
  8380   00FFCF  09                 	db	9
  8381   00FFD0  00                 	db	0
  8382   00FFD1                     STR_23:
  8383                           
  8384                           ; BSR set to: 0
  8385   00FFD1  20                 	db	32
  8386   00FFD2  30                 	db	48	;'0'
  8387   00FFD3  78                 	db	120	;'x'
  8388   00FFD4  25                 	db	37
  8389   00FFD5  30                 	db	48	;'0'
  8390   00FFD6  32                 	db	50	;'2'
  8391   00FFD7  78                 	db	120	;'x'
  8392   00FFD8  00                 	db	0
  8393   00FFD9                     STR_25:
  8394                           
  8395                           ; BSR set to: 0
  8396   00FFD9  28                 	db	40
  8397   00FFDA  6E                 	db	110	;'n'
  8398   00FFDB  75                 	db	117	;'u'
  8399   00FFDC  6C                 	db	108	;'l'
  8400   00FFDD  6C                 	db	108	;'l'
  8401   00FFDE  29                 	db	41
  8402   00FFDF  00                 	db	0
  8403   00FFE0                     STR_7:
  8404                           
  8405                           ; BSR set to: 0
  8406   00FFE0  45                 	db	69	;'E'
  8407   00FFE1  4E                 	db	78	;'N'
  8408   00FFE2  5F                 	db	95	;'_'
  8409   00FFE3  41                 	db	65	;'A'
  8410   00FFE4  41                 	db	65	;'A'
  8411   00FFE5  09                 	db	9
  8412   00FFE6  00                 	db	0
  8413   00FFE7                     STR_9:
  8414                           
  8415                           ; BSR set to: 0
  8416   00FFE7  52                 	db	82	;'R'
  8417   00FFE8  46                 	db	70	;'F'
  8418   00FFE9  5F                 	db	95	;'_'
  8419   00FFEA  43                 	db	67	;'C'
  8420   00FFEB  48                 	db	72	;'H'
  8421   00FFEC  09                 	db	9
  8422   00FFED  00                 	db	0
  8423   00FFEE                     STR_18:
  8424                           
  8425                           ; BSR set to: 0
  8426   00FFEE  25                 	db	37
  8427   00FFEF  73                 	db	115	;'s'
  8428   00FFF0  09                 	db	9
  8429   00FFF1  20                 	db	32
  8430   00FFF2  3D                 	db	61	;'='
  8431   00FFF3  00                 	db	0
  8432   00FFF4                     STR_1:
  8433                           
  8434                           ; BSR set to: 0
  8435   00FFF4  46                 	db	70	;'F'
  8436   00FFF5  47                 	db	71	;'G'
  8437   00FFF6  48                 	db	72	;'H'
  8438   00FFF7  49                 	db	73	;'I'
  8439   00FFF8  4A                 	db	74	;'J'
  8440   00FFF9  00                 	db	0
  8441   00FFFA                     STR_19:
  8442                           
  8443                           ; BSR set to: 0
  8444   00FFFA  20                 	db	32
  8445   00FFFB  30                 	db	48	;'0'
  8446   00FFFC  78                 	db	120	;'x'
  8447   00FFFD  00                 	db	0
  8448   00FFD4                     STR_20          equ	STR_23+3
  8449   00FFEE                     STR_22          equ	STR_18
  8450   00FEFA                     STR_21          equ	STR_17+67
  8451   00FEFA                     STR_24          equ	STR_17+67
  8452   00FFFE  00                 	db	0	; dummy byte at the end
  8453   000003                     __activetblptr  equ	3
  8454                           
  8455                           	psect	nvBANK5
  8456   0005D5                     __pnvBANK5:
  8457                           	callstack 0
  8458   0005D5                     _INT2_InterruptHandler:
  8459                           	callstack 0
  8460   0005D5                     	ds	3
  8461   0005D8                     _INT1_InterruptHandler:
  8462                           	callstack 0
  8463   0005D8                     	ds	3
  8464   0005DB                     _INT0_InterruptHandler:
  8465                           	callstack 0
  8466   0005DB                     	ds	3
  8467   000079                     _WDTCON1        set	121
  8468   000078                     _WDTCON0        set	120
  8469   0000AC                     _ACTCON         set	172
  8470   0000B0                     _OSCTUNE        set	176
  8471   0000B1                     _OSCFRQ         set	177
  8472   0000B3                     _OSCEN          set	179
  8473   0000AF                     _OSCCON3        set	175
  8474   0000AD                     _OSCCON1        set	173
  8475   000080                     _SPI1RXB        set	128
  8476   000081                     _SPI1TXB        set	129
  8477   000082                     _SPI1TCNTL      set	130
  8478   000083                     _SPI1TCNTH      set	131
  8479   00008A                     _SPI1INTFbits   set	138
  8480   000084                     _SPI1CON0bits   set	132
  8481   000087                     _SPI1STATUSbits set	135
  8482   00008C                     _SPI1CLK        set	140
  8483   000089                     _SPI1BAUD       set	137
  8484   000086                     _SPI1CON2       set	134
  8485   000085                     _SPI1CON1       set	133
  8486   000084                     _SPI1CON0       set	132
  8487   000217                     _RC6PPS         set	535
  8488   00026A                     _SPI1SCKPPS     set	618
  8489   000215                     _RC4PPS         set	533
  8490   00026B                     _SPI1SDIPPS     set	619
  8491   000286                     _RC4I2C         set	646
  8492   000287                     _RC3I2C         set	647
  8493   000288                     _RB2I2C         set	648
  8494   000289                     _RB1I2C         set	649
  8495   000427                     _IOCEF          set	1063
  8496   000426                     _IOCEN          set	1062
  8497   000425                     _IOCEP          set	1061
  8498   000417                     _IOCCF          set	1047
  8499   000416                     _IOCCN          set	1046
  8500   000415                     _IOCCP          set	1045
  8501   00040F                     _IOCBF          set	1039
  8502   00040E                     _IOCBN          set	1038
  8503   00040D                     _IOCBP          set	1037
  8504   000407                     _IOCAF          set	1031
  8505   000406                     _IOCAN          set	1030
  8506   000405                     _IOCAP          set	1029
  8507   00042C                     _INLVLF         set	1068
  8508   000424                     _INLVLE         set	1060
  8509   00041C                     _INLVLD         set	1052
  8510   000414                     _INLVLC         set	1044
  8511   00040C                     _INLVLB         set	1036
  8512   000404                     _INLVLA         set	1028
  8513   00042B                     _SLRCONF        set	1067
  8514   000423                     _SLRCONE        set	1059
  8515   00041B                     _SLRCOND        set	1051
  8516   000413                     _SLRCONC        set	1043
  8517   00040B                     _SLRCONB        set	1035
  8518   000403                     _SLRCONA        set	1027
  8519   000429                     _WPUF           set	1065
  8520   000421                     _WPUE           set	1057
  8521   000419                     _WPUD           set	1049
  8522   000411                     _WPUC           set	1041
  8523   000409                     _WPUB           set	1033
  8524   000401                     _WPUA           set	1025
  8525   000428                     _ANSELF         set	1064
  8526   000420                     _ANSELE         set	1056
  8527   000418                     _ANSELD         set	1048
  8528   000410                     _ANSELC         set	1040
  8529   000408                     _ANSELB         set	1032
  8530   000400                     _ANSELA         set	1024
  8531   00042A                     _ODCONF         set	1066
  8532   000422                     _ODCONE         set	1058
  8533   00041A                     _ODCOND         set	1050
  8534   000412                     _ODCONC         set	1042
  8535   00040A                     _ODCONB         set	1034
  8536   000402                     _ODCONA         set	1026
  8537   0004C0                     _LATCbits       set	1216
  8538   0004F0                     _PCON0          set	1264
  8539   0004B8                     _PIR10bits      set	1208
  8540   0004B4                     _PIR6bits       set	1204
  8541   0004AF                     _PIR1bits       set	1199
  8542   0004D6                     _INTCON0bits    set	1238
  8543   0004CB                     _TRISF          set	1227
  8544   0004CA                     _TRISE          set	1226
  8545   0004C9                     _TRISD          set	1225
  8546   0004C8                     _TRISC          set	1224
  8547   0004C7                     _TRISB          set	1223
  8548   0004C6                     _TRISA          set	1222
  8549   0004C3                     _LATF           set	1219
  8550   0004C2                     _LATE           set	1218
  8551   0004C1                     _LATD           set	1217
  8552   0004C0                     _LATC           set	1216
  8553   0004BF                     _LATB           set	1215
  8554   0004BE                     _LATA           set	1214
  8555   0004B1                     _PIR3bits       set	1201
  8556   0004C8                     _TRISCbits      set	1224
  8557   0004A1                     _PIE3bits       set	1185
  8558                           
  8559                           ; #config settings
  8560                           
  8561                           	psect	cinit
  8562   011558                     __pcinit:
  8563                           	callstack 0
  8564   011558                     start_initialization:
  8565                           	callstack 0
  8566   011558                     __initialization:
  8567                           	callstack 0
  8568                           
  8569                           ; Initialize objects allocated to BANK5 (56 bytes)
  8570                           ; load TBLPTR registers with __pidataBANK5
  8571   011558  0E20               	movlw	low __pidataBANK5
  8572   01155A  6EF6               	movwf	tblptrl,c
  8573   01155C  0E15               	movlw	high __pidataBANK5
  8574   01155E  6EF7               	movwf	tblptrh,c
  8575   011560  0E01               	movlw	low (__pidataBANK5 shr (0+16))
  8576   011562  6EF8               	movwf	tblptru,c
  8577   011564  EE01  F160         	lfsr	0,__pdataBANK5
  8578   011568  EE10 F038          	lfsr	1,56
  8579   01156C                     copy_data0:
  8580   01156C  0009               	tblrd		*+
  8581   01156E  C4F5 F4EE          	movff	tablat,postinc0
  8582   011572  50E5               	movf	postdec1,w,c
  8583   011574  50E1               	movf	fsr1l,w,c
  8584   011576  E1FA               	bnz	copy_data0
  8585                           
  8586                           ; Clear objects allocated to BANK5 (36 bytes)
  8587   011578  EE01  F198         	lfsr	0,__pbssBANK5
  8588   01157C  0E24               	movlw	36
  8589   01157E                     clear_0:
  8590   01157E  6AEE               	clrf	postinc0,c
  8591   011580  06E8               	decf	wreg,f,c
  8592   011582  E1FD               	bnz	clear_0
  8593                           
  8594                           ; Clear objects allocated to COMRAM (1 bytes)
  8595   011584  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  8596   011586                     end_of_initialization:
  8597                           	callstack 0
  8598   011586                     __end_of__initialization:
  8599                           	callstack 0
  8600   011586  0100               	movlb	0
  8601   011588  EF27  F08C         	goto	_main	;jump to C main() function
  8602                           
  8603                           	psect	bssCOMRAM
  8604   00055E                     __pbssCOMRAM:
  8605                           	callstack 0
  8606   00055E                     _flags:
  8607                           	callstack 0
  8608   00055E                     	ds	1
  8609                           
  8610                           	psect	bssBANK5
  8611   000598                     __pbssBANK5:
  8612                           	callstack 0
  8613   000598                     _width:
  8614                           	callstack 0
  8615   000598                     	ds	2
  8616   00059A                     _prec:
  8617                           	callstack 0
  8618   00059A                     	ds	2
  8619   00059C                     _dbuf:
  8620                           	callstack 0
  8621   00059C                     	ds	32
  8622                           
  8623                           	psect	dataBANK5
  8624   000560                     __pdataBANK5:
  8625                           	callstack 0
  8626   000560                     _rf24_pa_dbm:
  8627                           	callstack 0
  8628   000560                     	ds	32
  8629   000580                     _rf24_datarates:
  8630                           	callstack 0
  8631   000580                     	ds	24
  8632                           
  8633                           	psect	cstackBANK5
  8634   0005BC                     __pcstackBANK5:
  8635                           	callstack 0
  8636   0005BC                     ??_Nrf24_printDetails:
  8637                           
  8638                           ; 1 bytes @ 0x0
  8639   0005BC                     	ds	4
  8640   0005C0                     Nrf24_printDetails@delay:
  8641                           	callstack 0
  8642                           
  8643                           ; 2 bytes @ 0x4
  8644   0005C0                     	ds	2
  8645   0005C2                     Nrf24_printDetails@retransmit:
  8646                           	callstack 0
  8647                           
  8648                           ; 1 bytes @ 0x6
  8649   0005C2                     	ds	1
  8650   0005C3                     nrf_loop@buf:
  8651                           	callstack 0
  8652                           
  8653                           ; 8 bytes @ 0x7
  8654   0005C3                     	ds	8
  8655   0005CB                     nrf_loop@ret:
  8656                           	callstack 0
  8657                           
  8658                           ; 2 bytes @ 0xF
  8659   0005CB                     	ds	2
  8660   0005CD                     nrf_loop@msg:
  8661                           	callstack 0
  8662                           
  8663                           ; 5 bytes @ 0x11
  8664   0005CD                     	ds	5
  8665   0005D2                     nrf_loop@dev:
  8666                           	callstack 0
  8667                           
  8668                           ; 3 bytes @ 0x16
  8669   0005D2                     	ds	3
  8670                           
  8671                           	psect	cstackCOMRAM
  8672   000501                     __pcstackCOMRAM:
  8673                           	callstack 0
  8674   000501                     ?___awdiv:
  8675                           	callstack 0
  8676   000501                     ?___awmod:
  8677                           	callstack 0
  8678   000501                     ?_read_prec_or_width:
  8679                           	callstack 0
  8680   000501                     SPI1_Open@spiConfigIndex:
  8681                           	callstack 0
  8682   000501                     SPI1_ByteExchange@byteData:
  8683                           	callstack 0
  8684   000501                     DELAY_milliseconds@milliseconds:
  8685                           	callstack 0
  8686   000501                     DELAY_microseconds@microseconds:
  8687                           	callstack 0
  8688   000501                     ___awdiv@dividend:
  8689                           	callstack 0
  8690   000501                     ___awmod@dividend:
  8691                           	callstack 0
  8692   000501                     memcpy@d1:
  8693                           	callstack 0
  8694   000501                     read_prec_or_width@fmt:
  8695                           	callstack 0
  8696   000501                     fputc@c:
  8697                           	callstack 0
  8698   000501                     INT0_SetInterruptHandler@InterruptHandler:
  8699                           	callstack 0
  8700   000501                     INT1_SetInterruptHandler@InterruptHandler:
  8701                           	callstack 0
  8702   000501                     INT2_SetInterruptHandler@InterruptHandler:
  8703                           	callstack 0
  8704   000501                     
  8705                           ; 1 bytes @ 0x0
  8706   000501                     	ds	1
  8707   000502                     SPI1_ByteExchange@returnValue:
  8708                           	callstack 0
  8709   000502                     Nrf24_init@dev:
  8710                           	callstack 0
  8711                           
  8712                           ; 2 bytes @ 0x1
  8713   000502                     	ds	1
  8714   000503                     Nrf24_configRegister@value:
  8715                           	callstack 0
  8716   000503                     SPI_read_buff@buffer:
  8717                           	callstack 0
  8718   000503                     SPI_write_buff@buffer:
  8719                           	callstack 0
  8720   000503                     Nrf24_flushRx@dev:
  8721                           	callstack 0
  8722   000503                     ___awdiv@divisor:
  8723                           	callstack 0
  8724   000503                     ___awmod@divisor:
  8725                           	callstack 0
  8726   000503                     memcpy@s1:
  8727                           	callstack 0
  8728   000503                     read_prec_or_width@ap:
  8729                           	callstack 0
  8730   000503                     fputc@fp:
  8731                           	callstack 0
  8732   000503                     ??_DELAY_milliseconds:
  8733   000503                     
  8734                           ; 1 bytes @ 0x2
  8735   000503                     	ds	1
  8736   000504                     Nrf24_configRegister@reg:
  8737                           	callstack 0
  8738   000504                     
  8739                           ; 1 bytes @ 0x3
  8740   000504                     	ds	1
  8741   000505                     SPI_read_buff@bytes:
  8742                           	callstack 0
  8743   000505                     SPI_write_buff@bytes:
  8744                           	callstack 0
  8745   000505                     ___awdiv@counter:
  8746                           	callstack 0
  8747   000505                     ___awmod@counter:
  8748                           	callstack 0
  8749   000505                     Nrf24_powerUpRx@dev:
  8750                           	callstack 0
  8751   000505                     memcpy@n:
  8752                           	callstack 0
  8753   000505                     ??_fputc:
  8754   000505                     ??_read_prec_or_width:
  8755                           
  8756                           ; 1 bytes @ 0x4
  8757   000505                     	ds	1
  8758   000506                     SPI_read_buff@i:
  8759                           	callstack 0
  8760   000506                     SPI_write_buff@i:
  8761                           	callstack 0
  8762   000506                     ___awdiv@sign:
  8763                           	callstack 0
  8764   000506                     ___awmod@sign:
  8765                           	callstack 0
  8766   000506                     
  8767                           ; 1 bytes @ 0x5
  8768   000506                     	ds	1
  8769   000507                     ?_abs:
  8770                           	callstack 0
  8771   000507                     read_prec_or_width@c:
  8772                           	callstack 0
  8773   000507                     Nrf24_getData@dev:
  8774                           	callstack 0
  8775   000507                     Nrf24_readRegister@value:
  8776                           	callstack 0
  8777   000507                     Nrf24_writeRegister@value:
  8778                           	callstack 0
  8779   000507                     ___awdiv@quotient:
  8780                           	callstack 0
  8781   000507                     memcpy@d:
  8782                           	callstack 0
  8783   000507                     abs@a:
  8784                           	callstack 0
  8785   000507                     
  8786                           ; 1 bytes @ 0x6
  8787   000507                     	ds	1
  8788   000508                     read_prec_or_width@n:
  8789                           	callstack 0
  8790                           
  8791                           ; 2 bytes @ 0x7
  8792   000508                     	ds	1
  8793   000509                     Nrf24_readRegister@len:
  8794                           	callstack 0
  8795   000509                     Nrf24_writeRegister@len:
  8796                           	callstack 0
  8797   000509                     Nrf24_getData@data:
  8798                           	callstack 0
  8799   000509                     memcpy@s:
  8800                           	callstack 0
  8801   000509                     ??_abs:
  8802                           
  8803                           ; 1 bytes @ 0x8
  8804   000509                     	ds	1
  8805   00050A                     Nrf24_readRegister@reg:
  8806                           	callstack 0
  8807   00050A                     Nrf24_writeRegister@reg:
  8808                           	callstack 0
  8809   00050A                     stoa@fp:
  8810                           	callstack 0
  8811   00050A                     fputs@s:
  8812                           	callstack 0
  8813   00050A                     
  8814                           ; 1 bytes @ 0x9
  8815   00050A                     	ds	1
  8816   00050B                     ?_Nrf24_setRADDR:
  8817                           	callstack 0
  8818   00050B                     memcpy@tmp:
  8819                           	callstack 0
  8820   00050B                     Nrf24_setRADDR@dev:
  8821                           	callstack 0
  8822   00050B                     Nrf24_getStatus@dev:
  8823                           	callstack 0
  8824   00050B                     Nrf24_SetSpeedDataRates@dev:
  8825                           	callstack 0
  8826   00050B                     Nrf24_setRetransmitDelay@dev:
  8827                           	callstack 0
  8828   00050B                     Nrf24_getDataRate@dev:
  8829                           	callstack 0
  8830   00050B                     Nrf24_getCRCLength@dev:
  8831                           	callstack 0
  8832   00050B                     Nrf24_getPALevel@dev:
  8833                           	callstack 0
  8834   00050B                     Nrf24_getRetransmitDelay@dev:
  8835                           	callstack 0
  8836   00050B                     
  8837                           ; 1 bytes @ 0xA
  8838   00050B                     	ds	1
  8839   00050C                     stoa@s:
  8840                           	callstack 0
  8841   00050C                     fputs@fp:
  8842                           	callstack 0
  8843                           
  8844                           ; 2 bytes @ 0xB
  8845   00050C                     	ds	1
  8846   00050D                     Nrf24_getStatus@rv:
  8847                           	callstack 0
  8848   00050D                     Nrf24_SetSpeedDataRates@val:
  8849                           	callstack 0
  8850   00050D                     Nrf24_setRetransmitDelay@val:
  8851                           	callstack 0
  8852   00050D                     Nrf24_getDataRate@result:
  8853                           	callstack 0
  8854   00050D                     Nrf24_getCRCLength@result:
  8855                           	callstack 0
  8856   00050D                     Nrf24_getPALevel@level:
  8857                           	callstack 0
  8858   00050D                     Nrf24_getRetransmitDelay@value:
  8859                           	callstack 0
  8860   00050D                     Nrf24_setRADDR@adr:
  8861                           	callstack 0
  8862   00050D                     
  8863                           ; 1 bytes @ 0xC
  8864   00050D                     	ds	1
  8865   00050E                     Nrf24_SetSpeedDataRates@value:
  8866                           	callstack 0
  8867   00050E                     Nrf24_setRetransmitDelay@value:
  8868                           	callstack 0
  8869   00050E                     Nrf24_getDataRate@dr:
  8870                           	callstack 0
  8871   00050E                     Nrf24_getCRCLength@AA:
  8872                           	callstack 0
  8873   00050E                     fputs@c:
  8874                           	callstack 0
  8875   00050E                     Nrf24_config@dev:
  8876                           	callstack 0
  8877   00050E                     Nrf24_dataReady@dev:
  8878                           	callstack 0
  8879   00050E                     ??_stoa:
  8880                           
  8881                           ; 1 bytes @ 0xD
  8882   00050E                     	ds	1
  8883   00050F                     Nrf24_getCRCLength@config:
  8884                           	callstack 0
  8885   00050F                     fputs@i:
  8886                           	callstack 0
  8887   00050F                     ??_Nrf24_setRADDR:
  8888                           
  8889                           ; 1 bytes @ 0xE
  8890   00050F                     	ds	1
  8891   000510                     Nrf24_config@channel:
  8892                           	callstack 0
  8893   000510                     Nrf24_dataReady@status:
  8894                           	callstack 0
  8895   000510                     stoa@p:
  8896                           	callstack 0
  8897   000510                     
  8898                           ; 1 bytes @ 0xF
  8899   000510                     	ds	1
  8900   000511                     Nrf24_config@payload:
  8901                           	callstack 0
  8902   000511                     pad@fp:
  8903                           	callstack 0
  8904                           
  8905                           ; 2 bytes @ 0x10
  8906   000511                     	ds	1
  8907   000512                     stoa@w:
  8908                           	callstack 0
  8909   000512                     Nrf24_setRADDR@buffer:
  8910                           	callstack 0
  8911   000512                     
  8912                           ; 1 bytes @ 0x11
  8913   000512                     	ds	1
  8914   000513                     pad@buf:
  8915                           	callstack 0
  8916                           
  8917                           ; 2 bytes @ 0x12
  8918   000513                     	ds	1
  8919   000514                     stoa@cp:
  8920                           	callstack 0
  8921                           
  8922                           ; 2 bytes @ 0x13
  8923   000514                     	ds	1
  8924   000515                     pad@p:
  8925                           	callstack 0
  8926                           
  8927                           ; 2 bytes @ 0x14
  8928   000515                     	ds	1
  8929   000516                     stoa@l:
  8930                           	callstack 0
  8931                           
  8932                           ; 2 bytes @ 0x15
  8933   000516                     	ds	1
  8934   000517                     Nrf24_setRADDR@ret:
  8935                           	callstack 0
  8936   000517                     ??_pad:
  8937                           
  8938                           ; 1 bytes @ 0x16
  8939   000517                     	ds	1
  8940   000518                     pad@i:
  8941                           	callstack 0
  8942                           
  8943                           ; 2 bytes @ 0x17
  8944   000518                     	ds	1
  8945   000519                     Nrf24_setRADDR@i:
  8946                           	callstack 0
  8947                           
  8948                           ; 2 bytes @ 0x18
  8949   000519                     	ds	1
  8950   00051A                     dtoa@fp:
  8951                           	callstack 0
  8952   00051A                     xtoa@fp:
  8953                           	callstack 0
  8954                           
  8955                           ; 2 bytes @ 0x19
  8956   00051A                     	ds	2
  8957   00051C                     dtoa@d:
  8958                           	callstack 0
  8959   00051C                     xtoa@d:
  8960                           	callstack 0
  8961                           
  8962                           ; 2 bytes @ 0x1B
  8963   00051C                     	ds	2
  8964   00051E                     _dtoa$1697:
  8965                           	callstack 0
  8966   00051E                     ??_xtoa:
  8967                           
  8968                           ; 1 bytes @ 0x1D
  8969   00051E                     	ds	2
  8970   000520                     dtoa@p:
  8971                           	callstack 0
  8972                           
  8973                           ; 1 bytes @ 0x1F
  8974   000520                     	ds	1
  8975   000521                     xtoa@p:
  8976                           	callstack 0
  8977   000521                     dtoa@w:
  8978                           	callstack 0
  8979                           
  8980                           ; 2 bytes @ 0x20
  8981   000521                     	ds	1
  8982   000522                     xtoa@w:
  8983                           	callstack 0
  8984                           
  8985                           ; 2 bytes @ 0x21
  8986   000522                     	ds	1
  8987   000523                     dtoa@s:
  8988                           	callstack 0
  8989                           
  8990                           ; 1 bytes @ 0x22
  8991   000523                     	ds	1
  8992   000524                     xtoa@c:
  8993                           	callstack 0
  8994   000524                     dtoa@i:
  8995                           	callstack 0
  8996                           
  8997                           ; 2 bytes @ 0x23
  8998   000524                     	ds	1
  8999   000525                     xtoa@i:
  9000                           	callstack 0
  9001                           
  9002                           ; 2 bytes @ 0x24
  9003   000525                     	ds	2
  9004   000527                     vfpfcnvrt@fp:
  9005                           	callstack 0
  9006                           
  9007                           ; 2 bytes @ 0x26
  9008   000527                     	ds	2
  9009   000529                     vfpfcnvrt@fmt:
  9010                           	callstack 0
  9011                           
  9012                           ; 2 bytes @ 0x28
  9013   000529                     	ds	2
  9014   00052B                     vfpfcnvrt@ap:
  9015                           	callstack 0
  9016                           
  9017                           ; 2 bytes @ 0x2A
  9018   00052B                     	ds	2
  9019   00052D                     ??_vfpfcnvrt:
  9020                           
  9021                           ; 1 bytes @ 0x2C
  9022   00052D                     	ds	2
  9023   00052F                     vfpfcnvrt@convarg:
  9024                           	callstack 0
  9025                           
  9026                           ; 4 bytes @ 0x2E
  9027   00052F                     	ds	4
  9028   000533                     vfpfcnvrt@done:
  9029                           	callstack 0
  9030                           
  9031                           ; 1 bytes @ 0x32
  9032   000533                     	ds	1
  9033   000534                     vfpfcnvrt@cp:
  9034                           	callstack 0
  9035                           
  9036                           ; 2 bytes @ 0x33
  9037   000534                     	ds	2
  9038   000536                     ?_vfprintf:
  9039                           	callstack 0
  9040   000536                     vfprintf@fp:
  9041                           	callstack 0
  9042                           
  9043                           ; 2 bytes @ 0x35
  9044   000536                     	ds	2
  9045   000538                     vfprintf@fmt:
  9046                           	callstack 0
  9047                           
  9048                           ; 2 bytes @ 0x37
  9049   000538                     	ds	2
  9050   00053A                     vfprintf@ap:
  9051                           	callstack 0
  9052                           
  9053                           ; 2 bytes @ 0x39
  9054   00053A                     	ds	2
  9055   00053C                     vfprintf@cfmt:
  9056                           	callstack 0
  9057   00053C                     
  9058                           ; 1 bytes @ 0x3B
  9059   00053C                     	ds	2
  9060   00053E                     ?_printf:
  9061                           	callstack 0
  9062   00053E                     printf@fmt:
  9063                           	callstack 0
  9064                           
  9065                           ; 2 bytes @ 0x3D
  9066   00053E                     	ds	14
  9067   00054C                     printf@ap:
  9068                           	callstack 0
  9069   00054C                     
  9070                           ; 1 bytes @ 0x4B
  9071   00054C                     	ds	2
  9072   00054E                     Nrf24_print_address_register@dev:
  9073                           	callstack 0
  9074   00054E                     Nrf24_print_byte_register@dev:
  9075                           	callstack 0
  9076   00054E                     ??_Nrf24_print_status:
  9077                           
  9078                           ; 1 bytes @ 0x4D
  9079   00054E                     	ds	1
  9080   00054F                     Nrf24_print_status@status:
  9081                           	callstack 0
  9082                           
  9083                           ; 1 bytes @ 0x4E
  9084   00054F                     	ds	1
  9085   000550                     Nrf24_print_address_register@name:
  9086                           	callstack 0
  9087   000550                     Nrf24_print_byte_register@name:
  9088                           	callstack 0
  9089                           
  9090                           ; 2 bytes @ 0x4F
  9091   000550                     	ds	2
  9092   000552                     Nrf24_print_address_register@reg:
  9093                           	callstack 0
  9094   000552                     Nrf24_print_byte_register@reg:
  9095                           	callstack 0
  9096                           
  9097                           ; 1 bytes @ 0x51
  9098   000552                     	ds	1
  9099   000553                     Nrf24_print_address_register@qty:
  9100                           	callstack 0
  9101   000553                     Nrf24_print_byte_register@qty:
  9102                           	callstack 0
  9103                           
  9104                           ; 1 bytes @ 0x52
  9105   000553                     	ds	1
  9106   000554                     Nrf24_print_byte_register@buffer:
  9107                           	callstack 0
  9108   000554                     ??_Nrf24_print_address_register:
  9109   000554                     
  9110                           ; 1 bytes @ 0x53
  9111   000554                     	ds	1
  9112   000555                     Nrf24_print_address_register@buffer:
  9113                           	callstack 0
  9114                           
  9115                           ; 5 bytes @ 0x54
  9116   000555                     	ds	5
  9117   00055A                     Nrf24_print_address_register@i:
  9118                           	callstack 0
  9119                           
  9120                           ; 2 bytes @ 0x59
  9121   00055A                     	ds	2
  9122   00055C                     Nrf24_printDetails@dev:
  9123                           	callstack 0
  9124                           
  9125                           ; 2 bytes @ 0x5B
  9126   00055C                     	ds	2
  9127   00055E                     
  9128                           ; 1 bytes @ 0x5D
  9129 ;;
  9130 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9131 ;;
  9132 ;; *************** function _main *****************
  9133 ;; Defined at:
  9134 ;;		line 58 in file "main.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels required when called: 11
  9154 ;; This function calls:
  9155 ;;		_SYSTEM_Initialize
  9156 ;;		_nrf_loop
  9157 ;; This function is called by:
  9158 ;;		Startup code after reset
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text0
  9163   01184E                     __ptext0:
  9164                           	callstack 0
  9165   01184E                     _main:
  9166                           	callstack 116
  9167   01184E                     
  9168                           ;main.c: 60:     SYSTEM_Initialize();
  9169   01184E  EC1E  F08C         	call	_SYSTEM_Initialize	;wreg free
  9170   011852                     
  9171                           ;main.c: 61:     (INTCON0bits.GIE = 1);
  9172   011852  8ED6               	bsf	214,7,c	;volatile
  9173   011854                     
  9174                           ;main.c: 63:  nrf_loop();
  9175   011854  EC3B  F084         	call	_nrf_loop	;wreg free
  9176   011858  EFFE  F0FF         	goto	start
  9177   01185C                     __end_of_main:
  9178                           	callstack 0
  9179                           
  9180 ;; *************** function _nrf_loop *****************
  9181 ;; Defined at:
  9182 ;;		line 18 in file "main.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;		None
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  msg             5   17[BANK5 ] volatile struct RacketMe
  9187 ;;  buf             8    7[BANK5 ] unsigned char [8]
  9188 ;;  dev             3   22[BANK5 ] struct .
  9189 ;;  ret             2   15[BANK5 ] int 
  9190 ;;  channel         1    0        unsigned char 
  9191 ;;  payload         1    0        unsigned char 
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  1    wreg      void 
  9194 ;; Registers used:
  9195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9202 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9204 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9205 ;;Total ram usage:       18 bytes
  9206 ;; Hardware stack levels used: 1
  9207 ;; Hardware stack levels required when called: 10
  9208 ;; This function calls:
  9209 ;;		_DELAY_milliseconds
  9210 ;;		_Nrf24_SetSpeedDataRates
  9211 ;;		_Nrf24_config
  9212 ;;		_Nrf24_dataReady
  9213 ;;		_Nrf24_getData
  9214 ;;		_Nrf24_init
  9215 ;;		_Nrf24_printDetails
  9216 ;;		_Nrf24_setRADDR
  9217 ;;		_Nrf24_setRetransmitDelay
  9218 ;;		_memcpy
  9219 ;; This function is called by:
  9220 ;;		_main
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text1
  9225   010876                     __ptext1:
  9226                           	callstack 0
  9227   010876                     _nrf_loop:
  9228                           	callstack 116
  9229   010876                     
  9230                           ;main.c: 20:  NRF24_t dev;;main.c: 21:  Nrf24_init(&dev);
  9231   010876  0ED2               	movlw	low nrf_loop@dev
  9232   010878  6E02               	movwf	Nrf24_init@dev^(0+1280),c
  9233   01087A  0E05               	movlw	high nrf_loop@dev
  9234   01087C  6E03               	movwf	(Nrf24_init@dev+1)^(0+1280),c
  9235   01087E  EC72  F08B         	call	_Nrf24_init	;wreg free
  9236   010882                     
  9237                           ;main.c: 24:  Nrf24_config(&dev, channel, payload);
  9238   010882  0ED2               	movlw	low nrf_loop@dev
  9239   010884  6E0E               	movwf	Nrf24_config@dev^(0+1280),c
  9240   010886  0E05               	movlw	high nrf_loop@dev
  9241   010888  6E0F               	movwf	(Nrf24_config@dev+1)^(0+1280),c
  9242   01088A  0E73               	movlw	115
  9243   01088C  6E10               	movwf	Nrf24_config@channel^(0+1280),c
  9244   01088E  0E08               	movlw	8
  9245   010890  6E11               	movwf	Nrf24_config@payload^(0+1280),c
  9246   010892  ECB1  F088         	call	_Nrf24_config	;wreg free
  9247   010896                     
  9248                           ;main.c: 26:  int ret = Nrf24_setRADDR(&dev, (uint8_t *)"FGHIJ");
  9249   010896  0ED2               	movlw	low nrf_loop@dev
  9250   010898  6E0B               	movwf	Nrf24_setRADDR@dev^(0+1280),c
  9251   01089A  0E05               	movlw	high nrf_loop@dev
  9252   01089C  6E0C               	movwf	(Nrf24_setRADDR@dev+1)^(0+1280),c
  9253   01089E  0EF4               	movlw	low STR_1
  9254   0108A0  6E0D               	movwf	Nrf24_setRADDR@adr^(0+1280),c
  9255   0108A2  0EFF               	movlw	high STR_1
  9256   0108A4  6E0E               	movwf	(Nrf24_setRADDR@adr+1)^(0+1280),c
  9257   0108A6  EC24  F088         	call	_Nrf24_setRADDR	;wreg free
  9258   0108AA  C50B  F5CB         	movff	?_Nrf24_setRADDR,nrf_loop@ret
  9259   0108AE  C50C  F5CC         	movff	?_Nrf24_setRADDR+1,nrf_loop@ret+1
  9260   0108B2                     
  9261                           ;main.c: 27:  if (ret != 0) {
  9262   0108B2  0105               	movlb	5	; () banked
  9263   0108B4  51CB               	movf	nrf_loop@ret& (0+255),w,b
  9264   0108B6  11CC               	iorwf	(nrf_loop@ret+1)& (0+255),w,b
  9265   0108B8  B4D8               	btfsc	status,2,c
  9266   0108BA  EF61  F084         	goto	u2191
  9267   0108BE  EF63  F084         	goto	u2190
  9268   0108C2                     u2191:
  9269   0108C2  EF6B  F084         	goto	l3290
  9270   0108C6                     u2190:
  9271   0108C6                     l3288:
  9272   0108C6  0E00               	movlw	0
  9273   0108C8  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9274   0108CA  0E01               	movlw	1
  9275   0108CC  6E01               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9276   0108CE  EC44  F08B         	call	_DELAY_milliseconds	;wreg free
  9277   0108D2  EF63  F084         	goto	l3288
  9278   0108D6                     l3290:
  9279                           
  9280                           ; BSR set to: 5
  9281                           ;main.c: 31:     Nrf24_SetSpeedDataRates(&dev, 0);
  9282   0108D6  0ED2               	movlw	low nrf_loop@dev
  9283   0108D8  6E0B               	movwf	Nrf24_SetSpeedDataRates@dev^(0+1280),c
  9284   0108DA  0E05               	movlw	high nrf_loop@dev
  9285   0108DC  6E0C               	movwf	(Nrf24_SetSpeedDataRates@dev+1)^(0+1280),c
  9286   0108DE  0E00               	movlw	0
  9287   0108E0  6E0D               	movwf	Nrf24_SetSpeedDataRates@val^(0+1280),c
  9288   0108E2  ECEF  F088         	call	_Nrf24_SetSpeedDataRates	;wreg free
  9289                           
  9290                           ;main.c: 32:  Nrf24_setRetransmitDelay(&dev, 100);
  9291   0108E6  0ED2               	movlw	low nrf_loop@dev
  9292   0108E8  6E0B               	movwf	Nrf24_setRetransmitDelay@dev^(0+1280),c
  9293   0108EA  0E05               	movlw	high nrf_loop@dev
  9294   0108EC  6E0C               	movwf	(Nrf24_setRetransmitDelay@dev+1)^(0+1280),c
  9295   0108EE  0E64               	movlw	100
  9296   0108F0  6E0D               	movwf	Nrf24_setRetransmitDelay@val^(0+1280),c
  9297   0108F2  EC5C  F08B         	call	_Nrf24_setRetransmitDelay	;wreg free
  9298   0108F6                     
  9299                           ;main.c: 35:  Nrf24_printDetails(&dev);
  9300   0108F6  0ED2               	movlw	low nrf_loop@dev
  9301   0108F8  6E5C               	movwf	Nrf24_printDetails@dev^(0+1280),c
  9302   0108FA  0E05               	movlw	high nrf_loop@dev
  9303   0108FC  6E5D               	movwf	(Nrf24_printDetails@dev+1)^(0+1280),c
  9304   0108FE  ECC8  F081         	call	_Nrf24_printDetails	;wreg free
  9305   010902                     l3294:
  9306                           
  9307                           ;main.c: 41:   if (Nrf24_dataReady(&dev) == 0) break;
  9308   010902  0ED2               	movlw	low nrf_loop@dev
  9309   010904  6E0E               	movwf	Nrf24_dataReady@dev^(0+1280),c
  9310   010906  0E05               	movlw	high nrf_loop@dev
  9311   010908  6E0F               	movwf	(Nrf24_dataReady@dev+1)^(0+1280),c
  9312   01090A  ECB1  F08B         	call	_Nrf24_dataReady	;wreg free
  9313   01090E  0900               	iorlw	0
  9314   010910  A4D8               	btfss	status,2,c
  9315   010912  EF8D  F084         	goto	u2201
  9316   010916  EF8F  F084         	goto	u2200
  9317   01091A                     u2201:
  9318   01091A  EF91  F084         	goto	l3298
  9319   01091E                     u2200:
  9320   01091E  EF9D  F084         	goto	l3300
  9321   010922                     l3298:
  9322                           
  9323                           ;main.c: 42:   Nrf24_getData(&dev, buf);
  9324   010922  0ED2               	movlw	low nrf_loop@dev
  9325   010924  6E07               	movwf	Nrf24_getData@dev^(0+1280),c
  9326   010926  0E05               	movlw	high nrf_loop@dev
  9327   010928  6E08               	movwf	(Nrf24_getData@dev+1)^(0+1280),c
  9328   01092A  0EC3               	movlw	low nrf_loop@buf
  9329   01092C  6E09               	movwf	Nrf24_getData@data^(0+1280),c
  9330   01092E  0E05               	movlw	high nrf_loop@buf
  9331   010930  6E0A               	movwf	(Nrf24_getData@data+1)^(0+1280),c
  9332   010932  EC13  F08B         	call	_Nrf24_getData	;wreg free
  9333   010936  EF81  F084         	goto	l3294
  9334   01093A                     l3300:
  9335                           
  9336                           ;main.c: 46:         volatile RacketMessage_t msg;;main.c: 49:   if (Nrf24_dataReady(&de
      +                          v)) {
  9337   01093A  0ED2               	movlw	low nrf_loop@dev
  9338   01093C  6E0E               	movwf	Nrf24_dataReady@dev^(0+1280),c
  9339   01093E  0E05               	movlw	high nrf_loop@dev
  9340   010940  6E0F               	movwf	(Nrf24_dataReady@dev+1)^(0+1280),c
  9341   010942  ECB1  F08B         	call	_Nrf24_dataReady	;wreg free
  9342   010946  0900               	iorlw	0
  9343   010948  B4D8               	btfsc	status,2,c
  9344   01094A  EFA9  F084         	goto	u2211
  9345   01094E  EFAB  F084         	goto	u2210
  9346   010952                     u2211:
  9347   010952  EFC3  F084         	goto	l3304
  9348   010956                     u2210:
  9349   010956                     
  9350                           ;main.c: 50:    Nrf24_getData(&dev, buf);
  9351   010956  0ED2               	movlw	low nrf_loop@dev
  9352   010958  6E07               	movwf	Nrf24_getData@dev^(0+1280),c
  9353   01095A  0E05               	movlw	high nrf_loop@dev
  9354   01095C  6E08               	movwf	(Nrf24_getData@dev+1)^(0+1280),c
  9355   01095E  0EC3               	movlw	low nrf_loop@buf
  9356   010960  6E09               	movwf	Nrf24_getData@data^(0+1280),c
  9357   010962  0E05               	movlw	high nrf_loop@buf
  9358   010964  6E0A               	movwf	(Nrf24_getData@data+1)^(0+1280),c
  9359   010966  EC13  F08B         	call	_Nrf24_getData	;wreg free
  9360                           
  9361                           ;main.c: 51:             memcpy(&msg, buf, sizeof(RacketMessage_t));
  9362   01096A  0ECD               	movlw	low nrf_loop@msg
  9363   01096C  6E01               	movwf	memcpy@d1^(0+1280),c
  9364   01096E  0E05               	movlw	high nrf_loop@msg
  9365   010970  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
  9366   010972  0EC3               	movlw	low nrf_loop@buf
  9367   010974  6E03               	movwf	memcpy@s1^(0+1280),c
  9368   010976  0E05               	movlw	high nrf_loop@buf
  9369   010978  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
  9370   01097A  0E00               	movlw	0
  9371   01097C  6E06               	movwf	(memcpy@n+1)^(0+1280),c
  9372   01097E  0E05               	movlw	5
  9373   010980  6E05               	movwf	memcpy@n^(0+1280),c
  9374   010982  EC04  F08A         	call	_memcpy	;wreg free
  9375   010986                     l3304:
  9376                           
  9377                           ;main.c: 53:   DELAY_milliseconds(1);
  9378   010986  0E00               	movlw	0
  9379   010988  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9380   01098A  0E01               	movlw	1
  9381   01098C  6E01               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9382   01098E  EC44  F08B         	call	_DELAY_milliseconds	;wreg free
  9383   010992  EF9D  F084         	goto	l3300
  9384   010996  0012               	return		;funcret
  9385   010998                     __end_of_nrf_loop:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _memcpy *****************
  9389 ;; Defined at:
  9390 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  d1              2    0[COMRAM] PTR void 
  9393 ;;		 -> nrf_loop@msg(5), 
  9394 ;;  s1              2    2[COMRAM] PTR const void 
  9395 ;;		 -> nrf_loop@buf(8), 
  9396 ;;  n               2    4[COMRAM] unsigned int 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  s               2    8[COMRAM] PTR const unsigned char 
  9399 ;;		 -> nrf_loop@buf(8), 
  9400 ;;  d               2    6[COMRAM] PTR unsigned char 
  9401 ;;		 -> nrf_loop@msg(5), 
  9402 ;;  tmp             1   10[COMRAM] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  2    0[COMRAM] PTR void 
  9405 ;; Registers used:
  9406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9412 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9413 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;Total ram usage:       11 bytes
  9417 ;; Hardware stack levels used: 1
  9418 ;; This function calls:
  9419 ;;		Nothing
  9420 ;; This function is called by:
  9421 ;;		_nrf_loop
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text2
  9426   011408                     __ptext2:
  9427                           	callstack 0
  9428   011408                     _memcpy:
  9429                           	callstack 125
  9430   011408  C503  F509         	movff	memcpy@s1,memcpy@s
  9431   01140C  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
  9432   011410  C501  F507         	movff	memcpy@d1,memcpy@d
  9433   011414  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
  9434   011418  EF1E  F08A         	goto	l3270
  9435   01141C                     l3262:
  9436   01141C  C509  F4D9         	movff	memcpy@s,fsr2l
  9437   011420  C50A  F4DA         	movff	memcpy@s+1,fsr2h
  9438   011424  50DF               	movf	indf2,w,c
  9439   011426  6E0B               	movwf	memcpy@tmp^(0+1280),c
  9440   011428  4A09               	infsnz	memcpy@s^(0+1280),f,c
  9441   01142A  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
  9442   01142C  C507  F4D9         	movff	memcpy@d,fsr2l
  9443   011430  C508  F4DA         	movff	memcpy@d+1,fsr2h
  9444   011434  C50B  F4DF         	movff	memcpy@tmp,indf2
  9445   011438  4A07               	infsnz	memcpy@d^(0+1280),f,c
  9446   01143A  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
  9447   01143C                     l3270:
  9448   01143C  0605               	decf	memcpy@n^(0+1280),f,c
  9449   01143E  A0D8               	btfss	status,0,c
  9450   011440  0606               	decf	(memcpy@n+1)^(0+1280),f,c
  9451   011442  2805               	incf	memcpy@n^(0+1280),w,c
  9452   011444  E106               	bnz	u2181
  9453   011446  2806               	incf	(memcpy@n+1)^(0+1280),w,c
  9454   011448  A4D8               	btfss	status,2,c
  9455   01144A  EF29  F08A         	goto	u2181
  9456   01144E  EF2B  F08A         	goto	u2180
  9457   011452                     u2181:
  9458   011452  EF0E  F08A         	goto	l3262
  9459   011456                     u2180:
  9460   011456  0012               	return		;funcret
  9461   011458                     __end_of_memcpy:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function _Nrf24_setRetransmitDelay *****************
  9465 ;; Defined at:
  9466 ;;		line 364 in file "mirf.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  dev             2   10[COMRAM] PTR struct .
  9469 ;;		 -> nrf_loop@dev(3), 
  9470 ;;  val             1   12[COMRAM] unsigned char 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;  value           1   13[COMRAM] unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9482 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9486 ;;Total ram usage:        4 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 3
  9489 ;; This function calls:
  9490 ;;		_Nrf24_configRegister
  9491 ;;		_Nrf24_readRegister
  9492 ;; This function is called by:
  9493 ;;		_nrf_loop
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text3
  9498   0116B8                     __ptext3:
  9499                           	callstack 0
  9500   0116B8                     _Nrf24_setRetransmitDelay:
  9501                           	callstack 122
  9502   0116B8                     
  9503                           ;mirf.c: 364: void Nrf24_setRetransmitDelay(NRF24_t * dev, uint8_t val);mirf.c: 365: {;m
      +                          irf.c: 366:  uint8_t value;;mirf.c: 367:  Nrf24_readRegister(0x04, &value, 1);
  9504   0116B8  0E0E               	movlw	low Nrf24_setRetransmitDelay@value
  9505   0116BA  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
  9506   0116BC  0E05               	movlw	high Nrf24_setRetransmitDelay@value
  9507   0116BE  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
  9508   0116C0  0E01               	movlw	1
  9509   0116C2  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
  9510   0116C4  0E04               	movlw	4
  9511   0116C6  EC2C  F08B         	call	_Nrf24_readRegister
  9512   0116CA                     
  9513                           ;mirf.c: 368:  value = value & 0x0F;
  9514   0116CA  500E               	movf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
  9515   0116CC  0B0F               	andlw	15
  9516   0116CE  6E0E               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
  9517   0116D0                     
  9518                           ;mirf.c: 369:  value = value | (val << 4);
  9519   0116D0  380D               	swapf	Nrf24_setRetransmitDelay@val^(0+1280),w,c
  9520   0116D2  0BF0               	andlw	240
  9521   0116D4  100E               	iorwf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
  9522   0116D6  6E0E               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
  9523   0116D8                     
  9524                           ;mirf.c: 370:  Nrf24_configRegister(0x04, value);
  9525   0116D8  C50E  F503         	movff	Nrf24_setRetransmitDelay@value,Nrf24_configRegister@value
  9526   0116DC  0E04               	movlw	4
  9527   0116DE  ECF1  F08B         	call	_Nrf24_configRegister
  9528   0116E2  0012               	return		;funcret
  9529   0116E4                     __end_of_Nrf24_setRetransmitDelay:
  9530                           	callstack 0
  9531                           
  9532 ;; *************** function _Nrf24_setRADDR *****************
  9533 ;; Defined at:
  9534 ;;		line 102 in file "mirf.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  dev             2   10[COMRAM] PTR struct .
  9537 ;;		 -> nrf_loop@dev(3), 
  9538 ;;  adr             2   12[COMRAM] PTR unsigned char 
  9539 ;;		 -> STR_1(6), 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;  i               2   24[COMRAM] int 
  9542 ;;  buffer          5   17[COMRAM] unsigned char [5]
  9543 ;;  ret             2   22[COMRAM] int 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  2   10[COMRAM] int 
  9546 ;; Registers used:
  9547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9554 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9555 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9556 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;Total ram usage:       16 bytes
  9558 ;; Hardware stack levels used: 1
  9559 ;; Hardware stack levels required when called: 3
  9560 ;; This function calls:
  9561 ;;		_Nrf24_readRegister
  9562 ;;		_Nrf24_writeRegister
  9563 ;; This function is called by:
  9564 ;;		_nrf_loop
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           	psect	text4
  9569   011048                     __ptext4:
  9570                           	callstack 0
  9571   011048                     _Nrf24_setRADDR:
  9572                           	callstack 122
  9573   011048                     
  9574                           ;mirf.c: 102: int Nrf24_setRADDR(NRF24_t * dev, uint8_t * adr);mirf.c: 103: {;mirf.c: 10
      +                          4:  int ret = 0;
  9575   011048  0E00               	movlw	0
  9576   01104A  6E18               	movwf	(Nrf24_setRADDR@ret+1)^(0+1280),c
  9577   01104C  0E00               	movlw	0
  9578   01104E  6E17               	movwf	Nrf24_setRADDR@ret^(0+1280),c
  9579   011050                     
  9580                           ;mirf.c: 105:  Nrf24_writeRegister(0x0B, adr, 5);
  9581   011050  C50D  F507         	movff	Nrf24_setRADDR@adr,Nrf24_writeRegister@value
  9582   011054  C50E  F508         	movff	Nrf24_setRADDR@adr+1,Nrf24_writeRegister@value+1
  9583   011058  0E05               	movlw	5
  9584   01105A  6E09               	movwf	Nrf24_writeRegister@len^(0+1280),c
  9585   01105C  0E0B               	movlw	11
  9586   01105E  ECFA  F08A         	call	_Nrf24_writeRegister
  9587   011062                     
  9588                           ;mirf.c: 106:  uint8_t buffer[5];;mirf.c: 107:  Nrf24_readRegister(0x0B, buffer, sizeof(
      +                          buffer));
  9589   011062  0E12               	movlw	low Nrf24_setRADDR@buffer
  9590   011064  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
  9591   011066  0E05               	movlw	high Nrf24_setRADDR@buffer
  9592   011068  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
  9593   01106A  0E05               	movlw	5
  9594   01106C  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
  9595   01106E  0E0B               	movlw	11
  9596   011070  EC2C  F08B         	call	_Nrf24_readRegister
  9597   011074                     
  9598                           ;mirf.c: 108:  for (int i=0;i<5;i++) {
  9599   011074  0E00               	movlw	0
  9600   011076  6E1A               	movwf	(Nrf24_setRADDR@i+1)^(0+1280),c
  9601   011078  0E00               	movlw	0
  9602   01107A  6E19               	movwf	Nrf24_setRADDR@i^(0+1280),c
  9603   01107C                     l3200:
  9604                           
  9605                           ;mirf.c: 109:   if (adr[i] != buffer[i]) ret = -1;
  9606   01107C  0E12               	movlw	low Nrf24_setRADDR@buffer
  9607   01107E  2419               	addwf	Nrf24_setRADDR@i^(0+1280),w,c
  9608   011080  6ED9               	movwf	fsr2l,c
  9609   011082  0E05               	movlw	high Nrf24_setRADDR@buffer
  9610   011084  201A               	addwfc	(Nrf24_setRADDR@i+1)^(0+1280),w,c
  9611   011086  6EDA               	movwf	fsr2h,c
  9612   011088  5019               	movf	Nrf24_setRADDR@i^(0+1280),w,c
  9613   01108A  240D               	addwf	Nrf24_setRADDR@adr^(0+1280),w,c
  9614   01108C  6E10               	movwf	(??_Nrf24_setRADDR+1)^(0+1280),c
  9615   01108E  501A               	movf	(Nrf24_setRADDR@i+1)^(0+1280),w,c
  9616   011090  200E               	addwfc	(Nrf24_setRADDR@adr+1)^(0+1280),w,c
  9617   011092  6E11               	movwf	(??_Nrf24_setRADDR+2)^(0+1280),c
  9618   011094  C510  F4F6         	movff	??_Nrf24_setRADDR+1,tblptrl
  9619   011098  C511  F4F7         	movff	??_Nrf24_setRADDR+2,tblptrh
  9620   01109C                     	if	0	;tblptru may be non-zero
  9621   01109C                     	endif
  9622   01109C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9623   01109C  0E00               	movlw	low (__mediumconst shr (0+16))
  9624   01109E  6EF8               	movwf	tblptru,c
  9625   0110A0                     	endif
  9626   0110A0  50DE               	movf	postinc2,w,c
  9627   0110A2  0009               	tblrd		*+
  9628   0110A4  18F5               	xorwf	tablat,w,c
  9629   0110A6  B4D8               	btfsc	status,2,c
  9630   0110A8  EF58  F088         	goto	u2131
  9631   0110AC  EF5A  F088         	goto	u2130
  9632   0110B0                     u2131:
  9633   0110B0  EF5C  F088         	goto	l3204
  9634   0110B4                     u2130:
  9635   0110B4  6817               	setf	Nrf24_setRADDR@ret^(0+1280),c
  9636   0110B6  6818               	setf	(Nrf24_setRADDR@ret+1)^(0+1280),c
  9637   0110B8                     l3204:
  9638                           
  9639                           ;mirf.c: 110:  }
  9640   0110B8  4A19               	infsnz	Nrf24_setRADDR@i^(0+1280),f,c
  9641   0110BA  2A1A               	incf	(Nrf24_setRADDR@i+1)^(0+1280),f,c
  9642   0110BC  BE1A               	btfsc	(Nrf24_setRADDR@i+1)^(0+1280),7,c
  9643   0110BE  EF6A  F088         	goto	u2141
  9644   0110C2  501A               	movf	(Nrf24_setRADDR@i+1)^(0+1280),w,c
  9645   0110C4  E109               	bnz	u2140
  9646   0110C6  0E05               	movlw	5
  9647   0110C8  5C19               	subwf	Nrf24_setRADDR@i^(0+1280),w,c
  9648   0110CA  A0D8               	btfss	status,0,c
  9649   0110CC  EF6A  F088         	goto	u2141
  9650   0110D0  EF6C  F088         	goto	u2140
  9651   0110D4                     u2141:
  9652   0110D4  EF3E  F088         	goto	l3200
  9653   0110D8                     u2140:
  9654   0110D8                     
  9655                           ;mirf.c: 111:  return ret;
  9656   0110D8  C517  F50B         	movff	Nrf24_setRADDR@ret,?_Nrf24_setRADDR
  9657   0110DC  C518  F50C         	movff	Nrf24_setRADDR@ret+1,?_Nrf24_setRADDR+1
  9658   0110E0  0012               	return		;funcret
  9659   0110E2                     __end_of_Nrf24_setRADDR:
  9660                           	callstack 0
  9661                           
  9662 ;; *************** function _Nrf24_writeRegister *****************
  9663 ;; Defined at:
  9664 ;;		line 218 in file "mirf.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;  reg             1    wreg     unsigned char 
  9667 ;;  value           2    6[COMRAM] PTR unsigned char 
  9668 ;;		 -> STR_1(6), 
  9669 ;;  len             1    8[COMRAM] unsigned char 
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;  reg             1    9[COMRAM] unsigned char 
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9681 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9684 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9685 ;;Total ram usage:        4 bytes
  9686 ;; Hardware stack levels used: 1
  9687 ;; Hardware stack levels required when called: 2
  9688 ;; This function calls:
  9689 ;;		_SPI1_ByteExchange
  9690 ;;		_SPI_write_buff
  9691 ;; This function is called by:
  9692 ;;		_Nrf24_setRADDR
  9693 ;;		_Nrf24_setTADDR
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text5
  9698   0115F4                     __ptext5:
  9699                           	callstack 0
  9700   0115F4                     _Nrf24_writeRegister:
  9701                           	callstack 122
  9702                           
  9703                           ;incstack = 0
  9704                           ;Nrf24_writeRegister@reg stored from wreg
  9705   0115F4  6E0A               	movwf	Nrf24_writeRegister@reg^(0+1280),c
  9706   0115F6                     
  9707                           ;mirf.c: 218: void Nrf24_writeRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c
      +                          : 219: {;mirf.c: 220:     if(len) {
  9708   0115F6  5009               	movf	Nrf24_writeRegister@len^(0+1280),w,c
  9709   0115F8  B4D8               	btfsc	status,2,c
  9710   0115FA  EF01  F08B         	goto	u1951
  9711   0115FE  EF03  F08B         	goto	u1950
  9712   011602                     u1951:
  9713   011602  EF12  F08B         	goto	l568
  9714   011606                     u1950:
  9715   011606  92C0               	bcf	192,1,c	;volatile
  9716   011608                     
  9717                           ;mirf.c: 222:         SPI1_ByteExchange(0x20 | (0x1F & reg));
  9718   011608  500A               	movf	Nrf24_writeRegister@reg^(0+1280),w,c
  9719   01160A  0B1F               	andlw	31
  9720   01160C  0920               	iorlw	32
  9721   01160E  EC88  F08B         	call	_SPI1_ByteExchange
  9722   011612                     
  9723                           ;mirf.c: 223:         SPI_write_buff(value, len);
  9724   011612  C507  F503         	movff	Nrf24_writeRegister@value,SPI_write_buff@buffer
  9725   011616  C508  F504         	movff	Nrf24_writeRegister@value+1,SPI_write_buff@buffer+1
  9726   01161A  C509  F505         	movff	Nrf24_writeRegister@len,SPI_write_buff@bytes
  9727   01161E  EC2C  F08A         	call	_SPI_write_buff	;wreg free
  9728   011622  82C0               	bsf	192,1,c	;volatile
  9729   011624                     l568:
  9730   011624  0012               	return		;funcret
  9731   011626                     __end_of_Nrf24_writeRegister:
  9732                           	callstack 0
  9733                           
  9734 ;; *************** function _SPI_write_buff *****************
  9735 ;; Defined at:
  9736 ;;		line 54 in file "mirf.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  9739 ;;		 -> STR_1(6), 
  9740 ;;  bytes           1    4[COMRAM] unsigned char 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;  i               1    5[COMRAM] unsigned char 
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      void 
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9752 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9756 ;;Total ram usage:        4 bytes
  9757 ;; Hardware stack levels used: 1
  9758 ;; Hardware stack levels required when called: 1
  9759 ;; This function calls:
  9760 ;;		_DELAY_microseconds
  9761 ;;		_SPI1_ByteExchange
  9762 ;; This function is called by:
  9763 ;;		_Nrf24_writeRegister
  9764 ;;		_Nrf24_send
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           	psect	text6
  9769   011458                     __ptext6:
  9770                           	callstack 0
  9771   011458                     _SPI_write_buff:
  9772                           	callstack 122
  9773   011458  92C0               	bcf	192,1,c	;volatile
  9774   01145A                     
  9775                           ;mirf.c: 56:     unsigned char i;;mirf.c: 57:     for (i = 0; i < bytes; i++) {
  9776   01145A  6A06               	clrf	SPI_write_buff@i^(0+1280),c
  9777   01145C  EF43  F08A         	goto	l2996
  9778   011460                     l2988:
  9779                           
  9780                           ;mirf.c: 58:         SPI1_ByteExchange(*buffer);
  9781   011460  C503  F4F6         	movff	SPI_write_buff@buffer,tblptrl
  9782   011464  C504  F4F7         	movff	SPI_write_buff@buffer+1,tblptrh
  9783   011468                     	if	0	;tblptru may be non-zero
  9784   011468                     	endif
  9785   011468                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9786   011468  0E00               	movlw	low (__mediumconst shr (0+16))
  9787   01146A  6EF8               	movwf	tblptru,c
  9788   01146C                     	endif
  9789   01146C  0008               	tblrd		*
  9790   01146E  50F5               	movf	tablat,w,c
  9791   011470  EC88  F08B         	call	_SPI1_ByteExchange
  9792   011474                     
  9793                           ;mirf.c: 59:         buffer++;
  9794   011474  4A03               	infsnz	SPI_write_buff@buffer^(0+1280),f,c
  9795   011476  2A04               	incf	(SPI_write_buff@buffer+1)^(0+1280),f,c
  9796   011478                     
  9797                           ;mirf.c: 60:         DELAY_microseconds(10);
  9798   011478  0E00               	movlw	0
  9799   01147A  6E02               	movwf	(DELAY_microseconds@microseconds+1)^(0+1280),c
  9800   01147C  0E0A               	movlw	10
  9801   01147E  6E01               	movwf	DELAY_microseconds@microseconds^(0+1280),c
  9802   011480  EC89  F089         	call	_DELAY_microseconds	;wreg free
  9803   011484                     
  9804                           ;mirf.c: 61:     }
  9805   011484  2A06               	incf	SPI_write_buff@i^(0+1280),f,c
  9806   011486                     l2996:
  9807   011486  5005               	movf	SPI_write_buff@bytes^(0+1280),w,c
  9808   011488  5C06               	subwf	SPI_write_buff@i^(0+1280),w,c
  9809   01148A  A0D8               	btfss	status,0,c
  9810   01148C  EF4A  F08A         	goto	u1921
  9811   011490  EF4C  F08A         	goto	u1920
  9812   011494                     u1921:
  9813   011494  EF30  F08A         	goto	l2988
  9814   011498                     u1920:
  9815   011498  82C0               	bsf	192,1,c	;volatile
  9816   01149A  0012               	return		;funcret
  9817   01149C                     __end_of_SPI_write_buff:
  9818                           	callstack 0
  9819                           
  9820 ;; *************** function _DELAY_microseconds *****************
  9821 ;; Defined at:
  9822 ;;		line 43 in file "mcc_generated_files/timer/src/delay.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  microseconds    2    0[COMRAM] unsigned short 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9840 ;;Total ram usage:        2 bytes
  9841 ;; Hardware stack levels used: 1
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_SPI_write_buff
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text7
  9850   011312                     __ptext7:
  9851                           	callstack 0
  9852   011312                     _DELAY_microseconds:
  9853                           	callstack 122
  9854   011312                     
  9855                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9856   011312  EF93  F089         	goto	l2964
  9857   011316                     l2960:
  9858                           
  9859                           ;mcc_generated_files/timer/src/delay.c: 45:     {;mcc_generated_files/timer/src/delay.c:
      +                           46:         _delay((unsigned long)((32)*(64000000U/4000000.0)));
  9860   011316  0EAA               	movlw	170
  9861   011318                     u2437:
  9862   011318  2EE8               	decfsz	wreg,f,c
  9863   01131A  D7FE               	bra	u2437
  9864   01131C  D000               	nop2	
  9865   01131E                     
  9866                           ;mcc_generated_files/timer/src/delay.c: 47:         microseconds -= 32;
  9867   01131E  0E20               	movlw	32
  9868   011320  5E01               	subwf	DELAY_microseconds@microseconds^(0+1280),f,c
  9869   011322  0E00               	movlw	0
  9870   011324  5A02               	subwfb	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9871   011326                     l2964:
  9872                           
  9873                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9874   011326  5002               	movf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9875   011328  E107               	bnz	u1881
  9876   01132A  0E20               	movlw	32
  9877   01132C  5C01               	subwf	DELAY_microseconds@microseconds^(0+1280),w,c
  9878   01132E  B0D8               	btfsc	status,0,c
  9879   011330  EF9C  F089         	goto	u1881
  9880   011334  EF9E  F089         	goto	u1880
  9881   011338                     u1881:
  9882   011338  EF8B  F089         	goto	l2960
  9883   01133C                     u1880:
  9884   01133C  EFA4  F089         	goto	l2968
  9885   011340                     l2966:
  9886                           
  9887                           ;mcc_generated_files/timer/src/delay.c: 51:     {;mcc_generated_files/timer/src/delay.c:
      +                           52:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
  9888   011340  0E05               	movlw	5
  9889   011342                     u2447:
  9890   011342  2EE8               	decfsz	wreg,f,c
  9891   011344  D7FE               	bra	u2447
  9892   011346  0000               	nop	
  9893   011348                     l2968:
  9894                           
  9895                           ;mcc_generated_files/timer/src/delay.c: 50:     while(microseconds--)
  9896   011348  0601               	decf	DELAY_microseconds@microseconds^(0+1280),f,c
  9897   01134A  A0D8               	btfss	status,0,c
  9898   01134C  0602               	decf	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9899   01134E  2801               	incf	DELAY_microseconds@microseconds^(0+1280),w,c
  9900   011350  E106               	bnz	u1891
  9901   011352  2802               	incf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9902   011354  A4D8               	btfss	status,2,c
  9903   011356  EFAF  F089         	goto	u1891
  9904   01135A  EFB1  F089         	goto	u1890
  9905   01135E                     u1891:
  9906   01135E  EFA0  F089         	goto	l2966
  9907   011362                     u1890:
  9908   011362  0012               	return		;funcret
  9909   011364                     __end_of_DELAY_microseconds:
  9910                           	callstack 0
  9911                           
  9912 ;; *************** function _Nrf24_printDetails *****************
  9913 ;; Defined at:
  9914 ;;		line 374 in file "mirf.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  dev             2   91[COMRAM] PTR struct .
  9917 ;;		 -> nrf_loop@dev(3), 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;  delay           2    4[BANK5 ] short 
  9920 ;;  retransmit      1    6[BANK5 ] unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;Total ram usage:        9 bytes
  9935 ;; Hardware stack levels used: 1
  9936 ;; Hardware stack levels required when called: 9
  9937 ;; This function calls:
  9938 ;;		_Nrf24_getCRCLength
  9939 ;;		_Nrf24_getDataRate
  9940 ;;		_Nrf24_getPALevel
  9941 ;;		_Nrf24_getRetransmitDelay
  9942 ;;		_Nrf24_getStatus
  9943 ;;		_Nrf24_print_address_register
  9944 ;;		_Nrf24_print_byte_register
  9945 ;;		_Nrf24_print_status
  9946 ;;		_printf
  9947 ;; This function is called by:
  9948 ;;		_nrf_loop
  9949 ;; This function uses a non-reentrant model
  9950 ;;
  9951                           
  9952                           	psect	text8
  9953   010390                     __ptext8:
  9954                           	callstack 0
  9955   010390                     _Nrf24_printDetails:
  9956                           	callstack 116
  9957   010390                     
  9958                           ;mirf.c: 374: void Nrf24_printDetails(NRF24_t * dev);mirf.c: 375: {;mirf.c: 376:  printf
      +                          ("================ NRF Configuration ================\n");
  9959   010390  0EFD               	movlw	low STR_2
  9960   010392  6E3E               	movwf	printf@fmt^(0+1280),c
  9961   010394  0EFE               	movlw	high STR_2
  9962   010396  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
  9963   010398  EC9E  F08B         	call	_printf	;wreg free
  9964                           
  9965                           ;mirf.c: 378:  Nrf24_print_status(Nrf24_getStatus(dev));
  9966   01039C  C55C  F50B         	movff	Nrf24_printDetails@dev,Nrf24_getStatus@dev
  9967   0103A0  C55D  F50C         	movff	Nrf24_printDetails@dev+1,Nrf24_getStatus@dev+1
  9968   0103A4  EC09  F08C         	call	_Nrf24_getStatus	;wreg free
  9969   0103A8  EC71  F088         	call	_Nrf24_print_status
  9970                           
  9971                           ;mirf.c: 380:  Nrf24_print_address_register(dev, "RX_ADDR_P0-1", 0x0A, 2);
  9972   0103AC  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
  9973   0103B0  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
  9974   0103B4  0E88               	movlw	low STR_3
  9975   0103B6  6E50               	movwf	Nrf24_print_address_register@name^(0+1280),c
  9976   0103B8  0EFF               	movlw	high STR_3
  9977   0103BA  6E51               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
  9978   0103BC  0E0A               	movlw	10
  9979   0103BE  6E52               	movwf	Nrf24_print_address_register@reg^(0+1280),c
  9980   0103C0  0E02               	movlw	2
  9981   0103C2  6E53               	movwf	Nrf24_print_address_register@qty^(0+1280),c
  9982   0103C4  EC36  F087         	call	_Nrf24_print_address_register	;wreg free
  9983                           
  9984                           ;mirf.c: 381:  Nrf24_print_byte_register(dev, "RX_ADDR_P2-5", 0x0C, 4);
  9985   0103C8  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9986   0103CC  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9987   0103D0  0E95               	movlw	low STR_4
  9988   0103D2  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9989   0103D4  0EFF               	movlw	high STR_4
  9990   0103D6  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9991   0103D8  0E0C               	movlw	12
  9992   0103DA  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9993   0103DC  0E04               	movlw	4
  9994   0103DE  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9995   0103E0  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
  9996                           
  9997                           ;mirf.c: 382:  Nrf24_print_address_register(dev, "TX_ADDR\t", 0x10, 1);
  9998   0103E4  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
  9999   0103E8  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 10000   0103EC  0EB7               	movlw	low STR_5
 10001   0103EE  6E50               	movwf	Nrf24_print_address_register@name^(0+1280),c
 10002   0103F0  0EFF               	movlw	high STR_5
 10003   0103F2  6E51               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
 10004   0103F4  0E10               	movlw	16
 10005   0103F6  6E52               	movwf	Nrf24_print_address_register@reg^(0+1280),c
 10006   0103F8  0E01               	movlw	1
 10007   0103FA  6E53               	movwf	Nrf24_print_address_register@qty^(0+1280),c
 10008   0103FC  EC36  F087         	call	_Nrf24_print_address_register	;wreg free
 10009                           
 10010                           ;mirf.c: 384:  Nrf24_print_byte_register(dev, "RX_PW_P0-6", 0x11, 6);
 10011   010400  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10012   010404  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10013   010408  0EA2               	movlw	low STR_6
 10014   01040A  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10015   01040C  0EFF               	movlw	high STR_6
 10016   01040E  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10017   010410  0E11               	movlw	17
 10018   010412  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10019   010414  0E06               	movlw	6
 10020   010416  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10021   010418  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
 10022                           
 10023                           ;mirf.c: 385:  Nrf24_print_byte_register(dev, "EN_AA\t", 0x01, 1);
 10024   01041C  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10025   010420  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10026   010424  0EE0               	movlw	low STR_7
 10027   010426  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10028   010428  0EFF               	movlw	high STR_7
 10029   01042A  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10030   01042C  0E01               	movlw	1
 10031   01042E  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10032   010430  0E01               	movlw	1
 10033   010432  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10034   010434  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
 10035                           
 10036                           ;mirf.c: 386:  Nrf24_print_byte_register(dev, "EN_RXADDR", 0x02, 1);
 10037   010438  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10038   01043C  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10039   010440  0EAD               	movlw	low STR_8
 10040   010442  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10041   010444  0EFF               	movlw	high STR_8
 10042   010446  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10043   010448  0E02               	movlw	2
 10044   01044A  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10045   01044C  0E01               	movlw	1
 10046   01044E  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10047   010450  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
 10048                           
 10049                           ;mirf.c: 387:  Nrf24_print_byte_register(dev, "RF_CH\t", 0x05, 1);
 10050   010454  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10051   010458  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10052   01045C  0EE7               	movlw	low STR_9
 10053   01045E  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10054   010460  0EFF               	movlw	high STR_9
 10055   010462  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10056   010464  0E05               	movlw	5
 10057   010466  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10058   010468  0E01               	movlw	1
 10059   01046A  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10060   01046C  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
 10061                           
 10062                           ;mirf.c: 388:  Nrf24_print_byte_register(dev, "RF_SETUP", 0x06, 1);
 10063   010470  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10064   010474  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10065   010478  0EC0               	movlw	low STR_10
 10066   01047A  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10067   01047C  0EFF               	movlw	high STR_10
 10068   01047E  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10069   010480  0E06               	movlw	6
 10070   010482  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10071   010484  0E01               	movlw	1
 10072   010486  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10073   010488  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
 10074                           
 10075                           ;mirf.c: 389:  Nrf24_print_byte_register(dev, "CONFIG\t", 0x00, 1);
 10076   01048C  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10077   010490  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10078   010494  0EC9               	movlw	low STR_11
 10079   010496  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10080   010498  0EFF               	movlw	high STR_11
 10081   01049A  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10082   01049C  0E00               	movlw	0
 10083   01049E  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10084   0104A0  0E01               	movlw	1
 10085   0104A2  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10086   0104A4  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
 10087                           
 10088                           ;mirf.c: 390:  Nrf24_print_byte_register(dev, "DYNPD/FEATURE", 0x1C, 2);
 10089   0104A8  C55C  F54E         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10090   0104AC  C55D  F54F         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10091   0104B0  0E7A               	movlw	low STR_12
 10092   0104B2  6E50               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10093   0104B4  0EFF               	movlw	high STR_12
 10094   0104B6  6E51               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10095   0104B8  0E1C               	movlw	28
 10096   0104BA  6E52               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10097   0104BC  0E02               	movlw	2
 10098   0104BE  6E53               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10099   0104C0  EC5A  F089         	call	_Nrf24_print_byte_register	;wreg free
 10100                           
 10101                           ;mirf.c: 391:  printf("Data Rate\t = %s\n",rf24_datarates[Nrf24_getDataRate(dev)]);
 10102   0104C4  0E59               	movlw	low STR_13
 10103   0104C6  6E3E               	movwf	printf@fmt^(0+1280),c
 10104   0104C8  0EFF               	movlw	high STR_13
 10105   0104CA  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10106   0104CC  C55C  F50B         	movff	Nrf24_printDetails@dev,Nrf24_getDataRate@dev
 10107   0104D0  C55D  F50C         	movff	Nrf24_printDetails@dev+1,Nrf24_getDataRate@dev+1
 10108   0104D4  ECDB  F089         	call	_Nrf24_getDataRate	;wreg free
 10109   0104D8  0105               	movlb	5	; () banked
 10110   0104DA  6FBC               	movwf	??_Nrf24_printDetails& (0+255),b
 10111   0104DC  51BC               	movf	??_Nrf24_printDetails& (0+255),w,b
 10112   0104DE  0D08               	mullw	8
 10113   0104E0  0E80               	movlw	low _rf24_datarates
 10114   0104E2  24F3               	addwf	243,w,c
 10115   0104E4  6E40               	movwf	(?_printf+2)^(0+1280),c
 10116   0104E6  0E05               	movlw	high _rf24_datarates
 10117   0104E8  20F4               	addwfc	prodh,w,c
 10118   0104EA  6E41               	movwf	(?_printf+3)^(0+1280),c
 10119   0104EC  EC9E  F08B         	call	_printf	;wreg free
 10120                           
 10121                           ;mirf.c: 392:  printf("CRC Length\t = %s\n", rf24_crclength[Nrf24_getCRCLength(dev)]);
 10122   0104F0  0E47               	movlw	low STR_14
 10123   0104F2  6E3E               	movwf	printf@fmt^(0+1280),c
 10124   0104F4  0EFF               	movlw	high STR_14
 10125   0104F6  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10126   0104F8  C55C  F50B         	movff	Nrf24_printDetails@dev,Nrf24_getCRCLength@dev
 10127   0104FC  C55D  F50C         	movff	Nrf24_printDetails@dev+1,Nrf24_getCRCLength@dev+1
 10128   010500  EC26  F089         	call	_Nrf24_getCRCLength	;wreg free
 10129   010504  0105               	movlb	5	; () banked
 10130   010506  6FBC               	movwf	??_Nrf24_printDetails& (0+255),b
 10131   010508  51BC               	movf	??_Nrf24_printDetails& (0+255),w,b
 10132   01050A  0D0A               	mullw	10
 10133   01050C  0E99               	movlw	low _rf24_crclength
 10134   01050E  24F3               	addwf	243,w,c
 10135   010510  6E40               	movwf	(?_printf+2)^(0+1280),c
 10136   010512  0EFE               	movlw	high _rf24_crclength
 10137   010514  20F4               	addwfc	prodh,w,c
 10138   010516  6E41               	movwf	(?_printf+3)^(0+1280),c
 10139   010518  EC9E  F08B         	call	_printf	;wreg free
 10140                           
 10141                           ;mirf.c: 393:  printf("PA Power\t = %s\n", rf24_pa_dbm[Nrf24_getPALevel(dev)]);
 10142   01051C  0E6A               	movlw	low STR_15
 10143   01051E  6E3E               	movwf	printf@fmt^(0+1280),c
 10144   010520  0EFF               	movlw	high STR_15
 10145   010522  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10146   010524  C55C  F50B         	movff	Nrf24_printDetails@dev,Nrf24_getPALevel@dev
 10147   010528  C55D  F50C         	movff	Nrf24_printDetails@dev+1,Nrf24_getPALevel@dev+1
 10148   01052C  ECD6  F08B         	call	_Nrf24_getPALevel	;wreg free
 10149   010530  0105               	movlb	5	; () banked
 10150   010532  6FBC               	movwf	??_Nrf24_printDetails& (0+255),b
 10151   010534  51BC               	movf	??_Nrf24_printDetails& (0+255),w,b
 10152   010536  0D08               	mullw	8
 10153   010538  0E60               	movlw	low _rf24_pa_dbm
 10154   01053A  24F3               	addwf	243,w,c
 10155   01053C  6E40               	movwf	(?_printf+2)^(0+1280),c
 10156   01053E  0E05               	movlw	high _rf24_pa_dbm
 10157   010540  20F4               	addwfc	prodh,w,c
 10158   010542  6E41               	movwf	(?_printf+3)^(0+1280),c
 10159   010544  EC9E  F08B         	call	_printf	;wreg free
 10160   010548                     
 10161                           ;mirf.c: 394:  uint8_t retransmit = Nrf24_getRetransmitDelay(dev);
 10162   010548  C55C  F50B         	movff	Nrf24_printDetails@dev,Nrf24_getRetransmitDelay@dev
 10163   01054C  C55D  F50C         	movff	Nrf24_printDetails@dev+1,Nrf24_getRetransmitDelay@dev+1
 10164   010550  ECE5  F08B         	call	_Nrf24_getRetransmitDelay	;wreg free
 10165   010554  0105               	movlb	5	; () banked
 10166   010556  6FC2               	movwf	Nrf24_printDetails@retransmit& (0+255),b
 10167   010558                     
 10168                           ; BSR set to: 5
 10169                           ;mirf.c: 395:  int16_t delay = (retransmit+1)*250;
 10170   010558  51C2               	movf	Nrf24_printDetails@retransmit& (0+255),w,b
 10171   01055A  6FBC               	movwf	??_Nrf24_printDetails& (0+255),b
 10172   01055C  6BBD               	clrf	(??_Nrf24_printDetails+1)& (0+255),b
 10173   01055E  0E01               	movlw	1
 10174   010560  27BC               	addwf	??_Nrf24_printDetails& (0+255),f,b
 10175   010562  0E00               	movlw	0
 10176   010564  23BD               	addwfc	(??_Nrf24_printDetails+1)& (0+255),f,b
 10177   010566  0EFA               	movlw	250
 10178   010568  03BC               	mulwf	??_Nrf24_printDetails& (0+255),b
 10179   01056A  C4F3 F5BE          	movff	prodl,??_Nrf24_printDetails+2
 10180   01056E  C4F4 F5BF          	movff	prodh,??_Nrf24_printDetails+3
 10181   010572  03BD               	mulwf	(??_Nrf24_printDetails+1)& (0+255),b
 10182   010574  50F3               	movf	prodl,w,c
 10183   010576  27BF               	addwf	(??_Nrf24_printDetails+3)& (0+255),f,b
 10184   010578  C5BE  F5C0         	movff	??_Nrf24_printDetails+2,Nrf24_printDetails@delay
 10185   01057C  C5BF  F5C1         	movff	??_Nrf24_printDetails+3,Nrf24_printDetails@delay+1
 10186   010580                     
 10187                           ; BSR set to: 5
 10188                           ;mirf.c: 396:  printf("Retransmit\t = %d us\n", delay);
 10189   010580  0E32               	movlw	low STR_16
 10190   010582  6E3E               	movwf	printf@fmt^(0+1280),c
 10191   010584  0EFF               	movlw	high STR_16
 10192   010586  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10193   010588  C5C0  F540         	movff	Nrf24_printDetails@delay,?_printf+2
 10194   01058C  C5C1  F541         	movff	Nrf24_printDetails@delay+1,?_printf+3
 10195   010590  EC9E  F08B         	call	_printf	;wreg free
 10196   010594  0012               	return		;funcret
 10197   010596                     __end_of_Nrf24_printDetails:
 10198                           	callstack 0
 10199                           
 10200 ;; *************** function _Nrf24_print_status *****************
 10201 ;; Defined at:
 10202 ;;		line 401 in file "mirf.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;  status          1    wreg     unsigned char 
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;  status          1   78[COMRAM] unsigned char 
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10220 ;;Total ram usage:        2 bytes
 10221 ;; Hardware stack levels used: 1
 10222 ;; Hardware stack levels required when called: 8
 10223 ;; This function calls:
 10224 ;;		_printf
 10225 ;; This function is called by:
 10226 ;;		_Nrf24_printDetails
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text9
 10231   0110E2                     __ptext9:
 10232                           	callstack 0
 10233   0110E2                     _Nrf24_print_status:
 10234                           	callstack 116
 10235                           
 10236                           ;incstack = 0
 10237                           ;Nrf24_print_status@status stored from wreg
 10238   0110E2  6E4F               	movwf	Nrf24_print_status@status^(0+1280),c
 10239   0110E4                     
 10240                           ;mirf.c: 401: void Nrf24_print_status(uint8_t status);mirf.c: 402: {;mirf.c: 403:  print
      +                          f("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status, (
      +                          status & (1<<(6))) ? 1 : 0,
 10241   0110E4  0EB7               	movlw	low STR_17
 10242   0110E6  6E3E               	movwf	printf@fmt^(0+1280),c
 10243   0110E8  0EFE               	movlw	high STR_17
 10244   0110EA  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10245   0110EC  C54F  F540         	movff	Nrf24_print_status@status,?_printf+2
 10246   0110F0  6A41               	clrf	(?_printf+3)^(0+1280),c
 10247   0110F2  BC4F               	btfsc	Nrf24_print_status@status^(0+1280),6,c
 10248   0110F4  EF7E  F088         	goto	u1961
 10249   0110F8  EF81  F088         	goto	u1960
 10250   0110FC                     u1961:
 10251   0110FC  0E01               	movlw	1
 10252   0110FE  EF82  F088         	goto	u1970
 10253   011102                     u1960:
 10254   011102  0E00               	movlw	0
 10255   011104                     u1970:
 10256   011104  6E42               	movwf	(?_printf+4)^(0+1280),c
 10257   011106  6A43               	clrf	(?_printf+5)^(0+1280),c
 10258   011108  BA4F               	btfsc	Nrf24_print_status@status^(0+1280),5,c
 10259   01110A  EF89  F088         	goto	u1981
 10260   01110E  EF8C  F088         	goto	u1980
 10261   011112                     u1981:
 10262   011112  0E01               	movlw	1
 10263   011114  EF8D  F088         	goto	u1990
 10264   011118                     u1980:
 10265   011118  0E00               	movlw	0
 10266   01111A                     u1990:
 10267   01111A  6E44               	movwf	(?_printf+6)^(0+1280),c
 10268   01111C  6A45               	clrf	(?_printf+7)^(0+1280),c
 10269   01111E  B84F               	btfsc	Nrf24_print_status@status^(0+1280),4,c
 10270   011120  EF94  F088         	goto	u2001
 10271   011124  EF97  F088         	goto	u2000
 10272   011128                     u2001:
 10273   011128  0E01               	movlw	1
 10274   01112A  EF98  F088         	goto	u2010
 10275   01112E                     u2000:
 10276   01112E  0E00               	movlw	0
 10277   011130                     u2010:
 10278   011130  6E46               	movwf	(?_printf+8)^(0+1280),c
 10279   011132  6A47               	clrf	(?_printf+9)^(0+1280),c
 10280   011134  C54F  F54E         	movff	Nrf24_print_status@status,??_Nrf24_print_status
 10281   011138  90D8               	bcf	status,0,c
 10282   01113A  324E               	rrcf	??_Nrf24_print_status^(0+1280),f,c
 10283   01113C  0E07               	movlw	7
 10284   01113E  164E               	andwf	??_Nrf24_print_status^(0+1280),f,c
 10285   011140  504E               	movf	??_Nrf24_print_status^(0+1280),w,c
 10286   011142  6E48               	movwf	(?_printf+10)^(0+1280),c
 10287   011144  6A49               	clrf	(?_printf+11)^(0+1280),c
 10288   011146  B04F               	btfsc	Nrf24_print_status@status^(0+1280),0,c
 10289   011148  EFA8  F088         	goto	u2021
 10290   01114C  EFAB  F088         	goto	u2020
 10291   011150                     u2021:
 10292   011150  0E01               	movlw	1
 10293   011152  EFAC  F088         	goto	u2030
 10294   011156                     u2020:
 10295   011156  0E00               	movlw	0
 10296   011158                     u2030:
 10297   011158  6E4A               	movwf	(?_printf+12)^(0+1280),c
 10298   01115A  6A4B               	clrf	(?_printf+13)^(0+1280),c
 10299   01115C  EC9E  F08B         	call	_printf	;wreg free
 10300   011160  0012               	return		;funcret
 10301   011162                     __end_of_Nrf24_print_status:
 10302                           	callstack 0
 10303                           
 10304 ;; *************** function _Nrf24_print_byte_register *****************
 10305 ;; Defined at:
 10306 ;;		line 423 in file "mirf.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  dev             2   77[COMRAM] PTR struct .
 10309 ;;		 -> nrf_loop@dev(3), 
 10310 ;;  name            2   79[COMRAM] PTR const unsigned char 
 10311 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 10312 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_4(13), 
 10313 ;;  reg             1   81[COMRAM] unsigned char 
 10314 ;;  qty             1   82[COMRAM] unsigned char 
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;  buffer          1   83[COMRAM] unsigned char [1]
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  1    wreg      void 
 10319 ;; Registers used:
 10320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/0
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10326 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10329 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10330 ;;Total ram usage:        7 bytes
 10331 ;; Hardware stack levels used: 1
 10332 ;; Hardware stack levels required when called: 8
 10333 ;; This function calls:
 10334 ;;		_Nrf24_readRegister
 10335 ;;		_printf
 10336 ;; This function is called by:
 10337 ;;		_Nrf24_printDetails
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text10
 10342   0112B4                     __ptext10:
 10343                           	callstack 0
 10344   0112B4                     _Nrf24_print_byte_register:
 10345                           	callstack 116
 10346   0112B4                     
 10347                           ;mirf.c: 423: void Nrf24_print_byte_register(NRF24_t * dev, const char* name, uint8_t re
      +                          g, uint8_t qty);mirf.c: 424: {;mirf.c: 425:  printf("%s\t =", name);
 10348   0112B4  0EEE               	movlw	low STR_18
 10349   0112B6  6E3E               	movwf	printf@fmt^(0+1280),c
 10350   0112B8  0EFF               	movlw	high STR_18
 10351   0112BA  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10352   0112BC  C550  F540         	movff	Nrf24_print_byte_register@name,?_printf+2
 10353   0112C0  C551  F541         	movff	Nrf24_print_byte_register@name+1,?_printf+3
 10354   0112C4  EC9E  F08B         	call	_printf	;wreg free
 10355                           
 10356                           ;mirf.c: 426:  while (qty--) {
 10357   0112C8  EF79  F089         	goto	l3094
 10358   0112CC                     l3088:
 10359                           
 10360                           ;mirf.c: 427:   uint8_t buffer[1];;mirf.c: 428:   Nrf24_readRegister(reg++, buffer, 1);
 10361   0112CC  0E54               	movlw	low Nrf24_print_byte_register@buffer
 10362   0112CE  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 10363   0112D0  0E05               	movlw	high Nrf24_print_byte_register@buffer
 10364   0112D2  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10365   0112D4  0E01               	movlw	1
 10366   0112D6  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 10367   0112D8  5052               	movf	Nrf24_print_byte_register@reg^(0+1280),w,c
 10368   0112DA  EC2C  F08B         	call	_Nrf24_readRegister
 10369   0112DE  2A52               	incf	Nrf24_print_byte_register@reg^(0+1280),f,c
 10370   0112E0                     
 10371                           ;mirf.c: 429:   printf(" 0x%02x", buffer[0]);
 10372   0112E0  0ED1               	movlw	low STR_23
 10373   0112E2  6E3E               	movwf	printf@fmt^(0+1280),c
 10374   0112E4  0EFF               	movlw	high STR_23
 10375   0112E6  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10376   0112E8  C554  F540         	movff	Nrf24_print_byte_register@buffer,?_printf+2
 10377   0112EC  6A41               	clrf	(?_printf+3)^(0+1280),c
 10378   0112EE  EC9E  F08B         	call	_printf	;wreg free
 10379   0112F2                     l3094:
 10380                           
 10381                           ;mirf.c: 426:  while (qty--) {
 10382   0112F2  0653               	decf	Nrf24_print_byte_register@qty^(0+1280),f,c
 10383   0112F4  2853               	incf	Nrf24_print_byte_register@qty^(0+1280),w,c
 10384   0112F6  A4D8               	btfss	status,2,c
 10385   0112F8  EF80  F089         	goto	u2061
 10386   0112FC  EF82  F089         	goto	u2060
 10387   011300                     u2061:
 10388   011300  EF66  F089         	goto	l3088
 10389   011304                     u2060:
 10390   011304                     
 10391                           ;mirf.c: 431:  printf("\r\n");
 10392   011304  0EFA               	movlw	low (STR_17+67)
 10393   011306  6E3E               	movwf	printf@fmt^(0+1280),c
 10394   011308  0EFE               	movlw	high (STR_17+67)
 10395   01130A  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10396   01130C  EC9E  F08B         	call	_printf	;wreg free
 10397   011310  0012               	return		;funcret
 10398   011312                     __end_of_Nrf24_print_byte_register:
 10399                           	callstack 0
 10400                           
 10401 ;; *************** function _Nrf24_print_address_register *****************
 10402 ;; Defined at:
 10403 ;;		line 407 in file "mirf.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  dev             2   77[COMRAM] PTR struct .
 10406 ;;		 -> nrf_loop@dev(3), 
 10407 ;;  name            2   79[COMRAM] PTR const unsigned char 
 10408 ;;		 -> STR_5(9), STR_3(13), 
 10409 ;;  reg             1   81[COMRAM] unsigned char 
 10410 ;;  qty             1   82[COMRAM] unsigned char 
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;  i               2   89[COMRAM] int 
 10413 ;;  buffer          5   84[COMRAM] unsigned char [5]
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  1    wreg      void 
 10416 ;; Registers used:
 10417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10423 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10424 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10426 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10427 ;;Total ram usage:       14 bytes
 10428 ;; Hardware stack levels used: 1
 10429 ;; Hardware stack levels required when called: 8
 10430 ;; This function calls:
 10431 ;;		_Nrf24_readRegister
 10432 ;;		_printf
 10433 ;; This function is called by:
 10434 ;;		_Nrf24_printDetails
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text11
 10439   010E6C                     __ptext11:
 10440                           	callstack 0
 10441   010E6C                     _Nrf24_print_address_register:
 10442                           	callstack 116
 10443   010E6C                     
 10444                           ;mirf.c: 407: void Nrf24_print_address_register(NRF24_t * dev, const char* name, uint8_t
      +                           reg, uint8_t qty);mirf.c: 408: {;mirf.c: 409:  printf("%s\t =",name);
 10445   010E6C  0EEE               	movlw	low STR_18
 10446   010E6E  6E3E               	movwf	printf@fmt^(0+1280),c
 10447   010E70  0EFF               	movlw	high STR_18
 10448   010E72  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10449   010E74  C550  F540         	movff	Nrf24_print_address_register@name,?_printf+2
 10450   010E78  C551  F541         	movff	Nrf24_print_address_register@name+1,?_printf+3
 10451   010E7C  EC9E  F08B         	call	_printf	;wreg free
 10452                           
 10453                           ;mirf.c: 410:  while (qty--) {
 10454   010E80  EF77  F087         	goto	l3082
 10455   010E84                     l3064:
 10456                           
 10457                           ;mirf.c: 411:   uint8_t buffer[5];;mirf.c: 412:   Nrf24_readRegister(reg++, buffer, size
      +                          of(buffer));
 10458   010E84  0E55               	movlw	low Nrf24_print_address_register@buffer
 10459   010E86  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 10460   010E88  0E05               	movlw	high Nrf24_print_address_register@buffer
 10461   010E8A  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10462   010E8C  0E05               	movlw	5
 10463   010E8E  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 10464   010E90  5052               	movf	Nrf24_print_address_register@reg^(0+1280),w,c
 10465   010E92  EC2C  F08B         	call	_Nrf24_readRegister
 10466   010E96  2A52               	incf	Nrf24_print_address_register@reg^(0+1280),f,c
 10467   010E98                     
 10468                           ;mirf.c: 414:   printf(" 0x");
 10469   010E98  0EFA               	movlw	low STR_19
 10470   010E9A  6E3E               	movwf	printf@fmt^(0+1280),c
 10471   010E9C  0EFF               	movlw	high STR_19
 10472   010E9E  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10473   010EA0  EC9E  F08B         	call	_printf	;wreg free
 10474   010EA4                     
 10475                           ;mirf.c: 416:   for(int i=0;i<5;i++) {
 10476   010EA4  0E00               	movlw	0
 10477   010EA6  6E5B               	movwf	(Nrf24_print_address_register@i+1)^(0+1280),c
 10478   010EA8  0E00               	movlw	0
 10479   010EAA  6E5A               	movwf	Nrf24_print_address_register@i^(0+1280),c
 10480   010EAC                     l3076:
 10481                           
 10482                           ;mirf.c: 417:    printf("%02x", buffer[i]);
 10483   010EAC  0ED4               	movlw	low (STR_23+3)
 10484   010EAE  6E3E               	movwf	printf@fmt^(0+1280),c
 10485   010EB0  0EFF               	movlw	high (STR_23+3)
 10486   010EB2  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10487   010EB4  0E55               	movlw	low Nrf24_print_address_register@buffer
 10488   010EB6  245A               	addwf	Nrf24_print_address_register@i^(0+1280),w,c
 10489   010EB8  6ED9               	movwf	fsr2l,c
 10490   010EBA  0E05               	movlw	high Nrf24_print_address_register@buffer
 10491   010EBC  205B               	addwfc	(Nrf24_print_address_register@i+1)^(0+1280),w,c
 10492   010EBE  6EDA               	movwf	fsr2h,c
 10493   010EC0  50DF               	movf	indf2,w,c
 10494   010EC2  6E54               	movwf	??_Nrf24_print_address_register^(0+1280),c
 10495   010EC4  5054               	movf	??_Nrf24_print_address_register^(0+1280),w,c
 10496   010EC6  6E40               	movwf	(?_printf+2)^(0+1280),c
 10497   010EC8  6A41               	clrf	(?_printf+3)^(0+1280),c
 10498   010ECA  EC9E  F08B         	call	_printf	;wreg free
 10499   010ECE                     
 10500                           ;mirf.c: 418:   }
 10501   010ECE  4A5A               	infsnz	Nrf24_print_address_register@i^(0+1280),f,c
 10502   010ED0  2A5B               	incf	(Nrf24_print_address_register@i+1)^(0+1280),f,c
 10503   010ED2  BE5B               	btfsc	(Nrf24_print_address_register@i+1)^(0+1280),7,c
 10504   010ED4  EF75  F087         	goto	u2041
 10505   010ED8  505B               	movf	(Nrf24_print_address_register@i+1)^(0+1280),w,c
 10506   010EDA  E109               	bnz	u2040
 10507   010EDC  0E05               	movlw	5
 10508   010EDE  5C5A               	subwf	Nrf24_print_address_register@i^(0+1280),w,c
 10509   010EE0  A0D8               	btfss	status,0,c
 10510   010EE2  EF75  F087         	goto	u2041
 10511   010EE6  EF77  F087         	goto	u2040
 10512   010EEA                     u2041:
 10513   010EEA  EF56  F087         	goto	l3076
 10514   010EEE                     u2040:
 10515   010EEE                     l3082:
 10516                           
 10517                           ;mirf.c: 410:  while (qty--) {
 10518   010EEE  0653               	decf	Nrf24_print_address_register@qty^(0+1280),f,c
 10519   010EF0  2853               	incf	Nrf24_print_address_register@qty^(0+1280),w,c
 10520   010EF2  A4D8               	btfss	status,2,c
 10521   010EF4  EF7E  F087         	goto	u2051
 10522   010EF8  EF80  F087         	goto	u2050
 10523   010EFC                     u2051:
 10524   010EFC  EF42  F087         	goto	l3064
 10525   010F00                     u2050:
 10526   010F00                     
 10527                           ;mirf.c: 420:  printf("\r\n");
 10528   010F00  0EFA               	movlw	low (STR_17+67)
 10529   010F02  6E3E               	movwf	printf@fmt^(0+1280),c
 10530   010F04  0EFE               	movlw	high (STR_17+67)
 10531   010F06  6E3F               	movwf	(printf@fmt+1)^(0+1280),c
 10532   010F08  EC9E  F08B         	call	_printf	;wreg free
 10533   010F0C  0012               	return		;funcret
 10534   010F0E                     __end_of_Nrf24_print_address_register:
 10535                           	callstack 0
 10536                           
 10537 ;; *************** function _printf *****************
 10538 ;; Defined at:
 10539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  fmt             2   61[COMRAM] PTR const unsigned char 
 10542 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10543 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10544 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10545 ;;		 -> STR_2(53), 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  ap              2   75[COMRAM] PTR void [1]
 10548 ;;		 -> ?_printf(2), 
 10549 ;;  ret             2    0        int 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  2   61[COMRAM] int 
 10552 ;; Registers used:
 10553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10559 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10562 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10563 ;;Total ram usage:       16 bytes
 10564 ;; Hardware stack levels used: 1
 10565 ;; Hardware stack levels required when called: 7
 10566 ;; This function calls:
 10567 ;;		_vfprintf
 10568 ;; This function is called by:
 10569 ;;		_Nrf24_printDetails
 10570 ;;		_Nrf24_print_status
 10571 ;;		_Nrf24_print_address_register
 10572 ;;		_Nrf24_print_byte_register
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text12
 10577   01173C                     __ptext12:
 10578                           	callstack 0
 10579   01173C                     _printf:
 10580                           	callstack 117
 10581   01173C  0E40               	movlw	low (?_printf+2)
 10582   01173E  6E4C               	movwf	printf@ap^(0+1280),c
 10583   011740  0E05               	movlw	high (?_printf+2)
 10584   011742  6E4D               	movwf	(printf@ap+1)^(0+1280),c
 10585   011744  0E00               	movlw	0
 10586   011746  6E36               	movwf	vfprintf@fp^(0+1280),c
 10587   011748  0E00               	movlw	0
 10588   01174A  6E37               	movwf	(vfprintf@fp+1)^(0+1280),c
 10589   01174C  C53E  F538         	movff	printf@fmt,vfprintf@fmt
 10590   011750  C53F  F539         	movff	printf@fmt+1,vfprintf@fmt+1
 10591   011754  0E4C               	movlw	low printf@ap
 10592   011756  6E3A               	movwf	vfprintf@ap^(0+1280),c
 10593   011758  0E05               	movlw	high printf@ap
 10594   01175A  6E3B               	movwf	(vfprintf@ap+1)^(0+1280),c
 10595   01175C  ECB2  F089         	call	_vfprintf	;wreg free
 10596   011760  0012               	return		;funcret
 10597   011762                     __end_of_printf:
 10598                           	callstack 0
 10599                           
 10600 ;; *************** function _vfprintf *****************
 10601 ;; Defined at:
 10602 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  fp              2   53[COMRAM] PTR struct _IO_FILE
 10605 ;;		 -> NULL(0), 
 10606 ;;  fmt             2   55[COMRAM] PTR const unsigned char 
 10607 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10608 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10609 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10610 ;;		 -> STR_2(53), 
 10611 ;;  ap              2   57[COMRAM] PTR PTR void 
 10612 ;;		 -> printf@ap(2), 
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;  cfmt            2   59[COMRAM] PTR unsigned char 
 10615 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10616 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10617 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10618 ;;		 -> STR_2(53), 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  2   53[COMRAM] int 
 10621 ;; Registers used:
 10622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10628 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10631 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10632 ;;Total ram usage:        8 bytes
 10633 ;; Hardware stack levels used: 1
 10634 ;; Hardware stack levels required when called: 6
 10635 ;; This function calls:
 10636 ;;		_vfpfcnvrt
 10637 ;; This function is called by:
 10638 ;;		_printf
 10639 ;; This function uses a non-reentrant model
 10640 ;;
 10641                           
 10642                           	psect	text13
 10643   011364                     __ptext13:
 10644                           	callstack 0
 10645   011364                     _vfprintf:
 10646                           	callstack 117
 10647   011364                     
 10648                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10649   011364  C538  F53C         	movff	vfprintf@fmt,vfprintf@cfmt
 10650   011368  C539  F53D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10651                           
 10652                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10653   01136C  EFC6  F089         	goto	l2982
 10654   011370                     l2980:
 10655                           
 10656                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10657   011370  C536  F527         	movff	vfprintf@fp,vfpfcnvrt@fp
 10658   011374  C537  F528         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10659   011378  0E3C               	movlw	low vfprintf@cfmt
 10660   01137A  6E29               	movwf	vfpfcnvrt@fmt^(0+1280),c
 10661   01137C  0E05               	movlw	high vfprintf@cfmt
 10662   01137E  6E2A               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
 10663   011380  C53A  F52B         	movff	vfprintf@ap,vfpfcnvrt@ap
 10664   011384  C53B  F52C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10665   011388  EC00  F080         	call	_vfpfcnvrt	;wreg free
 10666   01138C                     l2982:
 10667                           
 10668                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10669   01138C  C53C  F4F6         	movff	vfprintf@cfmt,tblptrl
 10670   011390  C53D  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 10671   011394                     	if	0	;tblptru may be non-zero
 10672   011394                     	endif
 10673   011394                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10674   011394  0E00               	movlw	low (__mediumconst shr (0+16))
 10675   011396  6EF8               	movwf	tblptru,c
 10676   011398                     	endif
 10677   011398  0008               	tblrd		*
 10678   01139A  50F5               	movf	tablat,w,c
 10679   01139C  0900               	iorlw	0
 10680   01139E  A4D8               	btfss	status,2,c
 10681   0113A0  EFD4  F089         	goto	u1911
 10682   0113A4  EFD6  F089         	goto	u1910
 10683   0113A8                     u1911:
 10684   0113A8  EFB8  F089         	goto	l2980
 10685   0113AC                     u1910:
 10686   0113AC                     
 10687                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10688   0113AC  0E00               	movlw	0
 10689   0113AE  6E37               	movwf	(?_vfprintf+1)^(0+1280),c
 10690   0113B0  0E00               	movlw	0
 10691   0113B2  6E36               	movwf	?_vfprintf^(0+1280),c
 10692   0113B4  0012               	return		;funcret
 10693   0113B6                     __end_of_vfprintf:
 10694                           	callstack 0
 10695                           
 10696 ;; *************** function _vfpfcnvrt *****************
 10697 ;; Defined at:
 10698 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10699 ;; Parameters:    Size  Location     Type
 10700 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
 10701 ;;		 -> NULL(0), 
 10702 ;;  fmt             2   40[COMRAM] PTR PTR unsigned char 
 10703 ;;		 -> vfprintf@cfmt(2), 
 10704 ;;  ap              2   42[COMRAM] PTR PTR void 
 10705 ;;		 -> printf@ap(2), 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  convarg         4   46[COMRAM] struct .
 10708 ;;  cp              2   51[COMRAM] PTR unsigned char 
 10709 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10710 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10711 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10712 ;;		 -> STR_2(53), 
 10713 ;;  done            1   50[COMRAM] _Bool 
 10714 ;;  c               1    0        unsigned char 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  1    wreg      void 
 10717 ;; Registers used:
 10718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10724 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10727 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10728 ;;Total ram usage:       15 bytes
 10729 ;; Hardware stack levels used: 1
 10730 ;; Hardware stack levels required when called: 5
 10731 ;; This function calls:
 10732 ;;		_dtoa
 10733 ;;		_fputc
 10734 ;;		_read_prec_or_width
 10735 ;;		_stoa
 10736 ;;		_xtoa
 10737 ;; This function is called by:
 10738 ;;		_vfprintf
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text14
 10743   010000                     __ptext14:
 10744                           	callstack 0
 10745   010000                     _vfpfcnvrt:
 10746                           	callstack 117
 10747   010000                     
 10748                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10749   010000  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10750   010004  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10751   010008  C4DE F4F6          	movff	postinc2,tblptrl
 10752   01000C  C4DD F4F7          	movff	postdec2,tblptrh
 10753   010010                     	if	0	;tblptru may be non-zero
 10754   010010                     	endif
 10755   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10756   010010  0E00               	movlw	low (__mediumconst shr (0+16))
 10757   010012  6EF8               	movwf	tblptru,c
 10758   010014                     	endif
 10759   010014  0008               	tblrd		*
 10760   010016  50F5               	movf	tablat,w,c
 10761   010018  0A25               	xorlw	37
 10762   01001A  A4D8               	btfss	status,2,c
 10763   01001C  EF12  F080         	goto	u1771
 10764   010020  EF14  F080         	goto	u1770
 10765   010024                     u1771:
 10766   010024  EFB1  F081         	goto	l2952
 10767   010028                     u1770:
 10768   010028                     
 10769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10770   010028  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10771   01002C  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10772   010030  2ADE               	incf	postinc2,f,c
 10773   010032  0E00               	movlw	0
 10774   010034  22DD               	addwfc	postdec2,f,c
 10775   010036                     
 10776                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10777   010036  0E00               	movlw	0
 10778   010038  0105               	movlb	5	; () banked
 10779   01003A  6F99               	movwf	(_width+1)& (0+255),b
 10780   01003C  0E00               	movlw	0
 10781   01003E  6F98               	movwf	_width& (0+255),b
 10782   010040  C598  F55E         	movff	_width,_flags
 10783   010044                     
 10784                           ; BSR set to: 5
 10785                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10786   010044  699A               	setf	_prec& (0+255),b
 10787   010046  699B               	setf	(_prec+1)& (0+255),b
 10788   010048                     
 10789                           ; BSR set to: 5
 10790                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 10791   010048  6A33               	clrf	vfpfcnvrt@done^(0+1280),c
 10792                           
 10793                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10794   01004A  EF47  F080         	goto	l2894
 10795   01004E                     l2884:
 10796                           
 10797                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 10798   01004E  825E               	bsf	_flags^(0+1280),1,c
 10799   010050                     
 10800                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 10801   010050  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10802   010054  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10803   010058  2ADE               	incf	postinc2,f,c
 10804   01005A  0E00               	movlw	0
 10805   01005C  22DD               	addwfc	postdec2,f,c
 10806                           
 10807                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 10808   01005E  EF47  F080         	goto	l2894
 10809   010062                     l2888:
 10810                           
 10811                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 10812   010062  0E01               	movlw	1
 10813   010064  6E33               	movwf	vfpfcnvrt@done^(0+1280),c
 10814                           
 10815                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 10816   010066  EF47  F080         	goto	l2894
 10817   01006A                     l2892:
 10818   01006A  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10819   01006E  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10820   010072  C4DE F4F6          	movff	postinc2,tblptrl
 10821   010076  C4DD F4F7          	movff	postdec2,tblptrh
 10822   01007A                     	if	0	;tblptru may be non-zero
 10823   01007A                     	endif
 10824   01007A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10825   01007A  0E00               	movlw	low (__mediumconst shr (0+16))
 10826   01007C  6EF8               	movwf	tblptru,c
 10827   01007E                     	endif
 10828   01007E  0008               	tblrd		*
 10829   010080  50F5               	movf	tablat,w,c
 10830                           
 10831                           ; Switch size 1, requested type "simple"
 10832                           ; Number of cases is 1, Range of values is 48 to 48
 10833                           ; switch strategies available:
 10834                           ; Name         Instructions Cycles
 10835                           ; simple_byte            4     3 (average)
 10836                           ;	Chosen strategy is simple_byte
 10837   010082  0A30               	xorlw	48	; case 48
 10838   010084  B4D8               	btfsc	status,2,c
 10839   010086  EF27  F080         	goto	l2884
 10840   01008A  EF31  F080         	goto	l2888
 10841   01008E                     l2894:
 10842                           
 10843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10844   01008E  5033               	movf	vfpfcnvrt@done^(0+1280),w,c
 10845   010090  B4D8               	btfsc	status,2,c
 10846   010092  EF4D  F080         	goto	u1781
 10847   010096  EF4F  F080         	goto	u1780
 10848   01009A                     u1781:
 10849   01009A  EF35  F080         	goto	l2892
 10850   01009E                     u1780:
 10851   01009E                     
 10852                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 10853   01009E  C529  F501         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 10854   0100A2  C52A  F502         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 10855   0100A6  C52B  F503         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 10856   0100AA  C52C  F504         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 10857   0100AE  EC4E  F085         	call	_read_prec_or_width	;wreg free
 10858   0100B2  C501  F598         	movff	?_read_prec_or_width,_width
 10859   0100B6  C502  F599         	movff	?_read_prec_or_width+1,_width+1
 10860   0100BA                     
 10861                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 10862   0100BA  0105               	movlb	5	; () banked
 10863   0100BC  BF99               	btfsc	(_width+1)& (0+255),7,b
 10864   0100BE  EF65  F080         	goto	u1790
 10865   0100C2  EF63  F080         	goto	u1791
 10866   0100C6                     u1791:
 10867   0100C6  EF6A  F080         	goto	l2902
 10868   0100CA                     u1790:
 10869   0100CA                     
 10870                           ; BSR set to: 5
 10871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 10872   0100CA  805E               	bsf	_flags^(0+1280),0,c
 10873                           
 10874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 10875   0100CC  6D98               	negf	_width& (0+255),b
 10876   0100CE  1F99               	comf	(_width+1)& (0+255),f,b
 10877   0100D0  B0D8               	btfsc	status,0,c
 10878   0100D2  2B99               	incf	(_width+1)& (0+255),f,b
 10879   0100D4                     l2902:
 10880                           
 10881                           ; BSR set to: 5
 10882                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10883   0100D4  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10884   0100D8  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10885   0100DC  C4DE F534          	movff	postinc2,vfpfcnvrt@cp
 10886   0100E0  C4DD F535          	movff	postdec2,vfpfcnvrt@cp+1
 10887   0100E4                     
 10888                           ; BSR set to: 5
 10889                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10890   0100E4  C534  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10891   0100E8  C535  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10892   0100EC                     	if	0	;tblptru may be non-zero
 10893   0100EC                     	endif
 10894   0100EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10895   0100EC  0E00               	movlw	low (__mediumconst shr (0+16))
 10896   0100EE  6EF8               	movwf	tblptru,c
 10897   0100F0                     	endif
 10898   0100F0  0008               	tblrd		*
 10899   0100F2  50F5               	movf	tablat,w,c
 10900   0100F4  0A64               	xorlw	100
 10901   0100F6  B4D8               	btfsc	status,2,c
 10902   0100F8  EF80  F080         	goto	u1801
 10903   0100FC  EF82  F080         	goto	u1800
 10904   010100                     u1801:
 10905   010100  EF92  F080         	goto	l2908
 10906   010104                     u1800:
 10907   010104                     
 10908                           ; BSR set to: 5
 10909   010104  C534  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10910   010108  C535  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10911   01010C                     	if	0	;tblptru may be non-zero
 10912   01010C                     	endif
 10913   01010C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10914   01010C  0E00               	movlw	low (__mediumconst shr (0+16))
 10915   01010E  6EF8               	movwf	tblptru,c
 10916   010110                     	endif
 10917   010110  0008               	tblrd		*
 10918   010112  50F5               	movf	tablat,w,c
 10919   010114  0A69               	xorlw	105
 10920   010116  A4D8               	btfss	status,2,c
 10921   010118  EF90  F080         	goto	u1811
 10922   01011C  EF92  F080         	goto	u1810
 10923   010120                     u1811:
 10924   010120  EFC0  F080         	goto	l2914
 10925   010124                     u1810:
 10926   010124                     l2908:
 10927                           
 10928                           ; BSR set to: 5
 10929                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10930   010124  C52B  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 10931   010128  C52C  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 10932   01012C  C4DF F52D          	movff	indf2,??_vfpfcnvrt
 10933   010130  0E02               	movlw	2
 10934   010132  26DE               	addwf	postinc2,f,c
 10935   010134  C4DF F52E          	movff	indf2,??_vfpfcnvrt+1
 10936   010138  0E00               	movlw	0
 10937   01013A  22DD               	addwfc	postdec2,f,c
 10938   01013C  C52D  F4D9         	movff	??_vfpfcnvrt,fsr2l
 10939   010140  C52E  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 10940   010144  C4DE F52F          	movff	postinc2,vfpfcnvrt@convarg
 10941   010148  C4DD F530          	movff	postdec2,vfpfcnvrt@convarg+1
 10942                           
 10943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10944   01014C  0E01               	movlw	1
 10945   01014E  2434               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 10946   010150  6E2D               	movwf	??_vfpfcnvrt^(0+1280),c
 10947   010152  0E00               	movlw	0
 10948   010154  2035               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 10949   010156  6E2E               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 10950   010158  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10951   01015C  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10952   010160  C52D  F4DE         	movff	??_vfpfcnvrt,postinc2
 10953   010164  C52E  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 10954   010168                     
 10955                           ; BSR set to: 5
 10956                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10957   010168  C527  F51A         	movff	vfpfcnvrt@fp,dtoa@fp
 10958   01016C  C528  F51B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10959   010170  C52F  F51C         	movff	vfpfcnvrt@convarg,dtoa@d
 10960   010174  C530  F51D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10961   010178  ECCB  F082         	call	_dtoa	;wreg free
 10962   01017C  EFC7  F081         	goto	l1480
 10963   010180                     l2914:
 10964                           
 10965                           ; BSR set to: 5
 10966   010180  C534  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10967   010184  C535  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10968   010188                     	if	0	;tblptru may be non-zero
 10969   010188                     	endif
 10970   010188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10971   010188  0E00               	movlw	low (__mediumconst shr (0+16))
 10972   01018A  6EF8               	movwf	tblptru,c
 10973   01018C                     	endif
 10974   01018C  0008               	tblrd		*
 10975   01018E  50F5               	movf	tablat,w,c
 10976   010190  0A78               	xorlw	120
 10977   010192  A4D8               	btfss	status,2,c
 10978   010194  EFCE  F080         	goto	u1821
 10979   010198  EFD0  F080         	goto	u1820
 10980   01019C                     u1821:
 10981   01019C  EF0E  F081         	goto	l1481
 10982   0101A0                     u1820:
 10983   0101A0                     
 10984                           ; BSR set to: 5
 10985                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 10986   0101A0  C52B  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 10987   0101A4  C52C  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 10988   0101A8  C4DF F52D          	movff	indf2,??_vfpfcnvrt
 10989   0101AC  0E02               	movlw	2
 10990   0101AE  26DE               	addwf	postinc2,f,c
 10991   0101B0  C4DF F52E          	movff	indf2,??_vfpfcnvrt+1
 10992   0101B4  0E00               	movlw	0
 10993   0101B6  22DD               	addwfc	postdec2,f,c
 10994   0101B8  C52D  F4D9         	movff	??_vfpfcnvrt,fsr2l
 10995   0101BC  C52E  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 10996   0101C0  C4DE F52F          	movff	postinc2,vfpfcnvrt@convarg
 10997   0101C4  C4DD F530          	movff	postdec2,vfpfcnvrt@convarg+1
 10998                           
 10999                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 11000   0101C8  0E01               	movlw	1
 11001   0101CA  2434               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 11002   0101CC  6E2D               	movwf	??_vfpfcnvrt^(0+1280),c
 11003   0101CE  0E00               	movlw	0
 11004   0101D0  2035               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 11005   0101D2  6E2E               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 11006   0101D4  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11007   0101D8  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11008   0101DC  C52D  F4DE         	movff	??_vfpfcnvrt,postinc2
 11009   0101E0  C52E  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 11010                           
 11011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 11012   0101E4  EF00  F081         	goto	l2924
 11013   0101E8                     l2918:
 11014                           
 11015                           ; BSR set to: 5
 11016                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 11017   0101E8  C527  F51A         	movff	vfpfcnvrt@fp,xtoa@fp
 11018   0101EC  C528  F51B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11019   0101F0  C52F  F51C         	movff	vfpfcnvrt@convarg,xtoa@d
 11020   0101F4  C530  F51D         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 11021   0101F8  ECCC  F084         	call	_xtoa	;wreg free
 11022   0101FC  EFC7  F081         	goto	l1480
 11023   010200                     l2924:
 11024                           
 11025                           ; BSR set to: 5
 11026   010200  C534  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11027   010204  C535  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11028   010208                     	if	0	;tblptru may be non-zero
 11029   010208                     	endif
 11030   010208                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11031   010208  0E00               	movlw	low (__mediumconst shr (0+16))
 11032   01020A  6EF8               	movwf	tblptru,c
 11033   01020C                     	endif
 11034   01020C  0008               	tblrd		*
 11035   01020E  50F5               	movf	tablat,w,c
 11036                           
 11037                           ; Switch size 1, requested type "simple"
 11038                           ; Number of cases is 1, Range of values is 120 to 120
 11039                           ; switch strategies available:
 11040                           ; Name         Instructions Cycles
 11041                           ; simple_byte            4     3 (average)
 11042                           ;	Chosen strategy is simple_byte
 11043   010210  0A78               	xorlw	120	; case 120
 11044   010212  B4D8               	btfsc	status,2,c
 11045   010214  EFF4  F080         	goto	l2918
 11046   010218  EF0E  F081         	goto	l1481
 11047   01021C                     l1481:
 11048                           
 11049                           ; BSR set to: 5
 11050                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 11051   01021C  6A33               	clrf	vfpfcnvrt@done^(0+1280),c
 11052   01021E                     
 11053                           ; BSR set to: 5
 11054                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 11055   01021E  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11056   010222  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11057   010226  C4DE F4F6          	movff	postinc2,tblptrl
 11058   01022A  C4DD F4F7          	movff	postdec2,tblptrh
 11059   01022E                     	if	0	;tblptru may be non-zero
 11060   01022E                     	endif
 11061   01022E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11062   01022E  0E00               	movlw	low (__mediumconst shr (0+16))
 11063   010230  6EF8               	movwf	tblptru,c
 11064   010232                     	endif
 11065   010232  0008               	tblrd		*
 11066   010234  50F5               	movf	tablat,w,c
 11067   010236  0A73               	xorlw	115
 11068   010238  A4D8               	btfss	status,2,c
 11069   01023A  EF21  F081         	goto	u1831
 11070   01023E  EF23  F081         	goto	u1830
 11071   010242                     u1831:
 11072   010242  EF2E  F081         	goto	l2932
 11073   010246                     u1830:
 11074   010246                     
 11075                           ; BSR set to: 5
 11076                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 11077   010246  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11078   01024A  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11079   01024E  2ADE               	incf	postinc2,f,c
 11080   010250  0E00               	movlw	0
 11081   010252  22DD               	addwfc	postdec2,f,c
 11082   010254                     l2930:
 11083                           
 11084                           ; BSR set to: 5
 11085                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 11086   010254  0E01               	movlw	1
 11087   010256  6E33               	movwf	vfpfcnvrt@done^(0+1280),c
 11088                           
 11089                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 11090   010258  EF84  F081         	goto	l2942
 11091   01025C                     l2932:
 11092                           
 11093                           ; BSR set to: 5
 11094   01025C  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11095   010260  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11096   010264  C4DE F4F6          	movff	postinc2,tblptrl
 11097   010268  C4DD F4F7          	movff	postdec2,tblptrh
 11098   01026C                     	if	0	;tblptru may be non-zero
 11099   01026C                     	endif
 11100   01026C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11101   01026C  0E00               	movlw	low (__mediumconst shr (0+16))
 11102   01026E  6EF8               	movwf	tblptru,c
 11103   010270                     	endif
 11104   010270  0008               	tblrd		*
 11105   010272  50F5               	movf	tablat,w,c
 11106   010274  0A6C               	xorlw	108
 11107   010276  A4D8               	btfss	status,2,c
 11108   010278  EF40  F081         	goto	u1841
 11109   01027C  EF42  F081         	goto	u1840
 11110   010280                     u1841:
 11111   010280  EF84  F081         	goto	l2942
 11112   010284                     u1840:
 11113   010284                     
 11114                           ; BSR set to: 5
 11115   010284  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11116   010288  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11117   01028C  C4DE F52D          	movff	postinc2,??_vfpfcnvrt
 11118   010290  C4DD F52E          	movff	postdec2,??_vfpfcnvrt+1
 11119   010294  0E01               	movlw	1
 11120   010296  262D               	addwf	??_vfpfcnvrt^(0+1280),f,c
 11121   010298  0E00               	movlw	0
 11122   01029A  222E               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 11123   01029C  C52D  F4F6         	movff	??_vfpfcnvrt,tblptrl
 11124   0102A0  C52E  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 11125   0102A4                     	if	0	;tblptru may be non-zero
 11126   0102A4                     	endif
 11127   0102A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11128   0102A4  0E00               	movlw	low (__mediumconst shr (0+16))
 11129   0102A6  6EF8               	movwf	tblptru,c
 11130   0102A8                     	endif
 11131   0102A8  0008               	tblrd		*
 11132   0102AA  50F5               	movf	tablat,w,c
 11133   0102AC  0A6C               	xorlw	108
 11134   0102AE  A4D8               	btfss	status,2,c
 11135   0102B0  EF5C  F081         	goto	u1851
 11136   0102B4  EF5E  F081         	goto	u1850
 11137   0102B8                     u1851:
 11138   0102B8  EF84  F081         	goto	l2942
 11139   0102BC                     u1850:
 11140   0102BC                     
 11141                           ; BSR set to: 5
 11142   0102BC  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11143   0102C0  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11144   0102C4  C4DE F52D          	movff	postinc2,??_vfpfcnvrt
 11145   0102C8  C4DD F52E          	movff	postdec2,??_vfpfcnvrt+1
 11146   0102CC  0E02               	movlw	2
 11147   0102CE  262D               	addwf	??_vfpfcnvrt^(0+1280),f,c
 11148   0102D0  0E00               	movlw	0
 11149   0102D2  222E               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 11150   0102D4  C52D  F4F6         	movff	??_vfpfcnvrt,tblptrl
 11151   0102D8  C52E  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 11152   0102DC                     	if	0	;tblptru may be non-zero
 11153   0102DC                     	endif
 11154   0102DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11155   0102DC  0E00               	movlw	low (__mediumconst shr (0+16))
 11156   0102DE  6EF8               	movwf	tblptru,c
 11157   0102E0                     	endif
 11158   0102E0  0008               	tblrd		*
 11159   0102E2  50F5               	movf	tablat,w,c
 11160   0102E4  0A73               	xorlw	115
 11161   0102E6  A4D8               	btfss	status,2,c
 11162   0102E8  EF78  F081         	goto	u1861
 11163   0102EC  EF7A  F081         	goto	u1860
 11164   0102F0                     u1861:
 11165   0102F0  EF84  F081         	goto	l2942
 11166   0102F4                     u1860:
 11167   0102F4                     
 11168                           ; BSR set to: 5
 11169                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 11170   0102F4  0E03               	movlw	3
 11171   0102F6  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11172   0102FA  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11173   0102FE  26DE               	addwf	postinc2,f,c
 11174   010300  0E00               	movlw	0
 11175   010302  22DD               	addwfc	postdec2,f,c
 11176   010304  EF2A  F081         	goto	l2930
 11177   010308                     l2942:
 11178                           
 11179                           ; BSR set to: 5
 11180                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 11181   010308  5033               	movf	vfpfcnvrt@done^(0+1280),w,c
 11182   01030A  B4D8               	btfsc	status,2,c
 11183   01030C  EF8A  F081         	goto	u1871
 11184   010310  EF8C  F081         	goto	u1870
 11185   010314                     u1871:
 11186   010314  EFA8  F081         	goto	l2948
 11187   010318                     u1870:
 11188   010318                     
 11189                           ; BSR set to: 5
 11190                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 11191   010318  C527  F50A         	movff	vfpfcnvrt@fp,stoa@fp
 11192   01031C  C528  F50B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11193   010320  C52B  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11194   010324  C52C  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11195   010328  C4DF F52D          	movff	indf2,??_vfpfcnvrt
 11196   01032C  0E02               	movlw	2
 11197   01032E  26DE               	addwf	postinc2,f,c
 11198   010330  C4DF F52E          	movff	indf2,??_vfpfcnvrt+1
 11199   010334  0E00               	movlw	0
 11200   010336  22DD               	addwfc	postdec2,f,c
 11201   010338  C52D  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11202   01033C  C52E  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11203   010340  C4DE F50C          	movff	postinc2,stoa@s
 11204   010344  C4DD F50D          	movff	postdec2,stoa@s+1
 11205   010348  EC86  F083         	call	_stoa	;wreg free
 11206   01034C  EFC7  F081         	goto	l1480
 11207   010350                     l2948:
 11208                           
 11209                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11210   010350  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11211   010354  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11212   010358  2ADE               	incf	postinc2,f,c
 11213   01035A  0E00               	movlw	0
 11214   01035C  22DD               	addwfc	postdec2,f,c
 11215   01035E  EFC7  F081         	goto	l1480
 11216   010362                     l2952:
 11217                           
 11218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11219   010362  C529  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11220   010366  C52A  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11221   01036A  C4DE F4F6          	movff	postinc2,tblptrl
 11222   01036E  C4DD F4F7          	movff	postdec2,tblptrh
 11223   010372                     	if	0	;tblptru may be non-zero
 11224   010372                     	endif
 11225   010372                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11226   010372  0E00               	movlw	low (__mediumconst shr (0+16))
 11227   010374  6EF8               	movwf	tblptru,c
 11228   010376                     	endif
 11229   010376  0008               	tblrd		*
 11230   010378  50F5               	movf	tablat,w,c
 11231   01037A  6E01               	movwf	fputc@c^(0+1280),c
 11232   01037C  6A02               	clrf	(fputc@c+1)^(0+1280),c
 11233   01037E  C527  F503         	movff	vfpfcnvrt@fp,fputc@fp
 11234   010382  C528  F504         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11235   010386  ECB4  F085         	call	_fputc	;wreg free
 11236   01038A  EFA8  F081         	goto	l2948
 11237   01038E                     l1480:
 11238   01038E  0012               	return		;funcret
 11239   010390                     __end_of_vfpfcnvrt:
 11240                           	callstack 0
 11241                           
 11242 ;; *************** function _xtoa *****************
 11243 ;; Defined at:
 11244 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 11247 ;;		 -> NULL(0), 
 11248 ;;  d               2   27[COMRAM] unsigned int 
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;  i               2   36[COMRAM] int 
 11251 ;;  w               2   33[COMRAM] int 
 11252 ;;  c               1   35[COMRAM] unsigned char 
 11253 ;;  p               1   32[COMRAM] _Bool 
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  1    wreg      void 
 11256 ;; Registers used:
 11257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11264 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11265 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11266 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11267 ;;Total ram usage:       13 bytes
 11268 ;; Hardware stack levels used: 1
 11269 ;; Hardware stack levels required when called: 4
 11270 ;; This function calls:
 11271 ;;		_pad
 11272 ;; This function is called by:
 11273 ;;		_vfpfcnvrt
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text15
 11278   010998                     __ptext15:
 11279                           	callstack 0
 11280   010998                     _xtoa:
 11281                           	callstack 117
 11282   010998                     
 11283                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
 11284   010998  0E01               	movlw	1
 11285   01099A  6E21               	movwf	xtoa@p^(0+1280),c
 11286   01099C                     
 11287                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 11288   01099C  C598  F522         	movff	_width,xtoa@w
 11289   0109A0  C599  F523         	movff	_width+1,xtoa@w+1
 11290                           
 11291                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 11292   0109A4  0E00               	movlw	0
 11293   0109A6  6E26               	movwf	(xtoa@i+1)^(0+1280),c
 11294   0109A8  0E1F               	movlw	31
 11295   0109AA  6E25               	movwf	xtoa@i^(0+1280),c
 11296   0109AC                     
 11297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 11298   0109AC  0105               	movlb	5	; () banked
 11299   0109AE  6BBB               	clrf	(_dbuf+31)& (0+255),b
 11300                           
 11301                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11302   0109B0  EF0A  F085         	goto	l2834
 11303   0109B4                     l2816:
 11304                           
 11305                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 11306   0109B4  0625               	decf	xtoa@i^(0+1280),f,c
 11307   0109B6  A0D8               	btfss	status,0,c
 11308   0109B8  0626               	decf	(xtoa@i+1)^(0+1280),f,c
 11309   0109BA                     
 11310                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 11311   0109BA  501C               	movf	xtoa@d^(0+1280),w,c
 11312   0109BC  0B0F               	andlw	15
 11313   0109BE  6E24               	movwf	xtoa@c^(0+1280),c
 11314   0109C0                     
 11315                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 11316   0109C0  0E0A               	movlw	10
 11317   0109C2  6024               	cpfslt	xtoa@c^(0+1280),c
 11318   0109C4  EFE6  F084         	goto	u1671
 11319   0109C8  EFE8  F084         	goto	u1670
 11320   0109CC                     u1671:
 11321   0109CC  EFEC  F084         	goto	l2824
 11322   0109D0                     u1670:
 11323   0109D0                     
 11324                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 11325   0109D0  0E30               	movlw	48
 11326   0109D2  2624               	addwf	xtoa@c^(0+1280),f,c
 11327                           
 11328                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 11329   0109D4  EFEE  F084         	goto	l2826
 11330   0109D8                     l2824:
 11331                           
 11332                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 11333   0109D8  0E57               	movlw	87
 11334   0109DA  2624               	addwf	xtoa@c^(0+1280),f,c
 11335   0109DC                     l2826:
 11336                           
 11337                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 11338   0109DC  0E9C               	movlw	low _dbuf
 11339   0109DE  2425               	addwf	xtoa@i^(0+1280),w,c
 11340   0109E0  6ED9               	movwf	fsr2l,c
 11341   0109E2  0E05               	movlw	high _dbuf
 11342   0109E4  2026               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11343   0109E6  6EDA               	movwf	fsr2h,c
 11344   0109E8  C524  F4DF         	movff	xtoa@c,indf2
 11345   0109EC                     
 11346                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
 11347   0109EC  6A21               	clrf	xtoa@p^(0+1280),c
 11348   0109EE                     
 11349                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 11350   0109EE  0622               	decf	xtoa@w^(0+1280),f,c
 11351   0109F0  A0D8               	btfss	status,0,c
 11352   0109F2  0623               	decf	(xtoa@w+1)^(0+1280),f,c
 11353   0109F4                     
 11354                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 11355   0109F4  C51C  F51E         	movff	xtoa@d,??_xtoa
 11356   0109F8  C51D  F51F         	movff	xtoa@d+1,??_xtoa+1
 11357   0109FC  0E04               	movlw	4
 11358   0109FE  6E20               	movwf	(??_xtoa+2)^(0+1280),c
 11359   010A00                     u1685:
 11360   010A00  90D8               	bcf	status,0,c
 11361   010A02  321F               	rrcf	(??_xtoa+1)^(0+1280),f,c
 11362   010A04  321E               	rrcf	??_xtoa^(0+1280),f,c
 11363   010A06  2E20               	decfsz	(??_xtoa+2)^(0+1280),f,c
 11364   010A08  EF00  F085         	goto	u1685
 11365   010A0C  C51E  F51C         	movff	??_xtoa,xtoa@d
 11366   010A10  C51F  F51D         	movff	??_xtoa+1,xtoa@d+1
 11367   010A14                     l2834:
 11368                           
 11369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11370   010A14  BE26               	btfsc	(xtoa@i+1)^(0+1280),7,c
 11371   010A16  EF16  F085         	goto	u1691
 11372   010A1A  5026               	movf	(xtoa@i+1)^(0+1280),w,c
 11373   010A1C  E109               	bnz	u1690
 11374   010A1E  0E02               	movlw	2
 11375   010A20  5C25               	subwf	xtoa@i^(0+1280),w,c
 11376   010A22  A0D8               	btfss	status,0,c
 11377   010A24  EF16  F085         	goto	u1691
 11378   010A28  EF18  F085         	goto	u1690
 11379   010A2C                     u1691:
 11380   010A2C  EF3D  F085         	goto	l2844
 11381   010A30                     u1690:
 11382   010A30  501C               	movf	xtoa@d^(0+1280),w,c
 11383   010A32  101D               	iorwf	(xtoa@d+1)^(0+1280),w,c
 11384   010A34  A4D8               	btfss	status,2,c
 11385   010A36  EF1F  F085         	goto	u1701
 11386   010A3A  EF21  F085         	goto	u1700
 11387   010A3E                     u1701:
 11388   010A3E  EFDA  F084         	goto	l2816
 11389   010A42                     u1700:
 11390   010A42  5021               	movf	xtoa@p^(0+1280),w,c
 11391   010A44  A4D8               	btfss	status,2,c
 11392   010A46  EF27  F085         	goto	u1711
 11393   010A4A  EF29  F085         	goto	u1710
 11394   010A4E                     u1711:
 11395   010A4E  EFDA  F084         	goto	l2816
 11396   010A52                     u1710:
 11397   010A52  BE23               	btfsc	(xtoa@w+1)^(0+1280),7,c
 11398   010A54  EF34  F085         	goto	u1721
 11399   010A58  5023               	movf	(xtoa@w+1)^(0+1280),w,c
 11400   010A5A  E108               	bnz	u1720
 11401   010A5C  0422               	decf	xtoa@w^(0+1280),w,c
 11402   010A5E  A0D8               	btfss	status,0,c
 11403   010A60  EF34  F085         	goto	u1721
 11404   010A64  EF36  F085         	goto	u1720
 11405   010A68                     u1721:
 11406   010A68  EF3D  F085         	goto	l2844
 11407   010A6C                     u1720:
 11408   010A6C  B25E               	btfsc	_flags^(0+1280),1,c
 11409   010A6E  EF3B  F085         	goto	u1731
 11410   010A72  EF3D  F085         	goto	u1730
 11411   010A76                     u1731:
 11412   010A76  EFDA  F084         	goto	l2816
 11413   010A7A                     u1730:
 11414   010A7A                     l2844:
 11415                           
 11416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 11417   010A7A  C51A  F511         	movff	xtoa@fp,pad@fp
 11418   010A7E  C51B  F512         	movff	xtoa@fp+1,pad@fp+1
 11419   010A82  0E9C               	movlw	low _dbuf
 11420   010A84  2425               	addwf	xtoa@i^(0+1280),w,c
 11421   010A86  6E13               	movwf	pad@buf^(0+1280),c
 11422   010A88  0E05               	movlw	high _dbuf
 11423   010A8A  2026               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11424   010A8C  6E14               	movwf	(pad@buf+1)^(0+1280),c
 11425   010A8E  C522  F515         	movff	xtoa@w,pad@p
 11426   010A92  C523  F516         	movff	xtoa@w+1,pad@p+1
 11427   010A96  EC87  F087         	call	_pad	;wreg free
 11428   010A9A  0012               	return		;funcret
 11429   010A9C                     __end_of_xtoa:
 11430                           	callstack 0
 11431                           
 11432 ;; *************** function _stoa *****************
 11433 ;; Defined at:
 11434 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 11437 ;;		 -> NULL(0), 
 11438 ;;  s               2   11[COMRAM] PTR unsigned char 
 11439 ;;		 -> ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), rf24_datarates(24), 
 11440 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 11441 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_5(9), 
 11442 ;;		 -> STR_4(13), STR_3(13), 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;  l               2   21[COMRAM] int 
 11445 ;;  cp              2   19[COMRAM] PTR unsigned char 
 11446 ;;		 -> STR_25(7), ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), 
 11447 ;;		 -> rf24_datarates(24), STR_12(14), STR_11(8), STR_10(9), 
 11448 ;;		 -> STR_9(7), STR_8(10), STR_7(7), STR_6(11), 
 11449 ;;		 -> STR_5(9), STR_4(13), STR_3(13), 
 11450 ;;  w               2   17[COMRAM] int 
 11451 ;;  p               2   15[COMRAM] int 
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      void 
 11454 ;; Registers used:
 11455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11462 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11464 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11465 ;;Total ram usage:       14 bytes
 11466 ;; Hardware stack levels used: 1
 11467 ;; Hardware stack levels required when called: 2
 11468 ;; This function calls:
 11469 ;;		_fputc
 11470 ;; This function is called by:
 11471 ;;		_vfpfcnvrt
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text16
 11476   01070C                     __ptext16:
 11477                           	callstack 0
 11478   01070C                     _stoa:
 11479                           	callstack 119
 11480   01070C                     
 11481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 11482   01070C  C50C  F514         	movff	stoa@s,stoa@cp
 11483   010710  C50D  F515         	movff	stoa@s+1,stoa@cp+1
 11484                           
 11485                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11486   010714  5014               	movf	stoa@cp^(0+1280),w,c
 11487   010716  1015               	iorwf	(stoa@cp+1)^(0+1280),w,c
 11488   010718  A4D8               	btfss	status,2,c
 11489   01071A  EF91  F083         	goto	u1581
 11490   01071E  EF93  F083         	goto	u1580
 11491   010722                     u1581:
 11492   010722  EF97  F083         	goto	l2782
 11493   010726                     u1580:
 11494   010726                     
 11495                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11496   010726  0ED9               	movlw	low STR_25
 11497   010728  6E14               	movwf	stoa@cp^(0+1280),c
 11498   01072A  0EFF               	movlw	high STR_25
 11499   01072C  6E15               	movwf	(stoa@cp+1)^(0+1280),c
 11500   01072E                     l2782:
 11501                           
 11502                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11503   01072E  0E00               	movlw	0
 11504   010730  6E17               	movwf	(stoa@l+1)^(0+1280),c
 11505   010732  0E00               	movlw	0
 11506   010734  6E16               	movwf	stoa@l^(0+1280),c
 11507   010736  EF9F  F083         	goto	l2786
 11508   01073A                     l2784:
 11509   01073A  4A16               	infsnz	stoa@l^(0+1280),f,c
 11510   01073C  2A17               	incf	(stoa@l+1)^(0+1280),f,c
 11511   01073E                     l2786:
 11512   01073E  5016               	movf	stoa@l^(0+1280),w,c
 11513   010740  2414               	addwf	stoa@cp^(0+1280),w,c
 11514   010742  6E0E               	movwf	??_stoa^(0+1280),c
 11515   010744  5017               	movf	(stoa@l+1)^(0+1280),w,c
 11516   010746  2015               	addwfc	(stoa@cp+1)^(0+1280),w,c
 11517   010748  6E0F               	movwf	(??_stoa+1)^(0+1280),c
 11518   01074A  C50E  F4F6         	movff	??_stoa,tblptrl
 11519   01074E  C50F  F4F7         	movff	??_stoa+1,tblptrh
 11520   010752  0E00               	movlw	low (__mediumconst shr (0+16))
 11521   010754  6EF8               	movwf	tblptru,c
 11522   010756  0E25               	movlw	(high __ramtop+-1)
 11523   010758  64F7               	cpfsgt	tblptrh,c
 11524   01075A  D003               	bra	u1597
 11525   01075C  0008               	tblrd		*
 11526   01075E  50F5               	movf	tablat,w,c
 11527   010760  D005               	bra	u1590
 11528   010762                     u1597:
 11529   010762  C4F6 F4E9          	movff	tblptrl,fsr0l
 11530   010766  C4F7 F4EA          	movff	tblptrh,fsr0h
 11531   01076A  50EF               	movf	indf0,w,c
 11532   01076C                     u1590:
 11533   01076C  0900               	iorlw	0
 11534   01076E  A4D8               	btfss	status,2,c
 11535   010770  EFBC  F083         	goto	u1601
 11536   010774  EFBE  F083         	goto	u1600
 11537   010778                     u1601:
 11538   010778  EF9D  F083         	goto	l2784
 11539   01077C                     u1600:
 11540   01077C                     
 11541                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11542   01077C  C516  F510         	movff	stoa@l,stoa@p
 11543   010780  C517  F511         	movff	stoa@l+1,stoa@p+1
 11544                           
 11545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 11546   010784  C598  F512         	movff	_width,stoa@w
 11547   010788  C599  F513         	movff	_width+1,stoa@w+1
 11548                           
 11549                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 11550   01078C  B05E               	btfsc	_flags^(0+1280),0,c
 11551   01078E  EFCB  F083         	goto	u1611
 11552   010792  EFCD  F083         	goto	u1610
 11553   010796                     u1611:
 11554   010796  EF09  F084         	goto	l2800
 11555   01079A                     u1610:
 11556   01079A  EFDB  F083         	goto	l2794
 11557   01079E                     l2790:
 11558                           
 11559                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 11560   01079E  0E00               	movlw	0
 11561   0107A0  6E02               	movwf	(fputc@c+1)^(0+1280),c
 11562   0107A2  0E20               	movlw	32
 11563   0107A4  6E01               	movwf	fputc@c^(0+1280),c
 11564   0107A6  C50A  F503         	movff	stoa@fp,fputc@fp
 11565   0107AA  C50B  F504         	movff	stoa@fp+1,fputc@fp+1
 11566   0107AE  ECB4  F085         	call	_fputc	;wreg free
 11567   0107B2                     
 11568                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 11569   0107B2  4A16               	infsnz	stoa@l^(0+1280),f,c
 11570   0107B4  2A17               	incf	(stoa@l+1)^(0+1280),f,c
 11571   0107B6                     l2794:
 11572                           
 11573                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 11574   0107B6  5012               	movf	stoa@w^(0+1280),w,c
 11575   0107B8  5C16               	subwf	stoa@l^(0+1280),w,c
 11576   0107BA  5017               	movf	(stoa@l+1)^(0+1280),w,c
 11577   0107BC  0A80               	xorlw	128
 11578   0107BE  6E0E               	movwf	??_stoa^(0+1280),c
 11579   0107C0  5013               	movf	(stoa@w+1)^(0+1280),w,c
 11580   0107C2  0A80               	xorlw	128
 11581   0107C4  580E               	subwfb	??_stoa^(0+1280),w,c
 11582   0107C6  A0D8               	btfss	status,0,c
 11583   0107C8  EFE8  F083         	goto	u1621
 11584   0107CC  EFEA  F083         	goto	u1620
 11585   0107D0                     u1621:
 11586   0107D0  EFCF  F083         	goto	l2790
 11587   0107D4                     u1620:
 11588   0107D4  EF09  F084         	goto	l2800
 11589   0107D8                     l2796:
 11590                           
 11591                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11592   0107D8  C514  F4F6         	movff	stoa@cp,tblptrl
 11593   0107DC  C515  F4F7         	movff	stoa@cp+1,tblptrh
 11594   0107E0  0E00               	movlw	low (__mediumconst shr (0+16))
 11595   0107E2  6EF8               	movwf	tblptru,c
 11596   0107E4  0E25               	movlw	(high __ramtop+-1)
 11597   0107E6  64F7               	cpfsgt	tblptrh,c
 11598   0107E8  D003               	bra	u1637
 11599   0107EA  0008               	tblrd		*
 11600   0107EC  50F5               	movf	tablat,w,c
 11601   0107EE  D005               	bra	u1630
 11602   0107F0                     u1637:
 11603   0107F0  C4F6 F4E9          	movff	tblptrl,fsr0l
 11604   0107F4  C4F7 F4EA          	movff	tblptrh,fsr0h
 11605   0107F8  50EF               	movf	indf0,w,c
 11606   0107FA                     u1630:
 11607   0107FA  6E0E               	movwf	??_stoa^(0+1280),c
 11608   0107FC  500E               	movf	??_stoa^(0+1280),w,c
 11609   0107FE  6E01               	movwf	fputc@c^(0+1280),c
 11610   010800  6A02               	clrf	(fputc@c+1)^(0+1280),c
 11611   010802  C50A  F503         	movff	stoa@fp,fputc@fp
 11612   010806  C50B  F504         	movff	stoa@fp+1,fputc@fp+1
 11613   01080A  ECB4  F085         	call	_fputc	;wreg free
 11614   01080E                     
 11615                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11616   01080E  4A14               	infsnz	stoa@cp^(0+1280),f,c
 11617   010810  2A15               	incf	(stoa@cp+1)^(0+1280),f,c
 11618   010812                     l2800:
 11619                           
 11620                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11621   010812  0610               	decf	stoa@p^(0+1280),f,c
 11622   010814  A0D8               	btfss	status,0,c
 11623   010816  0611               	decf	(stoa@p+1)^(0+1280),f,c
 11624   010818  2810               	incf	stoa@p^(0+1280),w,c
 11625   01081A  E106               	bnz	u1641
 11626   01081C  2811               	incf	(stoa@p+1)^(0+1280),w,c
 11627   01081E  A4D8               	btfss	status,2,c
 11628   010820  EF14  F084         	goto	u1641
 11629   010824  EF16  F084         	goto	u1640
 11630   010828                     u1641:
 11631   010828  EFEC  F083         	goto	l2796
 11632   01082C                     u1640:
 11633   01082C                     
 11634                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 11635   01082C  A05E               	btfss	_flags^(0+1280),0,c
 11636   01082E  EF1B  F084         	goto	u1651
 11637   010832  EF1D  F084         	goto	u1650
 11638   010836                     u1651:
 11639   010836  EF3A  F084         	goto	l1445
 11640   01083A                     u1650:
 11641   01083A  EF2B  F084         	goto	l2808
 11642   01083E                     l2804:
 11643                           
 11644                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 11645   01083E  0E00               	movlw	0
 11646   010840  6E02               	movwf	(fputc@c+1)^(0+1280),c
 11647   010842  0E20               	movlw	32
 11648   010844  6E01               	movwf	fputc@c^(0+1280),c
 11649   010846  C50A  F503         	movff	stoa@fp,fputc@fp
 11650   01084A  C50B  F504         	movff	stoa@fp+1,fputc@fp+1
 11651   01084E  ECB4  F085         	call	_fputc	;wreg free
 11652   010852                     
 11653                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 11654   010852  4A16               	infsnz	stoa@l^(0+1280),f,c
 11655   010854  2A17               	incf	(stoa@l+1)^(0+1280),f,c
 11656   010856                     l2808:
 11657                           
 11658                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 11659   010856  5012               	movf	stoa@w^(0+1280),w,c
 11660   010858  5C16               	subwf	stoa@l^(0+1280),w,c
 11661   01085A  5017               	movf	(stoa@l+1)^(0+1280),w,c
 11662   01085C  0A80               	xorlw	128
 11663   01085E  6E0E               	movwf	??_stoa^(0+1280),c
 11664   010860  5013               	movf	(stoa@w+1)^(0+1280),w,c
 11665   010862  0A80               	xorlw	128
 11666   010864  580E               	subwfb	??_stoa^(0+1280),w,c
 11667   010866  A0D8               	btfss	status,0,c
 11668   010868  EF38  F084         	goto	u1661
 11669   01086C  EF3A  F084         	goto	u1660
 11670   010870                     u1661:
 11671   010870  EF1F  F084         	goto	l2804
 11672   010874                     u1660:
 11673   010874                     l1445:
 11674   010874  0012               	return		;funcret
 11675   010876                     __end_of_stoa:
 11676                           	callstack 0
 11677                           
 11678 ;; *************** function _read_prec_or_width *****************
 11679 ;; Defined at:
 11680 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  fmt             2    0[COMRAM] PTR PTR const unsigned c
 11683 ;;		 -> vfprintf@cfmt(2), 
 11684 ;;  ap              2    2[COMRAM] PTR PTR void [1]
 11685 ;;		 -> printf@ap(2), 
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;  c               1    6[COMRAM] unsigned char 
 11688 ;;  n               2    7[COMRAM] int 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  2    0[COMRAM] int 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11699 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11701 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11702 ;;Total ram usage:        9 bytes
 11703 ;; Hardware stack levels used: 1
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_vfpfcnvrt
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text17
 11712   010A9C                     __ptext17:
 11713                           	callstack 0
 11714   010A9C                     _read_prec_or_width:
 11715                           	callstack 121
 11716   010A9C                     
 11717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11718   010A9C  0E00               	movlw	0
 11719   010A9E  6E09               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11720   010AA0  0E00               	movlw	0
 11721   010AA2  6E08               	movwf	read_prec_or_width@n^(0+1280),c
 11722   010AA4                     
 11723                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11724   010AA4  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11725   010AA8  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11726   010AAC  C4DE F4F6          	movff	postinc2,tblptrl
 11727   010AB0  C4DD F4F7          	movff	postdec2,tblptrh
 11728   010AB4                     	if	0	;tblptru may be non-zero
 11729   010AB4                     	endif
 11730   010AB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11731   010AB4  0E00               	movlw	low (__mediumconst shr (0+16))
 11732   010AB6  6EF8               	movwf	tblptru,c
 11733   010AB8                     	endif
 11734   010AB8  0008               	tblrd		*
 11735   010ABA  50F5               	movf	tablat,w,c
 11736   010ABC  0A2A               	xorlw	42
 11737   010ABE  A4D8               	btfss	status,2,c
 11738   010AC0  EF64  F085         	goto	u1741
 11739   010AC4  EF66  F085         	goto	u1740
 11740   010AC8                     u1741:
 11741   010AC8  EF99  F085         	goto	l2858
 11742   010ACC                     u1740:
 11743   010ACC                     
 11744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11745   010ACC  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11746   010AD0  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11747   010AD4  2ADE               	incf	postinc2,f,c
 11748   010AD6  0E00               	movlw	0
 11749   010AD8  22DD               	addwfc	postdec2,f,c
 11750                           
 11751                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11752   010ADA  C503  F4D9         	movff	read_prec_or_width@ap,fsr2l
 11753   010ADE  C504  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 11754   010AE2  C4DF F505          	movff	indf2,??_read_prec_or_width
 11755   010AE6  0E02               	movlw	2
 11756   010AE8  26DE               	addwf	postinc2,f,c
 11757   010AEA  C4DF F506          	movff	indf2,??_read_prec_or_width+1
 11758   010AEE  0E00               	movlw	0
 11759   010AF0  22DD               	addwfc	postdec2,f,c
 11760   010AF2  C505  F4D9         	movff	??_read_prec_or_width,fsr2l
 11761   010AF6  C506  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 11762   010AFA  C4DE F508          	movff	postinc2,read_prec_or_width@n
 11763   010AFE  C4DD F509          	movff	postdec2,read_prec_or_width@n+1
 11764                           
 11765                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11766   010B02  EFAF  F085         	goto	l1461
 11767   010B06                     l2854:
 11768                           
 11769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11770   010B06  0E0A               	movlw	10
 11771   010B08  0208               	mulwf	read_prec_or_width@n^(0+1280),c
 11772   010B0A  C4F3 F505          	movff	prodl,??_read_prec_or_width
 11773   010B0E  C4F4 F506          	movff	prodh,??_read_prec_or_width+1
 11774   010B12  0209               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 11775   010B14  50F3               	movf	prodl,w,c
 11776   010B16  2606               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 11777   010B18  5007               	movf	read_prec_or_width@c^(0+1280),w,c
 11778   010B1A  2405               	addwf	??_read_prec_or_width^(0+1280),w,c
 11779   010B1C  6E08               	movwf	read_prec_or_width@n^(0+1280),c
 11780   010B1E  0E00               	movlw	0
 11781   010B20  2006               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 11782   010B22  6E09               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11783   010B24                     
 11784                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11785   010B24  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11786   010B28  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11787   010B2C  2ADE               	incf	postinc2,f,c
 11788   010B2E  0E00               	movlw	0
 11789   010B30  22DD               	addwfc	postdec2,f,c
 11790   010B32                     l2858:
 11791                           
 11792                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11793   010B32  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11794   010B36  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11795   010B3A  C4DE F4F6          	movff	postinc2,tblptrl
 11796   010B3E  C4DD F4F7          	movff	postdec2,tblptrh
 11797   010B42                     	if	0	;tblptru may be non-zero
 11798   010B42                     	endif
 11799   010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11800   010B42  0E00               	movlw	low (__mediumconst shr (0+16))
 11801   010B44  6EF8               	movwf	tblptru,c
 11802   010B46                     	endif
 11803   010B46  0008               	tblrd		*
 11804   010B48  50F5               	movf	tablat,w,c
 11805   010B4A  0FD0               	addlw	208
 11806   010B4C  6E07               	movwf	read_prec_or_width@c^(0+1280),c
 11807   010B4E  0E09               	movlw	9
 11808   010B50  6407               	cpfsgt	read_prec_or_width@c^(0+1280),c
 11809   010B52  EFAD  F085         	goto	u1751
 11810   010B56  EFAF  F085         	goto	u1750
 11811   010B5A                     u1751:
 11812   010B5A  EF83  F085         	goto	l2854
 11813   010B5E                     u1750:
 11814   010B5E                     l1461:
 11815                           
 11816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11817   010B5E  C508  F501         	movff	read_prec_or_width@n,?_read_prec_or_width
 11818   010B62  C509  F502         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11819   010B66  0012               	return		;funcret
 11820   010B68                     __end_of_read_prec_or_width:
 11821                           	callstack 0
 11822                           
 11823 ;; *************** function _dtoa *****************
 11824 ;; Defined at:
 11825 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 11828 ;;		 -> NULL(0), 
 11829 ;;  d               2   27[COMRAM] int 
 11830 ;; Auto vars:     Size  Location     Type
 11831 ;;  i               2   35[COMRAM] int 
 11832 ;;  w               2   32[COMRAM] int 
 11833 ;;  s               1   34[COMRAM] unsigned char 
 11834 ;;  p               1   31[COMRAM] _Bool 
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      void 
 11837 ;; Registers used:
 11838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11845 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11847 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11848 ;;Total ram usage:       12 bytes
 11849 ;; Hardware stack levels used: 1
 11850 ;; Hardware stack levels required when called: 4
 11851 ;; This function calls:
 11852 ;;		___awdiv
 11853 ;;		___awmod
 11854 ;;		_abs
 11855 ;;		_pad
 11856 ;; This function is called by:
 11857 ;;		_vfpfcnvrt
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           	psect	text18
 11862   010596                     __ptext18:
 11863                           	callstack 0
 11864   010596                     _dtoa:
 11865                           	callstack 117
 11866   010596                     
 11867                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 11868   010596  0E01               	movlw	1
 11869   010598  6E20               	movwf	dtoa@p^(0+1280),c
 11870   01059A                     
 11871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 11872   01059A  BE1D               	btfsc	(dtoa@d+1)^(0+1280),7,c
 11873   01059C  EFD2  F082         	goto	u1481
 11874   0105A0  EFD5  F082         	goto	u1480
 11875   0105A4                     u1481:
 11876   0105A4  0E01               	movlw	1
 11877   0105A6  EFD6  F082         	goto	u1490
 11878   0105AA                     u1480:
 11879   0105AA  0E00               	movlw	0
 11880   0105AC                     u1490:
 11881   0105AC  6E23               	movwf	dtoa@s^(0+1280),c
 11882   0105AE                     
 11883                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 11884   0105AE  C598  F521         	movff	_width,dtoa@w
 11885   0105B2  C599  F522         	movff	_width+1,dtoa@w+1
 11886   0105B6                     
 11887                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 11888   0105B6  5023               	movf	dtoa@s^(0+1280),w,c
 11889   0105B8  B4D8               	btfsc	status,2,c
 11890   0105BA  EFE1  F082         	goto	u1501
 11891   0105BE  EFE3  F082         	goto	u1500
 11892   0105C2                     u1501:
 11893   0105C2  EFFA  F082         	goto	l1413
 11894   0105C6                     u1500:
 11895   0105C6                     
 11896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 11897   0105C6  0621               	decf	dtoa@w^(0+1280),f,c
 11898   0105C8  A0D8               	btfss	status,0,c
 11899   0105CA  0622               	decf	(dtoa@w+1)^(0+1280),f,c
 11900   0105CC                     
 11901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 11902   0105CC  5023               	movf	dtoa@s^(0+1280),w,c
 11903   0105CE  A4D8               	btfss	status,2,c
 11904   0105D0  EFEC  F082         	goto	u1511
 11905   0105D4  EFEE  F082         	goto	u1510
 11906   0105D8                     u1511:
 11907   0105D8  EFF4  F082         	goto	l2742
 11908   0105DC                     u1510:
 11909   0105DC  0E00               	movlw	0
 11910   0105DE  6E1F               	movwf	(_dtoa$1697+1)^(0+1280),c
 11911   0105E0  0E2B               	movlw	43
 11912   0105E2  6E1E               	movwf	_dtoa$1697^(0+1280),c
 11913   0105E4  EFF8  F082         	goto	l2744
 11914   0105E8                     l2742:
 11915   0105E8  0E00               	movlw	0
 11916   0105EA  6E1F               	movwf	(_dtoa$1697+1)^(0+1280),c
 11917   0105EC  0E2D               	movlw	45
 11918   0105EE  6E1E               	movwf	_dtoa$1697^(0+1280),c
 11919   0105F0                     l2744:
 11920   0105F0  C51E  F523         	movff	_dtoa$1697,dtoa@s
 11921   0105F4                     l1413:
 11922                           
 11923                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 11924   0105F4  0E00               	movlw	0
 11925   0105F6  6E25               	movwf	(dtoa@i+1)^(0+1280),c
 11926   0105F8  0E1F               	movlw	31
 11927   0105FA  6E24               	movwf	dtoa@i^(0+1280),c
 11928   0105FC                     
 11929                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 11930   0105FC  0105               	movlb	5	; () banked
 11931   0105FE  6BBB               	clrf	(_dbuf+31)& (0+255),b
 11932                           
 11933                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11934   010600  EF30  F083         	goto	l2758
 11935   010604                     l2748:
 11936                           
 11937                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 11938   010604  0624               	decf	dtoa@i^(0+1280),f,c
 11939   010606  A0D8               	btfss	status,0,c
 11940   010608  0625               	decf	(dtoa@i+1)^(0+1280),f,c
 11941   01060A                     
 11942                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 11943   01060A  0E9C               	movlw	low _dbuf
 11944   01060C  2424               	addwf	dtoa@i^(0+1280),w,c
 11945   01060E  6ED9               	movwf	fsr2l,c
 11946   010610  0E05               	movlw	high _dbuf
 11947   010612  2025               	addwfc	(dtoa@i+1)^(0+1280),w,c
 11948   010614  6EDA               	movwf	fsr2h,c
 11949   010616  C51C  F501         	movff	dtoa@d,___awmod@dividend
 11950   01061A  C51D  F502         	movff	dtoa@d+1,___awmod@dividend+1
 11951   01061E  0E00               	movlw	0
 11952   010620  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
 11953   010622  0E0A               	movlw	10
 11954   010624  6E03               	movwf	___awmod@divisor^(0+1280),c
 11955   010626  ECDF  F086         	call	___awmod	;wreg free
 11956   01062A  C501  F507         	movff	?___awmod,abs@a
 11957   01062E  C502  F508         	movff	?___awmod+1,abs@a+1
 11958   010632  ECC6  F08A         	call	_abs	;wreg free
 11959   010636  5007               	movf	?_abs^(0+1280),w,c
 11960   010638  0F30               	addlw	48
 11961   01063A  6EDF               	movwf	indf2,c
 11962   01063C                     
 11963                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 11964   01063C  6A20               	clrf	dtoa@p^(0+1280),c
 11965   01063E                     
 11966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 11967   01063E  0621               	decf	dtoa@w^(0+1280),f,c
 11968   010640  A0D8               	btfss	status,0,c
 11969   010642  0622               	decf	(dtoa@w+1)^(0+1280),f,c
 11970   010644                     
 11971                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 11972   010644  C51C  F501         	movff	dtoa@d,___awdiv@dividend
 11973   010648  C51D  F502         	movff	dtoa@d+1,___awdiv@dividend+1
 11974   01064C  0E00               	movlw	0
 11975   01064E  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 11976   010650  0E0A               	movlw	10
 11977   010652  6E03               	movwf	___awdiv@divisor^(0+1280),c
 11978   010654  EC7E  F086         	call	___awdiv	;wreg free
 11979   010658  C501  F51C         	movff	?___awdiv,dtoa@d
 11980   01065C  C502  F51D         	movff	?___awdiv+1,dtoa@d+1
 11981   010660                     l2758:
 11982                           
 11983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11984   010660  BE25               	btfsc	(dtoa@i+1)^(0+1280),7,c
 11985   010662  EF3B  F083         	goto	u1521
 11986   010666  5025               	movf	(dtoa@i+1)^(0+1280),w,c
 11987   010668  E108               	bnz	u1520
 11988   01066A  0424               	decf	dtoa@i^(0+1280),w,c
 11989   01066C  A0D8               	btfss	status,0,c
 11990   01066E  EF3B  F083         	goto	u1521
 11991   010672  EF3D  F083         	goto	u1520
 11992   010676                     u1521:
 11993   010676  EF62  F083         	goto	l2768
 11994   01067A                     u1520:
 11995   01067A  501C               	movf	dtoa@d^(0+1280),w,c
 11996   01067C  101D               	iorwf	(dtoa@d+1)^(0+1280),w,c
 11997   01067E  A4D8               	btfss	status,2,c
 11998   010680  EF44  F083         	goto	u1531
 11999   010684  EF46  F083         	goto	u1530
 12000   010688                     u1531:
 12001   010688  EF02  F083         	goto	l2748
 12002   01068C                     u1530:
 12003   01068C  5020               	movf	dtoa@p^(0+1280),w,c
 12004   01068E  A4D8               	btfss	status,2,c
 12005   010690  EF4C  F083         	goto	u1541
 12006   010694  EF4E  F083         	goto	u1540
 12007   010698                     u1541:
 12008   010698  EF02  F083         	goto	l2748
 12009   01069C                     u1540:
 12010   01069C  BE22               	btfsc	(dtoa@w+1)^(0+1280),7,c
 12011   01069E  EF59  F083         	goto	u1551
 12012   0106A2  5022               	movf	(dtoa@w+1)^(0+1280),w,c
 12013   0106A4  E108               	bnz	u1550
 12014   0106A6  0421               	decf	dtoa@w^(0+1280),w,c
 12015   0106A8  A0D8               	btfss	status,0,c
 12016   0106AA  EF59  F083         	goto	u1551
 12017   0106AE  EF5B  F083         	goto	u1550
 12018   0106B2                     u1551:
 12019   0106B2  EF62  F083         	goto	l2768
 12020   0106B6                     u1550:
 12021   0106B6  B25E               	btfsc	_flags^(0+1280),1,c
 12022   0106B8  EF60  F083         	goto	u1561
 12023   0106BC  EF62  F083         	goto	u1560
 12024   0106C0                     u1561:
 12025   0106C0  EF02  F083         	goto	l2748
 12026   0106C4                     u1560:
 12027   0106C4                     l2768:
 12028                           
 12029                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 12030   0106C4  5023               	movf	dtoa@s^(0+1280),w,c
 12031   0106C6  B4D8               	btfsc	status,2,c
 12032   0106C8  EF68  F083         	goto	u1571
 12033   0106CC  EF6A  F083         	goto	u1570
 12034   0106D0                     u1571:
 12035   0106D0  EF75  F083         	goto	l2774
 12036   0106D4                     u1570:
 12037   0106D4                     
 12038                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 12039   0106D4  0624               	decf	dtoa@i^(0+1280),f,c
 12040   0106D6  A0D8               	btfss	status,0,c
 12041   0106D8  0625               	decf	(dtoa@i+1)^(0+1280),f,c
 12042   0106DA                     
 12043                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 12044   0106DA  0E9C               	movlw	low _dbuf
 12045   0106DC  2424               	addwf	dtoa@i^(0+1280),w,c
 12046   0106DE  6ED9               	movwf	fsr2l,c
 12047   0106E0  0E05               	movlw	high _dbuf
 12048   0106E2  2025               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12049   0106E4  6EDA               	movwf	fsr2h,c
 12050   0106E6  C523  F4DF         	movff	dtoa@s,indf2
 12051   0106EA                     l2774:
 12052                           
 12053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 12054   0106EA  C51A  F511         	movff	dtoa@fp,pad@fp
 12055   0106EE  C51B  F512         	movff	dtoa@fp+1,pad@fp+1
 12056   0106F2  0E9C               	movlw	low _dbuf
 12057   0106F4  2424               	addwf	dtoa@i^(0+1280),w,c
 12058   0106F6  6E13               	movwf	pad@buf^(0+1280),c
 12059   0106F8  0E05               	movlw	high _dbuf
 12060   0106FA  2025               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12061   0106FC  6E14               	movwf	(pad@buf+1)^(0+1280),c
 12062   0106FE  C521  F515         	movff	dtoa@w,pad@p
 12063   010702  C522  F516         	movff	dtoa@w+1,pad@p+1
 12064   010706  EC87  F087         	call	_pad	;wreg free
 12065   01070A  0012               	return		;funcret
 12066   01070C                     __end_of_dtoa:
 12067                           	callstack 0
 12068                           
 12069 ;; *************** function _pad *****************
 12070 ;; Defined at:
 12071 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12074 ;;		 -> NULL(0), 
 12075 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12076 ;;		 -> dbuf(32), 
 12077 ;;  p               2   20[COMRAM] int 
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;  i               2   23[COMRAM] int 
 12080 ;; Return value:  Size  Location     Type
 12081 ;;                  1    wreg      void 
 12082 ;; Registers used:
 12083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12084 ;; Tracked objects:
 12085 ;;		On entry : 0/0
 12086 ;;		On exit  : 0/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12089 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12092 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12093 ;;Total ram usage:        9 bytes
 12094 ;; Hardware stack levels used: 1
 12095 ;; Hardware stack levels required when called: 3
 12096 ;; This function calls:
 12097 ;;		_fputc
 12098 ;;		_fputs
 12099 ;; This function is called by:
 12100 ;;		_dtoa
 12101 ;;		_xtoa
 12102 ;; This function uses a non-reentrant model
 12103 ;;
 12104                           
 12105                           	psect	text19
 12106   010F0E                     __ptext19:
 12107                           	callstack 0
 12108   010F0E                     _pad:
 12109                           	callstack 117
 12110   010F0E                     
 12111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 12112   010F0E  A05E               	btfss	_flags^(0+1280),0,c
 12113   010F10  EF8C  F087         	goto	u1431
 12114   010F14  EF8E  F087         	goto	u1430
 12115   010F18                     u1431:
 12116   010F18  EF98  F087         	goto	l2712
 12117   010F1C                     u1430:
 12118   010F1C                     
 12119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 12120   010F1C  C513  F50A         	movff	pad@buf,fputs@s
 12121   010F20  C514  F50B         	movff	pad@buf+1,fputs@s+1
 12122   010F24  C511  F50C         	movff	pad@fp,fputs@fp
 12123   010F28  C512  F50D         	movff	pad@fp+1,fputs@fp+1
 12124   010F2C  EC4E  F08A         	call	_fputs	;wreg free
 12125   010F30                     l2712:
 12126                           
 12127                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 12128   010F30  BE16               	btfsc	(pad@p+1)^(0+1280),7,c
 12129   010F32  EF9F  F087         	goto	u1440
 12130   010F36  EF9D  F087         	goto	u1441
 12131   010F3A                     u1441:
 12132   010F3A  EFA3  F087         	goto	l1405
 12133   010F3E                     u1440:
 12134   010F3E                     
 12135                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12136   010F3E  0E00               	movlw	0
 12137   010F40  6E16               	movwf	(pad@p+1)^(0+1280),c
 12138   010F42  0E00               	movlw	0
 12139   010F44  6E15               	movwf	pad@p^(0+1280),c
 12140   010F46                     l1405:
 12141                           
 12142                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12143   010F46  0E00               	movlw	0
 12144   010F48  6E19               	movwf	(pad@i+1)^(0+1280),c
 12145   010F4A  0E00               	movlw	0
 12146   010F4C  6E18               	movwf	pad@i^(0+1280),c
 12147                           
 12148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12149   010F4E  EFB5  F087         	goto	l2720
 12150   010F52                     l2716:
 12151                           
 12152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 12153   010F52  0E00               	movlw	0
 12154   010F54  6E02               	movwf	(fputc@c+1)^(0+1280),c
 12155   010F56  0E20               	movlw	32
 12156   010F58  6E01               	movwf	fputc@c^(0+1280),c
 12157   010F5A  C511  F503         	movff	pad@fp,fputc@fp
 12158   010F5E  C512  F504         	movff	pad@fp+1,fputc@fp+1
 12159   010F62  ECB4  F085         	call	_fputc	;wreg free
 12160   010F66                     
 12161                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12162   010F66  4A18               	infsnz	pad@i^(0+1280),f,c
 12163   010F68  2A19               	incf	(pad@i+1)^(0+1280),f,c
 12164   010F6A                     l2720:
 12165                           
 12166                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12167   010F6A  5015               	movf	pad@p^(0+1280),w,c
 12168   010F6C  5C18               	subwf	pad@i^(0+1280),w,c
 12169   010F6E  5019               	movf	(pad@i+1)^(0+1280),w,c
 12170   010F70  0A80               	xorlw	128
 12171   010F72  6E17               	movwf	??_pad^(0+1280),c
 12172   010F74  5016               	movf	(pad@p+1)^(0+1280),w,c
 12173   010F76  0A80               	xorlw	128
 12174   010F78  5817               	subwfb	??_pad^(0+1280),w,c
 12175   010F7A  A0D8               	btfss	status,0,c
 12176   010F7C  EFC2  F087         	goto	u1451
 12177   010F80  EFC4  F087         	goto	u1450
 12178   010F84                     u1451:
 12179   010F84  EFA9  F087         	goto	l2716
 12180   010F88                     u1450:
 12181   010F88                     
 12182                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 12183   010F88  B05E               	btfsc	_flags^(0+1280),0,c
 12184   010F8A  EFC9  F087         	goto	u1461
 12185   010F8E  EFCB  F087         	goto	u1460
 12186   010F92                     u1461:
 12187   010F92  EFD5  F087         	goto	l1410
 12188   010F96                     u1460:
 12189   010F96                     
 12190                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 12191   010F96  C513  F50A         	movff	pad@buf,fputs@s
 12192   010F9A  C514  F50B         	movff	pad@buf+1,fputs@s+1
 12193   010F9E  C511  F50C         	movff	pad@fp,fputs@fp
 12194   010FA2  C512  F50D         	movff	pad@fp+1,fputs@fp+1
 12195   010FA6  EC4E  F08A         	call	_fputs	;wreg free
 12196   010FAA                     l1410:
 12197   010FAA  0012               	return		;funcret
 12198   010FAC                     __end_of_pad:
 12199                           	callstack 0
 12200                           
 12201 ;; *************** function _fputs *****************
 12202 ;; Defined at:
 12203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12206 ;;		 -> dbuf(32), 
 12207 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12208 ;;		 -> NULL(0), 
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;  i               2   14[COMRAM] int 
 12211 ;;  c               1   13[COMRAM] unsigned char 
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  2    9[COMRAM] int 
 12214 ;; Registers used:
 12215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12222 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12224 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12225 ;;Total ram usage:        7 bytes
 12226 ;; Hardware stack levels used: 1
 12227 ;; Hardware stack levels required when called: 2
 12228 ;; This function calls:
 12229 ;;		_fputc
 12230 ;; This function is called by:
 12231 ;;		_pad
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text20
 12236   01149C                     __ptext20:
 12237                           	callstack 0
 12238   01149C                     _fputs:
 12239                           	callstack 117
 12240   01149C  0E00               	movlw	0
 12241   01149E  6E10               	movwf	(fputs@i+1)^(0+1280),c
 12242   0114A0  0E00               	movlw	0
 12243   0114A2  6E0F               	movwf	fputs@i^(0+1280),c
 12244   0114A4  EF5F  F08A         	goto	l2626
 12245   0114A8                     l2622:
 12246   0114A8  C50E  F501         	movff	fputs@c,fputc@c
 12247   0114AC  6A02               	clrf	(fputc@c+1)^(0+1280),c
 12248   0114AE  C50C  F503         	movff	fputs@fp,fputc@fp
 12249   0114B2  C50D  F504         	movff	fputs@fp+1,fputc@fp+1
 12250   0114B6  ECB4  F085         	call	_fputc	;wreg free
 12251   0114BA  4A0F               	infsnz	fputs@i^(0+1280),f,c
 12252   0114BC  2A10               	incf	(fputs@i+1)^(0+1280),f,c
 12253   0114BE                     l2626:
 12254   0114BE  500F               	movf	fputs@i^(0+1280),w,c
 12255   0114C0  240A               	addwf	fputs@s^(0+1280),w,c
 12256   0114C2  6ED9               	movwf	fsr2l,c
 12257   0114C4  5010               	movf	(fputs@i+1)^(0+1280),w,c
 12258   0114C6  200B               	addwfc	(fputs@s+1)^(0+1280),w,c
 12259   0114C8  6EDA               	movwf	fsr2h,c
 12260   0114CA  50DF               	movf	indf2,w,c
 12261   0114CC  6E0E               	movwf	fputs@c^(0+1280),c
 12262   0114CE  500E               	movf	fputs@c^(0+1280),w,c
 12263   0114D0  A4D8               	btfss	status,2,c
 12264   0114D2  EF6D  F08A         	goto	u1301
 12265   0114D6  EF6F  F08A         	goto	u1300
 12266   0114DA                     u1301:
 12267   0114DA  EF54  F08A         	goto	l2622
 12268   0114DE                     u1300:
 12269   0114DE  0012               	return		;funcret
 12270   0114E0                     __end_of_fputs:
 12271                           	callstack 0
 12272                           
 12273 ;; *************** function _fputc *****************
 12274 ;; Defined at:
 12275 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  c               2    0[COMRAM] int 
 12278 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12279 ;;		 -> NULL(0), 
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;		None
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  2    0[COMRAM] int 
 12284 ;; Registers used:
 12285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12293 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12294 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12295 ;;Total ram usage:        9 bytes
 12296 ;; Hardware stack levels used: 1
 12297 ;; Hardware stack levels required when called: 1
 12298 ;; This function calls:
 12299 ;;		_putch
 12300 ;; This function is called by:
 12301 ;;		_pad
 12302 ;;		_stoa
 12303 ;;		_vfpfcnvrt
 12304 ;;		_fputs
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308                           	psect	text21
 12309   010B68                     __ptext21:
 12310                           	callstack 0
 12311   010B68                     _fputc:
 12312                           	callstack 117
 12313   010B68  5003               	movf	fputc@fp^(0+1280),w,c
 12314   010B6A  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12315   010B6C  B4D8               	btfsc	status,2,c
 12316   010B6E  EFBB  F085         	goto	u1261
 12317   010B72  EFBD  F085         	goto	u1260
 12318   010B76                     u1261:
 12319   010B76  EFC6  F085         	goto	l2610
 12320   010B7A                     u1260:
 12321   010B7A  5003               	movf	fputc@fp^(0+1280),w,c
 12322   010B7C  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12323   010B7E  A4D8               	btfss	status,2,c
 12324   010B80  EFC4  F085         	goto	u1271
 12325   010B84  EFC6  F085         	goto	u1270
 12326   010B88                     u1271:
 12327   010B88  EFCB  F085         	goto	l2612
 12328   010B8C                     u1270:
 12329   010B8C                     l2610:
 12330   010B8C  5001               	movf	fputc@c^(0+1280),w,c
 12331   010B8E  EC49  F08C         	call	_putch
 12332   010B92  EF18  F086         	goto	l1515
 12333   010B96                     l2612:
 12334   010B96  EE20 F009          	lfsr	2,9
 12335   010B9A  5003               	movf	fputc@fp^(0+1280),w,c
 12336   010B9C  26D9               	addwf	fsr2l,f,c
 12337   010B9E  5004               	movf	(fputc@fp+1)^(0+1280),w,c
 12338   010BA0  22DA               	addwfc	fsr2h,f,c
 12339   010BA2  50DE               	movf	postinc2,w,c
 12340   010BA4  10DE               	iorwf	postinc2,w,c
 12341   010BA6  B4D8               	btfsc	status,2,c
 12342   010BA8  EFD8  F085         	goto	u1281
 12343   010BAC  EFDA  F085         	goto	u1280
 12344   010BB0                     u1281:
 12345   010BB0  EFF5  F085         	goto	l2616
 12346   010BB4                     u1280:
 12347   010BB4  EE20 F009          	lfsr	2,9
 12348   010BB8  5003               	movf	fputc@fp^(0+1280),w,c
 12349   010BBA  26D9               	addwf	fsr2l,f,c
 12350   010BBC  5004               	movf	(fputc@fp+1)^(0+1280),w,c
 12351   010BBE  22DA               	addwfc	fsr2h,f,c
 12352   010BC0  EE10 F002          	lfsr	1,2
 12353   010BC4  5003               	movf	fputc@fp^(0+1280),w,c
 12354   010BC6  26E1               	addwf	fsr1l,f,c
 12355   010BC8  5004               	movf	(fputc@fp+1)^(0+1280),w,c
 12356   010BCA  22E2               	addwfc	fsr1h,f,c
 12357   010BCC  50DE               	movf	postinc2,w,c
 12358   010BCE  5CE6               	subwf	postinc1,w,c
 12359   010BD0  50E6               	movf	postinc1,w,c
 12360   010BD2  0A80               	xorlw	128
 12361   010BD4  6E09               	movwf	(??_fputc+4)^(0+1280),c
 12362   010BD6  50DE               	movf	postinc2,w,c
 12363   010BD8  0A80               	xorlw	128
 12364   010BDA  5809               	subwfb	(??_fputc+4)^(0+1280),w,c
 12365   010BDC  B0D8               	btfsc	status,0,c
 12366   010BDE  EFF3  F085         	goto	u1291
 12367   010BE2  EFF5  F085         	goto	u1290
 12368   010BE6                     u1291:
 12369   010BE6  EF18  F086         	goto	l1515
 12370   010BEA                     u1290:
 12371   010BEA                     l2616:
 12372   010BEA  EE20 F002          	lfsr	2,2
 12373   010BEE  5003               	movf	fputc@fp^(0+1280),w,c
 12374   010BF0  26D9               	addwf	fsr2l,f,c
 12375   010BF2  5004               	movf	(fputc@fp+1)^(0+1280),w,c
 12376   010BF4  22DA               	addwfc	fsr2h,f,c
 12377   010BF6  C4DE F505          	movff	postinc2,??_fputc
 12378   010BFA  C4DD F506          	movff	postdec2,??_fputc+1
 12379   010BFE  C503  F4D9         	movff	fputc@fp,fsr2l
 12380   010C02  C504  F4DA         	movff	fputc@fp+1,fsr2h
 12381   010C06  C4DE F507          	movff	postinc2,??_fputc+2
 12382   010C0A  C4DD F508          	movff	postdec2,??_fputc+3
 12383   010C0E  5005               	movf	??_fputc^(0+1280),w,c
 12384   010C10  2407               	addwf	(??_fputc+2)^(0+1280),w,c
 12385   010C12  6ED9               	movwf	fsr2l,c
 12386   010C14  5006               	movf	(??_fputc+1)^(0+1280),w,c
 12387   010C16  2008               	addwfc	(??_fputc+3)^(0+1280),w,c
 12388   010C18  6EDA               	movwf	fsr2h,c
 12389   010C1A  C501  F4DF         	movff	fputc@c,indf2
 12390   010C1E  EE20 F002          	lfsr	2,2
 12391   010C22  5003               	movf	fputc@fp^(0+1280),w,c
 12392   010C24  26D9               	addwf	fsr2l,f,c
 12393   010C26  5004               	movf	(fputc@fp+1)^(0+1280),w,c
 12394   010C28  22DA               	addwfc	fsr2h,f,c
 12395   010C2A  2ADE               	incf	postinc2,f,c
 12396   010C2C  0E00               	movlw	0
 12397   010C2E  22DD               	addwfc	postdec2,f,c
 12398   010C30                     l1515:
 12399   010C30  0012               	return		;funcret
 12400   010C32                     __end_of_fputc:
 12401                           	callstack 0
 12402                           
 12403 ;; *************** function _putch *****************
 12404 ;; Defined at:
 12405 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;  c               1    wreg     unsigned char 
 12408 ;; Auto vars:     Size  Location     Type
 12409 ;;  c               1    0[COMRAM] unsigned char 
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  1    wreg      void 
 12412 ;; Registers used:
 12413 ;;		wreg
 12414 ;; Tracked objects:
 12415 ;;		On entry : 0/0
 12416 ;;		On exit  : 0/0
 12417 ;;		Unchanged: 0/0
 12418 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12423 ;;Total ram usage:        0 bytes
 12424 ;; Hardware stack levels used: 1
 12425 ;; This function calls:
 12426 ;;		Nothing
 12427 ;; This function is called by:
 12428 ;;		_fputc
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text22
 12433   011892                     __ptext22:
 12434                           	callstack 0
 12435   011892                     _putch:
 12436                           	callstack 117
 12437   011892  0012               	return		;funcret
 12438   011894                     __end_of_putch:
 12439                           	callstack 0
 12440                           
 12441 ;; *************** function _abs *****************
 12442 ;; Defined at:
 12443 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;  a               2    6[COMRAM] int 
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;		None
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  2    6[COMRAM] int 
 12450 ;; Registers used:
 12451 ;;		wreg, status,2, status,0
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12461 ;;Total ram usage:        4 bytes
 12462 ;; Hardware stack levels used: 1
 12463 ;; This function calls:
 12464 ;;		Nothing
 12465 ;; This function is called by:
 12466 ;;		_dtoa
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text23
 12471   01158C                     __ptext23:
 12472                           	callstack 0
 12473   01158C                     _abs:
 12474                           	callstack 120
 12475   01158C  BE08               	btfsc	(abs@a+1)^(0+1280),7,c
 12476   01158E  EFCB  F08A         	goto	u1471
 12477   011592  EFCD  F08A         	goto	u1470
 12478   011596                     u1471:
 12479   011596  EFD3  F08A         	goto	l1500
 12480   01159A                     u1470:
 12481   01159A  C507  F507         	movff	abs@a,?_abs
 12482   01159E  C508  F508         	movff	abs@a+1,?_abs+1
 12483   0115A2  EFDF  F08A         	goto	l1503
 12484   0115A6                     l1500:
 12485   0115A6  C507  F509         	movff	abs@a,??_abs
 12486   0115AA  C508  F50A         	movff	abs@a+1,??_abs+1
 12487   0115AE  1E09               	comf	??_abs^(0+1280),f,c
 12488   0115B0  1E0A               	comf	(??_abs+1)^(0+1280),f,c
 12489   0115B2  4A09               	infsnz	??_abs^(0+1280),f,c
 12490   0115B4  2A0A               	incf	(??_abs+1)^(0+1280),f,c
 12491   0115B6  C509  F507         	movff	??_abs,?_abs
 12492   0115BA  C50A  F508         	movff	??_abs+1,?_abs+1
 12493   0115BE                     l1503:
 12494   0115BE  0012               	return		;funcret
 12495   0115C0                     __end_of_abs:
 12496                           	callstack 0
 12497                           
 12498 ;; *************** function ___awmod *****************
 12499 ;; Defined at:
 12500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  dividend        2    0[COMRAM] int 
 12503 ;;  divisor         2    2[COMRAM] int 
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;  sign            1    5[COMRAM] unsigned char 
 12506 ;;  counter         1    4[COMRAM] unsigned char 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  2    0[COMRAM] int 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12520 ;;Total ram usage:        6 bytes
 12521 ;; Hardware stack levels used: 1
 12522 ;; This function calls:
 12523 ;;		Nothing
 12524 ;; This function is called by:
 12525 ;;		_dtoa
 12526 ;; This function uses a non-reentrant model
 12527 ;;
 12528                           
 12529                           	psect	text24
 12530   010DBE                     __ptext24:
 12531                           	callstack 0
 12532   010DBE                     ___awmod:
 12533                           	callstack 120
 12534   010DBE  6A06               	clrf	___awmod@sign^(0+1280),c
 12535   010DC0  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 12536   010DC2  EFE7  F086         	goto	u1370
 12537   010DC6  EFE5  F086         	goto	u1371
 12538   010DCA                     u1371:
 12539   010DCA  EFED  F086         	goto	l2680
 12540   010DCE                     u1370:
 12541   010DCE  6C01               	negf	___awmod@dividend^(0+1280),c
 12542   010DD0  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12543   010DD2  B0D8               	btfsc	status,0,c
 12544   010DD4  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12545   010DD6  0E01               	movlw	1
 12546   010DD8  6E06               	movwf	___awmod@sign^(0+1280),c
 12547   010DDA                     l2680:
 12548   010DDA  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 12549   010DDC  EFF4  F086         	goto	u1380
 12550   010DE0  EFF2  F086         	goto	u1381
 12551   010DE4                     u1381:
 12552   010DE4  EFF8  F086         	goto	l2684
 12553   010DE8                     u1380:
 12554   010DE8  6C03               	negf	___awmod@divisor^(0+1280),c
 12555   010DEA  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
 12556   010DEC  B0D8               	btfsc	status,0,c
 12557   010DEE  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
 12558   010DF0                     l2684:
 12559   010DF0  5003               	movf	___awmod@divisor^(0+1280),w,c
 12560   010DF2  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 12561   010DF4  B4D8               	btfsc	status,2,c
 12562   010DF6  EFFF  F086         	goto	u1391
 12563   010DFA  EF01  F087         	goto	u1390
 12564   010DFE                     u1391:
 12565   010DFE  EF25  F087         	goto	l2700
 12566   010E02                     u1390:
 12567   010E02  0E01               	movlw	1
 12568   010E04  6E05               	movwf	___awmod@counter^(0+1280),c
 12569   010E06  EF09  F087         	goto	l2690
 12570   010E0A                     l2688:
 12571   010E0A  90D8               	bcf	status,0,c
 12572   010E0C  3603               	rlcf	___awmod@divisor^(0+1280),f,c
 12573   010E0E  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 12574   010E10  2A05               	incf	___awmod@counter^(0+1280),f,c
 12575   010E12                     l2690:
 12576   010E12  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 12577   010E14  EF0E  F087         	goto	u1401
 12578   010E18  EF10  F087         	goto	u1400
 12579   010E1C                     u1401:
 12580   010E1C  EF05  F087         	goto	l2688
 12581   010E20                     u1400:
 12582   010E20                     l2692:
 12583   010E20  5003               	movf	___awmod@divisor^(0+1280),w,c
 12584   010E22  5C01               	subwf	___awmod@dividend^(0+1280),w,c
 12585   010E24  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12586   010E26  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 12587   010E28  A0D8               	btfss	status,0,c
 12588   010E2A  EF19  F087         	goto	u1411
 12589   010E2E  EF1B  F087         	goto	u1410
 12590   010E32                     u1411:
 12591   010E32  EF1F  F087         	goto	l2696
 12592   010E36                     u1410:
 12593   010E36  5003               	movf	___awmod@divisor^(0+1280),w,c
 12594   010E38  5E01               	subwf	___awmod@dividend^(0+1280),f,c
 12595   010E3A  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12596   010E3C  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 12597   010E3E                     l2696:
 12598   010E3E  90D8               	bcf	status,0,c
 12599   010E40  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 12600   010E42  3203               	rrcf	___awmod@divisor^(0+1280),f,c
 12601   010E44  2E05               	decfsz	___awmod@counter^(0+1280),f,c
 12602   010E46  EF10  F087         	goto	l2692
 12603   010E4A                     l2700:
 12604   010E4A  5006               	movf	___awmod@sign^(0+1280),w,c
 12605   010E4C  B4D8               	btfsc	status,2,c
 12606   010E4E  EF2B  F087         	goto	u1421
 12607   010E52  EF2D  F087         	goto	u1420
 12608   010E56                     u1421:
 12609   010E56  EF31  F087         	goto	l2704
 12610   010E5A                     u1420:
 12611   010E5A  6C01               	negf	___awmod@dividend^(0+1280),c
 12612   010E5C  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12613   010E5E  B0D8               	btfsc	status,0,c
 12614   010E60  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12615   010E62                     l2704:
 12616   010E62  C501  F501         	movff	___awmod@dividend,?___awmod
 12617   010E66  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
 12618   010E6A  0012               	return		;funcret
 12619   010E6C                     __end_of___awmod:
 12620                           	callstack 0
 12621                           
 12622 ;; *************** function ___awdiv *****************
 12623 ;; Defined at:
 12624 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;  dividend        2    0[COMRAM] int 
 12627 ;;  divisor         2    2[COMRAM] int 
 12628 ;; Auto vars:     Size  Location     Type
 12629 ;;  quotient        2    6[COMRAM] int 
 12630 ;;  sign            1    5[COMRAM] unsigned char 
 12631 ;;  counter         1    4[COMRAM] unsigned char 
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  2    0[COMRAM] int 
 12634 ;; Registers used:
 12635 ;;		wreg, status,2, status,0
 12636 ;; Tracked objects:
 12637 ;;		On entry : 0/0
 12638 ;;		On exit  : 0/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12642 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;Total ram usage:        8 bytes
 12646 ;; Hardware stack levels used: 1
 12647 ;; This function calls:
 12648 ;;		Nothing
 12649 ;; This function is called by:
 12650 ;;		_dtoa
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           	psect	text25
 12655   010CFC                     __ptext25:
 12656                           	callstack 0
 12657   010CFC                     ___awdiv:
 12658                           	callstack 120
 12659   010CFC  6A06               	clrf	___awdiv@sign^(0+1280),c
 12660   010CFE  BE04               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 12661   010D00  EF86  F086         	goto	u1310
 12662   010D04  EF84  F086         	goto	u1311
 12663   010D08                     u1311:
 12664   010D08  EF8C  F086         	goto	l2636
 12665   010D0C                     u1310:
 12666   010D0C  6C03               	negf	___awdiv@divisor^(0+1280),c
 12667   010D0E  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 12668   010D10  B0D8               	btfsc	status,0,c
 12669   010D12  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 12670   010D14  0E01               	movlw	1
 12671   010D16  6E06               	movwf	___awdiv@sign^(0+1280),c
 12672   010D18                     l2636:
 12673   010D18  BE02               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 12674   010D1A  EF93  F086         	goto	u1320
 12675   010D1E  EF91  F086         	goto	u1321
 12676   010D22                     u1321:
 12677   010D22  EF99  F086         	goto	l2642
 12678   010D26                     u1320:
 12679   010D26  6C01               	negf	___awdiv@dividend^(0+1280),c
 12680   010D28  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 12681   010D2A  B0D8               	btfsc	status,0,c
 12682   010D2C  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 12683   010D2E  0E01               	movlw	1
 12684   010D30  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 12685   010D32                     l2642:
 12686   010D32  0E00               	movlw	0
 12687   010D34  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 12688   010D36  0E00               	movlw	0
 12689   010D38  6E07               	movwf	___awdiv@quotient^(0+1280),c
 12690   010D3A  5003               	movf	___awdiv@divisor^(0+1280),w,c
 12691   010D3C  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 12692   010D3E  B4D8               	btfsc	status,2,c
 12693   010D40  EFA4  F086         	goto	u1331
 12694   010D44  EFA6  F086         	goto	u1330
 12695   010D48                     u1331:
 12696   010D48  EFCE  F086         	goto	l2664
 12697   010D4C                     u1330:
 12698   010D4C  0E01               	movlw	1
 12699   010D4E  6E05               	movwf	___awdiv@counter^(0+1280),c
 12700   010D50  EFAE  F086         	goto	l2650
 12701   010D54                     l2648:
 12702   010D54  90D8               	bcf	status,0,c
 12703   010D56  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 12704   010D58  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 12705   010D5A  2A05               	incf	___awdiv@counter^(0+1280),f,c
 12706   010D5C                     l2650:
 12707   010D5C  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 12708   010D5E  EFB3  F086         	goto	u1341
 12709   010D62  EFB5  F086         	goto	u1340
 12710   010D66                     u1341:
 12711   010D66  EFAA  F086         	goto	l2648
 12712   010D6A                     u1340:
 12713   010D6A                     l2652:
 12714   010D6A  90D8               	bcf	status,0,c
 12715   010D6C  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 12716   010D6E  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 12717   010D70  5003               	movf	___awdiv@divisor^(0+1280),w,c
 12718   010D72  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 12719   010D74  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12720   010D76  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 12721   010D78  A0D8               	btfss	status,0,c
 12722   010D7A  EFC1  F086         	goto	u1351
 12723   010D7E  EFC3  F086         	goto	u1350
 12724   010D82                     u1351:
 12725   010D82  EFC8  F086         	goto	l2660
 12726   010D86                     u1350:
 12727   010D86  5003               	movf	___awdiv@divisor^(0+1280),w,c
 12728   010D88  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 12729   010D8A  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12730   010D8C  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 12731   010D8E  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 12732   010D90                     l2660:
 12733   010D90  90D8               	bcf	status,0,c
 12734   010D92  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 12735   010D94  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 12736   010D96  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 12737   010D98  EFB5  F086         	goto	l2652
 12738   010D9C                     l2664:
 12739   010D9C  5006               	movf	___awdiv@sign^(0+1280),w,c
 12740   010D9E  B4D8               	btfsc	status,2,c
 12741   010DA0  EFD4  F086         	goto	u1361
 12742   010DA4  EFD6  F086         	goto	u1360
 12743   010DA8                     u1361:
 12744   010DA8  EFDA  F086         	goto	l2668
 12745   010DAC                     u1360:
 12746   010DAC  6C07               	negf	___awdiv@quotient^(0+1280),c
 12747   010DAE  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 12748   010DB0  B0D8               	btfsc	status,0,c
 12749   010DB2  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 12750   010DB4                     l2668:
 12751   010DB4  C507  F501         	movff	___awdiv@quotient,?___awdiv
 12752   010DB8  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 12753   010DBC  0012               	return		;funcret
 12754   010DBE                     __end_of___awdiv:
 12755                           	callstack 0
 12756                           
 12757 ;; *************** function _Nrf24_getRetransmitDelay *****************
 12758 ;; Defined at:
 12759 ;;		line 494 in file "mirf.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;  dev             2   10[COMRAM] PTR struct .
 12762 ;;		 -> nrf_loop@dev(3), 
 12763 ;; Auto vars:     Size  Location     Type
 12764 ;;  value           1   12[COMRAM] unsigned char 
 12765 ;; Return value:  Size  Location     Type
 12766 ;;                  1    wreg      unsigned char 
 12767 ;; Registers used:
 12768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12769 ;; Tracked objects:
 12770 ;;		On entry : 0/0
 12771 ;;		On exit  : 0/0
 12772 ;;		Unchanged: 0/0
 12773 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12777 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12778 ;;Total ram usage:        3 bytes
 12779 ;; Hardware stack levels used: 1
 12780 ;; Hardware stack levels required when called: 3
 12781 ;; This function calls:
 12782 ;;		_Nrf24_readRegister
 12783 ;; This function is called by:
 12784 ;;		_Nrf24_printDetails
 12785 ;; This function uses a non-reentrant model
 12786 ;;
 12787                           
 12788                           	psect	text26
 12789   0117CA                     __ptext26:
 12790                           	callstack 0
 12791   0117CA                     _Nrf24_getRetransmitDelay:
 12792                           	callstack 121
 12793   0117CA                     
 12794                           ;mirf.c: 494: uint8_t Nrf24_getRetransmitDelay(NRF24_t * dev);mirf.c: 495: {;mirf.c: 496
      +                          :  uint8_t value;;mirf.c: 497:  Nrf24_readRegister(0x04, &value, 1);
 12795   0117CA  0E0D               	movlw	low Nrf24_getRetransmitDelay@value
 12796   0117CC  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 12797   0117CE  0E05               	movlw	high Nrf24_getRetransmitDelay@value
 12798   0117D0  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12799   0117D2  0E01               	movlw	1
 12800   0117D4  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 12801   0117D6  0E04               	movlw	4
 12802   0117D8  EC2C  F08B         	call	_Nrf24_readRegister
 12803   0117DC                     
 12804                           ;mirf.c: 498:  return (value >> 4);
 12805   0117DC  380D               	swapf	Nrf24_getRetransmitDelay@value^(0+1280),w,c
 12806   0117DE  0B0F               	andlw	15
 12807   0117E0  0012               	return		;funcret
 12808   0117E2                     __end_of_Nrf24_getRetransmitDelay:
 12809                           	callstack 0
 12810                           
 12811 ;; *************** function _Nrf24_getPALevel *****************
 12812 ;; Defined at:
 12813 ;;		line 481 in file "mirf.c"
 12814 ;; Parameters:    Size  Location     Type
 12815 ;;  dev             2   10[COMRAM] PTR struct .
 12816 ;;		 -> nrf_loop@dev(3), 
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;  level           1   12[COMRAM] unsigned char 
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      unsigned char 
 12821 ;; Registers used:
 12822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12832 ;;Total ram usage:        3 bytes
 12833 ;; Hardware stack levels used: 1
 12834 ;; Hardware stack levels required when called: 3
 12835 ;; This function calls:
 12836 ;;		_Nrf24_readRegister
 12837 ;; This function is called by:
 12838 ;;		_Nrf24_printDetails
 12839 ;;		_Nrf24_getPALevelString
 12840 ;; This function uses a non-reentrant model
 12841 ;;
 12842                           
 12843                           	psect	text27
 12844   0117AC                     __ptext27:
 12845                           	callstack 0
 12846   0117AC                     _Nrf24_getPALevel:
 12847                           	callstack 121
 12848   0117AC                     
 12849                           ;mirf.c: 481: uint8_t Nrf24_getPALevel(NRF24_t * dev);mirf.c: 482: {;mirf.c: 483:  uint8
      +                          _t level;;mirf.c: 484:  Nrf24_readRegister(0x06, &level, sizeof(level));
 12850   0117AC  0E0D               	movlw	low Nrf24_getPALevel@level
 12851   0117AE  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 12852   0117B0  0E05               	movlw	high Nrf24_getPALevel@level
 12853   0117B2  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12854   0117B4  0E01               	movlw	1
 12855   0117B6  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 12856   0117B8  0E06               	movlw	6
 12857   0117BA  EC2C  F08B         	call	_Nrf24_readRegister
 12858   0117BE                     
 12859                           ;mirf.c: 485:  level = (level & ((1<<(1)) | (1<<(2)))) >> 1;
 12860   0117BE  90D8               	bcf	status,0,c
 12861   0117C0  300D               	rrcf	Nrf24_getPALevel@level^(0+1280),w,c
 12862   0117C2  0B03               	andlw	3
 12863   0117C4  6E0D               	movwf	Nrf24_getPALevel@level^(0+1280),c
 12864   0117C6                     
 12865                           ;mirf.c: 486:  return (level);
 12866   0117C6  500D               	movf	Nrf24_getPALevel@level^(0+1280),w,c
 12867   0117C8  0012               	return		;funcret
 12868   0117CA                     __end_of_Nrf24_getPALevel:
 12869                           	callstack 0
 12870                           
 12871 ;; *************** function _Nrf24_getDataRate *****************
 12872 ;; Defined at:
 12873 ;;		line 434 in file "mirf.c"
 12874 ;; Parameters:    Size  Location     Type
 12875 ;;  dev             2   10[COMRAM] PTR struct .
 12876 ;;		 -> nrf_loop@dev(3), 
 12877 ;; Auto vars:     Size  Location     Type
 12878 ;;  dr              1   13[COMRAM] unsigned char 
 12879 ;;  result          1   12[COMRAM] enum E17425
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  1    wreg      unsigned char 
 12882 ;; Registers used:
 12883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12884 ;; Tracked objects:
 12885 ;;		On entry : 0/0
 12886 ;;		On exit  : 0/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12893 ;;Total ram usage:        4 bytes
 12894 ;; Hardware stack levels used: 1
 12895 ;; Hardware stack levels required when called: 3
 12896 ;; This function calls:
 12897 ;;		_Nrf24_readRegister
 12898 ;; This function is called by:
 12899 ;;		_Nrf24_printDetails
 12900 ;;		_Nrf24_getDataRateString
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           	psect	text28
 12905   0113B6                     __ptext28:
 12906                           	callstack 0
 12907   0113B6                     _Nrf24_getDataRate:
 12908                           	callstack 121
 12909   0113B6                     
 12910                           ;mirf.c: 434: uint8_t Nrf24_getDataRate(NRF24_t * dev);mirf.c: 435: {;mirf.c: 436:  rf24
      +                          _datarate_e result;;mirf.c: 437:  uint8_t dr;;mirf.c: 438:  Nrf24_readRegister(0x06, &dr
      +                          , sizeof(dr));
 12911   0113B6  0E0E               	movlw	low Nrf24_getDataRate@dr
 12912   0113B8  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 12913   0113BA  0E05               	movlw	high Nrf24_getDataRate@dr
 12914   0113BC  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12915   0113BE  0E01               	movlw	1
 12916   0113C0  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 12917   0113C2  0E06               	movlw	6
 12918   0113C4  EC2C  F08B         	call	_Nrf24_readRegister
 12919   0113C8                     
 12920                           ;mirf.c: 439:  dr = dr & ((1<<(5)) | (1<<(3)));
 12921   0113C8  500E               	movf	Nrf24_getDataRate@dr^(0+1280),w,c
 12922   0113CA  0B28               	andlw	40
 12923   0113CC  6E0E               	movwf	Nrf24_getDataRate@dr^(0+1280),c
 12924   0113CE                     
 12925                           ;mirf.c: 442:  if (dr == (1<<(5))) {
 12926   0113CE  0E20               	movlw	32
 12927   0113D0  180E               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 12928   0113D2  A4D8               	btfss	status,2,c
 12929   0113D4  EFEE  F089         	goto	u2071
 12930   0113D8  EFF0  F089         	goto	u2070
 12931   0113DC                     u2071:
 12932   0113DC  EFF4  F089         	goto	l3106
 12933   0113E0                     u2070:
 12934   0113E0                     
 12935                           ;mirf.c: 444:   result = RF24_250KBPS;
 12936   0113E0  0E02               	movlw	2
 12937   0113E2  6E0D               	movwf	Nrf24_getDataRate@result^(0+1280),c
 12938                           
 12939                           ;mirf.c: 445:  } else if (dr == (1<<(3))) {
 12940   0113E4  EF02  F08A         	goto	l3110
 12941   0113E8                     l3106:
 12942   0113E8  0E08               	movlw	8
 12943   0113EA  180E               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 12944   0113EC  A4D8               	btfss	status,2,c
 12945   0113EE  EFFB  F089         	goto	u2081
 12946   0113F2  EFFD  F089         	goto	u2080
 12947   0113F6                     u2081:
 12948   0113F6  EF01  F08A         	goto	l664
 12949   0113FA                     u2080:
 12950   0113FA                     
 12951                           ;mirf.c: 447:   result = RF24_2MBPS;
 12952   0113FA  0E01               	movlw	1
 12953   0113FC  6E0D               	movwf	Nrf24_getDataRate@result^(0+1280),c
 12954                           
 12955                           ;mirf.c: 448:  } else {
 12956   0113FE  EF02  F08A         	goto	l3110
 12957   011402                     l664:
 12958                           
 12959                           ;mirf.c: 450:   result = RF24_1MBPS;
 12960   011402  6A0D               	clrf	Nrf24_getDataRate@result^(0+1280),c
 12961   011404                     l3110:
 12962                           
 12963                           ;mirf.c: 452:  return result;
 12964   011404  500D               	movf	Nrf24_getDataRate@result^(0+1280),w,c
 12965   011406  0012               	return		;funcret
 12966   011408                     __end_of_Nrf24_getDataRate:
 12967                           	callstack 0
 12968                           
 12969 ;; *************** function _Nrf24_getCRCLength *****************
 12970 ;; Defined at:
 12971 ;;		line 460 in file "mirf.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;  dev             2   10[COMRAM] PTR struct .
 12974 ;;		 -> nrf_loop@dev(3), 
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;  config          1   14[COMRAM] unsigned char 
 12977 ;;  AA              1   13[COMRAM] unsigned char 
 12978 ;;  result          1   12[COMRAM] enum E17430
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  1    wreg      unsigned char 
 12981 ;; Registers used:
 12982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/0
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12989 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12992 ;;Total ram usage:        5 bytes
 12993 ;; Hardware stack levels used: 1
 12994 ;; Hardware stack levels required when called: 3
 12995 ;; This function calls:
 12996 ;;		_Nrf24_readRegister
 12997 ;; This function is called by:
 12998 ;;		_Nrf24_printDetails
 12999 ;; This function uses a non-reentrant model
 13000 ;;
 13001                           
 13002                           	psect	text29
 13003   01124C                     __ptext29:
 13004                           	callstack 0
 13005   01124C                     _Nrf24_getCRCLength:
 13006                           	callstack 121
 13007   01124C                     
 13008                           ;mirf.c: 460: uint8_t Nrf24_getCRCLength(NRF24_t * dev);mirf.c: 461: {;mirf.c: 462:  rf2
      +                          4_crclength_e result = RF24_CRC_DISABLED;
 13009   01124C  6A0D               	clrf	Nrf24_getCRCLength@result^(0+1280),c
 13010   01124E                     
 13011                           ;mirf.c: 464:  uint8_t config;;mirf.c: 465:  Nrf24_readRegister(0x00, &config, sizeof(co
      +                          nfig));
 13012   01124E  0E0F               	movlw	low Nrf24_getCRCLength@config
 13013   011250  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 13014   011252  0E05               	movlw	high Nrf24_getCRCLength@config
 13015   011254  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13016   011256  0E01               	movlw	1
 13017   011258  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 13018   01125A  0E00               	movlw	0
 13019   01125C  EC2C  F08B         	call	_Nrf24_readRegister
 13020   011260                     
 13021                           ;mirf.c: 466:  config = config & ((1<<(2)) | (1<<(3)));
 13022   011260  500F               	movf	Nrf24_getCRCLength@config^(0+1280),w,c
 13023   011262  0B0C               	andlw	12
 13024   011264  6E0F               	movwf	Nrf24_getCRCLength@config^(0+1280),c
 13025   011266                     
 13026                           ;mirf.c: 467:  uint8_t AA;;mirf.c: 468:  Nrf24_readRegister(0x01, &AA, sizeof(AA));
 13027   011266  0E0E               	movlw	low Nrf24_getCRCLength@AA
 13028   011268  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 13029   01126A  0E05               	movlw	high Nrf24_getCRCLength@AA
 13030   01126C  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13031   01126E  0E01               	movlw	1
 13032   011270  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 13033   011272  0E01               	movlw	1
 13034   011274  EC2C  F08B         	call	_Nrf24_readRegister
 13035   011278                     
 13036                           ;mirf.c: 470:  if (config & (1<<(3)) || AA) {
 13037   011278  B60F               	btfsc	Nrf24_getCRCLength@config^(0+1280),3,c
 13038   01127A  EF41  F089         	goto	u2091
 13039   01127E  EF43  F089         	goto	u2090
 13040   011282                     u2091:
 13041   011282  EF4B  F089         	goto	l674
 13042   011286                     u2090:
 13043   011286  500E               	movf	Nrf24_getCRCLength@AA^(0+1280),w,c
 13044   011288  B4D8               	btfsc	status,2,c
 13045   01128A  EF49  F089         	goto	u2101
 13046   01128E  EF4B  F089         	goto	u2100
 13047   011292                     u2101:
 13048   011292  EF58  F089         	goto	l672
 13049   011296                     u2100:
 13050   011296                     l674:
 13051                           
 13052                           ;mirf.c: 471:   if (config & (1<<(2))) {
 13053   011296  A40F               	btfss	Nrf24_getCRCLength@config^(0+1280),2,c
 13054   011298  EF50  F089         	goto	u2111
 13055   01129C  EF52  F089         	goto	u2110
 13056   0112A0                     u2111:
 13057   0112A0  EF56  F089         	goto	l3128
 13058   0112A4                     u2110:
 13059   0112A4                     
 13060                           ;mirf.c: 472:    result = RF24_CRC_16;
 13061   0112A4  0E02               	movlw	2
 13062   0112A6  6E0D               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 13063                           
 13064                           ;mirf.c: 473:   } else {
 13065   0112A8  EF58  F089         	goto	l672
 13066   0112AC                     l3128:
 13067                           
 13068                           ;mirf.c: 474:    result = RF24_CRC_8;
 13069   0112AC  0E01               	movlw	1
 13070   0112AE  6E0D               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 13071   0112B0                     l672:
 13072                           
 13073                           ;mirf.c: 478:  return result;
 13074   0112B0  500D               	movf	Nrf24_getCRCLength@result^(0+1280),w,c
 13075   0112B2  0012               	return		;funcret
 13076   0112B4                     __end_of_Nrf24_getCRCLength:
 13077                           	callstack 0
 13078                           
 13079 ;; *************** function _Nrf24_init *****************
 13080 ;; Defined at:
 13081 ;;		line 70 in file "mirf.c"
 13082 ;; Parameters:    Size  Location     Type
 13083 ;;  dev             2    1[COMRAM] PTR struct .
 13084 ;;		 -> nrf_loop@dev(3), 
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;		None
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13100 ;;Total ram usage:        2 bytes
 13101 ;; Hardware stack levels used: 1
 13102 ;; Hardware stack levels required when called: 1
 13103 ;; This function calls:
 13104 ;;		_SPI1_Open
 13105 ;; This function is called by:
 13106 ;;		_nrf_loop
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           	psect	text30
 13111   0116E4                     __ptext30:
 13112                           	callstack 0
 13113   0116E4                     _Nrf24_init:
 13114                           	callstack 124
 13115   0116E4                     
 13116                           ;mirf.c: 70: void Nrf24_init(NRF24_t * dev);mirf.c: 71: {;mirf.c: 72:     SPI1_Open(0);
 13117   0116E4  0E00               	movlw	0
 13118   0116E6  EC19  F086         	call	_SPI1_Open
 13119   0116EA                     
 13120                           ;mirf.c: 74:     dev->channel = 115;
 13121   0116EA  EE20 F001          	lfsr	2,1
 13122   0116EE  5002               	movf	Nrf24_init@dev^(0+1280),w,c
 13123   0116F0  26D9               	addwf	fsr2l,f,c
 13124   0116F2  5003               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 13125   0116F4  22DA               	addwfc	fsr2h,f,c
 13126   0116F6  0E73               	movlw	115
 13127   0116F8  6EDF               	movwf	indf2,c
 13128   0116FA                     
 13129                           ;mirf.c: 75:     dev->payload = 32;
 13130   0116FA  EE20 F002          	lfsr	2,2
 13131   0116FE  5002               	movf	Nrf24_init@dev^(0+1280),w,c
 13132   011700  26D9               	addwf	fsr2l,f,c
 13133   011702  5003               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 13134   011704  22DA               	addwfc	fsr2h,f,c
 13135   011706  0E20               	movlw	32
 13136   011708  6EDF               	movwf	indf2,c
 13137   01170A  92C8               	bcf	200,1,c	;volatile
 13138   01170C  94C8               	bcf	200,2,c	;volatile
 13139   01170E  0012               	return		;funcret
 13140   011710                     __end_of_Nrf24_init:
 13141                           	callstack 0
 13142                           
 13143 ;; *************** function _SPI1_Open *****************
 13144 ;; Defined at:
 13145 ;;		line 90 in file "mcc_generated_files/spi/src/spi1.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;  spiConfigInd    1    wreg     unsigned char 
 13148 ;; Auto vars:     Size  Location     Type
 13149 ;;  spiConfigInd    1    0[COMRAM] unsigned char 
 13150 ;;  returnValue     1    0        _Bool 
 13151 ;; Return value:  Size  Location     Type
 13152 ;;                  1    wreg      _Bool 
 13153 ;; Registers used:
 13154 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13155 ;; Tracked objects:
 13156 ;;		On entry : 0/0
 13157 ;;		On exit  : 0/0
 13158 ;;		Unchanged: 0/0
 13159 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13164 ;;Total ram usage:        1 bytes
 13165 ;; Hardware stack levels used: 1
 13166 ;; This function calls:
 13167 ;;		Nothing
 13168 ;; This function is called by:
 13169 ;;		_Nrf24_init
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text31
 13174   010C32                     __ptext31:
 13175                           	callstack 0
 13176   010C32                     _SPI1_Open:
 13177                           	callstack 124
 13178                           
 13179                           ;incstack = 0
 13180                           ;SPI1_Open@spiConfigIndex stored from wreg
 13181   010C32  6E01               	movwf	SPI1_Open@spiConfigIndex^(0+1280),c
 13182   010C34                     
 13183                           ;mcc_generated_files/spi/src/spi1.c: 93:  if(0 == SPI1CON0bits.EN)
 13184   010C34  0100               	movlb	0	; () banked
 13185   010C36  BF84               	btfsc	132,7,b	;volatile
 13186   010C38  EF20  F086         	goto	u1941
 13187   010C3C  EF22  F086         	goto	u1940
 13188   010C40                     u1941:
 13189   010C40  EF7D  F086         	goto	l67
 13190   010C44                     u1940:
 13191   010C44                     
 13192                           ; BSR set to: 0
 13193                           ;mcc_generated_files/spi/src/spi1.c: 94:  {;mcc_generated_files/spi/src/spi1.c: 95:     
      +                              SPI1CON0 = spi1_configuration[spiConfigIndex].con0;
 13194   010C44  5001               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13195   010C46  0D05               	mullw	5
 13196   010C48  0E8F               	movlw	low _spi1_configuration
 13197   010C4A  24F3               	addwf	243,w,c
 13198   010C4C  6EF6               	movwf	tblptrl,c
 13199   010C4E  0EFE               	movlw	high _spi1_configuration
 13200   010C50  20F4               	addwfc	244,w,c
 13201   010C52  6EF7               	movwf	tblptrh,c
 13202   010C54                     	if	1	;There are 3 active tblptr bytes
 13203   010C54  6AF8               	clrf	tblptru,c
 13204   010C56  0E00               	movlw	low (__mediumconst shr (0+16))
 13205   010C58  22F8               	addwfc	tblptru,f,c
 13206   010C5A                     	endif
 13207   010C5A  0008               	tblrd		*
 13208   010C5C  C4F5 F084          	movff	tablat,132	;volatile
 13209                           
 13210                           ;mcc_generated_files/spi/src/spi1.c: 96:         SPI1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
 13211   010C60  5001               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13212   010C62  0D05               	mullw	5
 13213   010C64  0E01               	movlw	1
 13214   010C66  26F3               	addwf	243,f,c
 13215   010C68  0E00               	movlw	0
 13216   010C6A  22F4               	addwfc	244,f,c
 13217   010C6C  0E8F               	movlw	low _spi1_configuration
 13218   010C6E  24F3               	addwf	243,w,c
 13219   010C70  6EF6               	movwf	tblptrl,c
 13220   010C72  0EFE               	movlw	high _spi1_configuration
 13221   010C74  20F4               	addwfc	244,w,c
 13222   010C76  6EF7               	movwf	tblptrh,c
 13223   010C78                     	if	1	;There are 3 active tblptr bytes
 13224   010C78  6AF8               	clrf	tblptru,c
 13225   010C7A  0E00               	movlw	low (__mediumconst shr (0+16))
 13226   010C7C  22F8               	addwfc	tblptru,f,c
 13227   010C7E                     	endif
 13228   010C7E  0008               	tblrd		*
 13229   010C80  C4F5 F085          	movff	tablat,133	;volatile
 13230                           
 13231                           ;mcc_generated_files/spi/src/spi1.c: 97:         SPI1CON2 = spi1_configuration[spiConfig
      +                          Index].con2 & ~(0x1) & ~(0x2);
 13232   010C84  5001               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13233   010C86  0D05               	mullw	5
 13234   010C88  0E02               	movlw	2
 13235   010C8A  26F3               	addwf	243,f,c
 13236   010C8C  0E00               	movlw	0
 13237   010C8E  22F4               	addwfc	244,f,c
 13238   010C90  0E8F               	movlw	low _spi1_configuration
 13239   010C92  24F3               	addwf	243,w,c
 13240   010C94  6EF6               	movwf	tblptrl,c
 13241   010C96  0EFE               	movlw	high _spi1_configuration
 13242   010C98  20F4               	addwfc	244,w,c
 13243   010C9A  6EF7               	movwf	tblptrh,c
 13244   010C9C                     	if	1	;There are 3 active tblptr bytes
 13245   010C9C  6AF8               	clrf	tblptru,c
 13246   010C9E  0E00               	movlw	low (__mediumconst shr (0+16))
 13247   010CA0  22F8               	addwfc	tblptru,f,c
 13248   010CA2                     	endif
 13249   010CA2  0008               	tblrd		*
 13250   010CA4  50F5               	movf	tablat,w,c
 13251   010CA6  0BFC               	andlw	252
 13252   010CA8  6F86               	movwf	134,b	;volatile
 13253                           
 13254                           ;mcc_generated_files/spi/src/spi1.c: 98:         SPI1BAUD = spi1_configuration[spiConfig
      +                          Index].baud;
 13255   010CAA  5001               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13256   010CAC  0D05               	mullw	5
 13257   010CAE  0E03               	movlw	3
 13258   010CB0  26F3               	addwf	243,f,c
 13259   010CB2  0E00               	movlw	0
 13260   010CB4  22F4               	addwfc	244,f,c
 13261   010CB6  0E8F               	movlw	low _spi1_configuration
 13262   010CB8  24F3               	addwf	243,w,c
 13263   010CBA  6EF6               	movwf	tblptrl,c
 13264   010CBC  0EFE               	movlw	high _spi1_configuration
 13265   010CBE  20F4               	addwfc	244,w,c
 13266   010CC0  6EF7               	movwf	tblptrh,c
 13267   010CC2                     	if	1	;There are 3 active tblptr bytes
 13268   010CC2  6AF8               	clrf	tblptru,c
 13269   010CC4  0E00               	movlw	low (__mediumconst shr (0+16))
 13270   010CC6  22F8               	addwfc	tblptru,f,c
 13271   010CC8                     	endif
 13272   010CC8  0008               	tblrd		*
 13273   010CCA  C4F5 F089          	movff	tablat,137	;volatile
 13274                           
 13275                           ;mcc_generated_files/spi/src/spi1.c: 99:         SPI1CLK = spi1_configuration[spiConfigI
      +                          ndex].clksel;
 13276   010CCE  5001               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13277   010CD0  0D05               	mullw	5
 13278   010CD2  0E04               	movlw	4
 13279   010CD4  26F3               	addwf	243,f,c
 13280   010CD6  0E00               	movlw	0
 13281   010CD8  22F4               	addwfc	244,f,c
 13282   010CDA  0E8F               	movlw	low _spi1_configuration
 13283   010CDC  24F3               	addwf	243,w,c
 13284   010CDE  6EF6               	movwf	tblptrl,c
 13285   010CE0  0EFE               	movlw	high _spi1_configuration
 13286   010CE2  20F4               	addwfc	244,w,c
 13287   010CE4  6EF7               	movwf	tblptrh,c
 13288   010CE6                     	if	1	;There are 3 active tblptr bytes
 13289   010CE6  6AF8               	clrf	tblptru,c
 13290   010CE8  0E00               	movlw	low (__mediumconst shr (0+16))
 13291   010CEA  22F8               	addwfc	tblptru,f,c
 13292   010CEC                     	endif
 13293   010CEC  0008               	tblrd		*
 13294   010CEE  C4F5 F08C          	movff	tablat,140	;volatile
 13295   010CF2                     
 13296                           ; BSR set to: 0
 13297                           ;mcc_generated_files/spi/src/spi1.c: 100:   TRISCbits.TRISC6 = 0;
 13298   010CF2  9CC8               	bcf	200,6,c	;volatile
 13299   010CF4                     
 13300                           ; BSR set to: 0
 13301                           ;mcc_generated_files/spi/src/spi1.c: 101:         SPI1CON0bits.EN = 1U;
 13302   010CF4  8F84               	bsf	132,7,b	;volatile
 13303   010CF6                     
 13304                           ; BSR set to: 0
 13305                           ;mcc_generated_files/spi/src/spi1.c: 103:  }
 13306   010CF6  EF7D  F086         	goto	l69
 13307   010CFA                     l67:
 13308   010CFA                     l69:
 13309                           
 13310                           ; BSR set to: 0
 13311   010CFA  0012               	return		;funcret
 13312   010CFC                     __end_of_SPI1_Open:
 13313                           	callstack 0
 13314                           
 13315 ;; *************** function _Nrf24_getData *****************
 13316 ;; Defined at:
 13317 ;;		line 180 in file "mirf.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;  dev             2    6[COMRAM] PTR struct .
 13320 ;;		 -> nrf_loop@dev(3), 
 13321 ;;  data            2    8[COMRAM] PTR unsigned char 
 13322 ;;		 -> nrf_loop@buf(8), 
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;		None
 13325 ;; Return value:  Size  Location     Type
 13326 ;;                  1    wreg      void 
 13327 ;; Registers used:
 13328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13338 ;;Total ram usage:        4 bytes
 13339 ;; Hardware stack levels used: 1
 13340 ;; Hardware stack levels required when called: 2
 13341 ;; This function calls:
 13342 ;;		_Nrf24_configRegister
 13343 ;;		_SPI1_ByteExchange
 13344 ;;		_SPI_read_buff
 13345 ;; This function is called by:
 13346 ;;		_nrf_loop
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text32
 13351   011626                     __ptext32:
 13352                           	callstack 0
 13353   011626                     _Nrf24_getData:
 13354                           	callstack 123
 13355   011626  92C0               	bcf	192,1,c	;volatile
 13356   011628                     
 13357                           ;mirf.c: 183:  SPI1_ByteExchange(0x00 | 0x61);
 13358   011628  0E61               	movlw	97
 13359   01162A  EC88  F08B         	call	_SPI1_ByteExchange
 13360   01162E                     
 13361                           ;mirf.c: 184:  SPI_read_buff( data, dev->payload );
 13362   01162E  C509  F503         	movff	Nrf24_getData@data,SPI_read_buff@buffer
 13363   011632  C50A  F504         	movff	Nrf24_getData@data+1,SPI_read_buff@buffer+1
 13364   011636  EE20 F002          	lfsr	2,2
 13365   01163A  5007               	movf	Nrf24_getData@dev^(0+1280),w,c
 13366   01163C  26D9               	addwf	fsr2l,f,c
 13367   01163E  5008               	movf	(Nrf24_getData@dev+1)^(0+1280),w,c
 13368   011640  22DA               	addwfc	fsr2h,f,c
 13369   011642  50DF               	movf	indf2,w,c
 13370   011644  6E05               	movwf	SPI_read_buff@bytes^(0+1280),c
 13371   011646  ECE0  F08A         	call	_SPI_read_buff	;wreg free
 13372   01164A  82C0               	bsf	192,1,c	;volatile
 13373   01164C                     
 13374                           ;mirf.c: 194:  Nrf24_configRegister(0x07, (1 << 6));
 13375   01164C  0E40               	movlw	64
 13376   01164E  6E03               	movwf	Nrf24_configRegister@value^(0+1280),c
 13377   011650  0E07               	movlw	7
 13378   011652  ECF1  F08B         	call	_Nrf24_configRegister
 13379   011656  0012               	return		;funcret
 13380   011658                     __end_of_Nrf24_getData:
 13381                           	callstack 0
 13382                           
 13383 ;; *************** function _Nrf24_dataReady *****************
 13384 ;; Defined at:
 13385 ;;		line 158 in file "mirf.c"
 13386 ;; Parameters:    Size  Location     Type
 13387 ;;  dev             2   13[COMRAM] PTR struct .
 13388 ;;		 -> nrf_loop@dev(3), 
 13389 ;; Auto vars:     Size  Location     Type
 13390 ;;  status          1   15[COMRAM] unsigned char 
 13391 ;; Return value:  Size  Location     Type
 13392 ;;                  1    wreg      _Bool 
 13393 ;; Registers used:
 13394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13395 ;; Tracked objects:
 13396 ;;		On entry : 0/0
 13397 ;;		On exit  : 0/0
 13398 ;;		Unchanged: 0/0
 13399 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13403 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13404 ;;Total ram usage:        3 bytes
 13405 ;; Hardware stack levels used: 1
 13406 ;; Hardware stack levels required when called: 4
 13407 ;; This function calls:
 13408 ;;		_Nrf24_getStatus
 13409 ;; This function is called by:
 13410 ;;		_nrf_loop
 13411 ;; This function uses a non-reentrant model
 13412 ;;
 13413                           
 13414                           	psect	text33
 13415   011762                     __ptext33:
 13416                           	callstack 0
 13417   011762                     _Nrf24_dataReady:
 13418                           	callstack 121
 13419   011762                     
 13420                           ;mirf.c: 158: extern _Bool Nrf24_dataReady(NRF24_t * dev);mirf.c: 159: {;mirf.c: 160:  u
      +                          int8_t status = Nrf24_getStatus(dev);
 13421   011762  C50E  F50B         	movff	Nrf24_dataReady@dev,Nrf24_getStatus@dev
 13422   011766  C50F  F50C         	movff	Nrf24_dataReady@dev+1,Nrf24_getStatus@dev+1
 13423   01176A  EC09  F08C         	call	_Nrf24_getStatus	;wreg free
 13424   01176E  6E10               	movwf	Nrf24_dataReady@status^(0+1280),c
 13425   011770                     
 13426                           ;mirf.c: 161:  if ( status & (1 << 6) ) {
 13427   011770  AC10               	btfss	Nrf24_dataReady@status^(0+1280),6,c
 13428   011772  EFBD  F08B         	goto	u2171
 13429   011776  EFBF  F08B         	goto	u2170
 13430   01177A                     u2171:
 13431   01177A  EFC2  F08B         	goto	l3248
 13432   01177E                     u2170:
 13433   01177E                     
 13434                           ;mirf.c: 162:   return 1;
 13435   01177E  0E01               	movlw	1
 13436   011780  EFC3  F08B         	goto	l532
 13437   011784                     l3248:
 13438                           
 13439                           ;mirf.c: 164:  return 0;
 13440   011784  0E00               	movlw	0
 13441   011786                     l532:
 13442   011786  0012               	return		;funcret
 13443   011788                     __end_of_Nrf24_dataReady:
 13444                           	callstack 0
 13445                           
 13446 ;; *************** function _Nrf24_config *****************
 13447 ;; Defined at:
 13448 ;;		line 89 in file "mirf.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;  dev             2   13[COMRAM] PTR struct .
 13451 ;;		 -> nrf_loop@dev(3), 
 13452 ;;  channel         1   15[COMRAM] unsigned char 
 13453 ;;  payload         1   16[COMRAM] unsigned char 
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;		None
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1    wreg      void 
 13458 ;; Registers used:
 13459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;Total ram usage:        4 bytes
 13470 ;; Hardware stack levels used: 1
 13471 ;; Hardware stack levels required when called: 4
 13472 ;; This function calls:
 13473 ;;		_Nrf24_configRegister
 13474 ;;		_Nrf24_flushRx
 13475 ;;		_Nrf24_getStatus
 13476 ;;		_Nrf24_powerUpRx
 13477 ;; This function is called by:
 13478 ;;		_nrf_loop
 13479 ;; This function uses a non-reentrant model
 13480 ;;
 13481                           
 13482                           	psect	text34
 13483   011162                     __ptext34:
 13484                           	callstack 0
 13485   011162                     _Nrf24_config:
 13486                           	callstack 121
 13487   011162                     
 13488                           ;mirf.c: 89: void Nrf24_config(NRF24_t * dev, uint8_t channel, uint8_t payload);mirf.c: 
      +                          90: {;mirf.c: 91:  dev->channel = channel;
 13489   011162  EE20 F001          	lfsr	2,1
 13490   011166  500E               	movf	Nrf24_config@dev^(0+1280),w,c
 13491   011168  26D9               	addwf	fsr2l,f,c
 13492   01116A  500F               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13493   01116C  22DA               	addwfc	fsr2h,f,c
 13494   01116E  C510  F4DF         	movff	Nrf24_config@channel,indf2
 13495                           
 13496                           ;mirf.c: 92:  dev->payload = payload;
 13497   011172  EE20 F002          	lfsr	2,2
 13498   011176  500E               	movf	Nrf24_config@dev^(0+1280),w,c
 13499   011178  26D9               	addwf	fsr2l,f,c
 13500   01117A  500F               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13501   01117C  22DA               	addwfc	fsr2h,f,c
 13502   01117E  C511  F4DF         	movff	Nrf24_config@payload,indf2
 13503   011182                     
 13504                           ;mirf.c: 93:     Nrf24_getStatus(dev);
 13505   011182  C50E  F50B         	movff	Nrf24_config@dev,Nrf24_getStatus@dev
 13506   011186  C50F  F50C         	movff	Nrf24_config@dev+1,Nrf24_getStatus@dev+1
 13507   01118A  EC09  F08C         	call	_Nrf24_getStatus	;wreg free
 13508   01118E                     
 13509                           ;mirf.c: 94:     Nrf24_configRegister(0x05, channel);
 13510   01118E  C510  F503         	movff	Nrf24_config@channel,Nrf24_configRegister@value
 13511   011192  0E05               	movlw	5
 13512   011194  ECF1  F08B         	call	_Nrf24_configRegister
 13513   011198                     
 13514                           ;mirf.c: 95:  Nrf24_configRegister(0x11, dev->payload);
 13515   011198  EE20 F002          	lfsr	2,2
 13516   01119C  500E               	movf	Nrf24_config@dev^(0+1280),w,c
 13517   01119E  26D9               	addwf	fsr2l,f,c
 13518   0111A0  500F               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13519   0111A2  22DA               	addwfc	fsr2h,f,c
 13520   0111A4  50DF               	movf	indf2,w,c
 13521   0111A6  6E03               	movwf	Nrf24_configRegister@value^(0+1280),c
 13522   0111A8  0E11               	movlw	17
 13523   0111AA  ECF1  F08B         	call	_Nrf24_configRegister
 13524   0111AE                     
 13525                           ;mirf.c: 96:  Nrf24_configRegister(0x12, dev->payload);
 13526   0111AE  EE20 F002          	lfsr	2,2
 13527   0111B2  500E               	movf	Nrf24_config@dev^(0+1280),w,c
 13528   0111B4  26D9               	addwf	fsr2l,f,c
 13529   0111B6  500F               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13530   0111B8  22DA               	addwfc	fsr2h,f,c
 13531   0111BA  50DF               	movf	indf2,w,c
 13532   0111BC  6E03               	movwf	Nrf24_configRegister@value^(0+1280),c
 13533   0111BE  0E12               	movlw	18
 13534   0111C0  ECF1  F08B         	call	_Nrf24_configRegister
 13535   0111C4                     
 13536                           ;mirf.c: 97:  Nrf24_powerUpRx(dev);
 13537   0111C4  C50E  F505         	movff	Nrf24_config@dev,Nrf24_powerUpRx@dev
 13538   0111C8  C50F  F506         	movff	Nrf24_config@dev+1,Nrf24_powerUpRx@dev+1
 13539   0111CC  ECC4  F08B         	call	_Nrf24_powerUpRx	;wreg free
 13540   0111D0                     
 13541                           ;mirf.c: 98:  Nrf24_flushRx(dev);
 13542   0111D0  C50E  F503         	movff	Nrf24_config@dev,Nrf24_flushRx@dev
 13543   0111D4  C50F  F504         	movff	Nrf24_config@dev+1,Nrf24_flushRx@dev+1
 13544   0111D8  EC43  F08C         	call	_Nrf24_flushRx	;wreg free
 13545   0111DC  0012               	return		;funcret
 13546   0111DE                     __end_of_Nrf24_config:
 13547                           	callstack 0
 13548                           
 13549 ;; *************** function _Nrf24_powerUpRx *****************
 13550 ;; Defined at:
 13551 ;;		line 303 in file "mirf.c"
 13552 ;; Parameters:    Size  Location     Type
 13553 ;;  dev             2    4[COMRAM] PTR struct .
 13554 ;;		 -> nrf_loop@dev(3), 
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;		None
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      void 
 13559 ;; Registers used:
 13560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13570 ;;Total ram usage:        2 bytes
 13571 ;; Hardware stack levels used: 1
 13572 ;; Hardware stack levels required when called: 2
 13573 ;; This function calls:
 13574 ;;		_Nrf24_configRegister
 13575 ;; This function is called by:
 13576 ;;		_Nrf24_config
 13577 ;;		_Nrf24_isSending
 13578 ;;		_Nrf24_isSend
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text35
 13583   011788                     __ptext35:
 13584                           	callstack 0
 13585   011788                     _Nrf24_powerUpRx:
 13586                           	callstack 122
 13587   011788                     
 13588                           ;mirf.c: 304:  dev->PTX = 0;
 13589   011788  C505  F4D9         	movff	Nrf24_powerUpRx@dev,fsr2l
 13590   01178C  C506  F4DA         	movff	Nrf24_powerUpRx@dev+1,fsr2h
 13591   011790  6ADF               	clrf	indf2,c
 13592   011792  94C0               	bcf	192,2,c	;volatile
 13593   011794                     
 13594                           ;mirf.c: 306:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (1 
      +                          << 0) ) );
 13595   011794  0E2B               	movlw	43
 13596   011796  6E03               	movwf	Nrf24_configRegister@value^(0+1280),c
 13597   011798  0E00               	movlw	0
 13598   01179A  ECF1  F08B         	call	_Nrf24_configRegister
 13599   01179E  84C0               	bsf	192,2,c	;volatile
 13600   0117A0                     
 13601                           ;mirf.c: 308:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 13602   0117A0  0E30               	movlw	48
 13603   0117A2  6E03               	movwf	Nrf24_configRegister@value^(0+1280),c
 13604   0117A4  0E07               	movlw	7
 13605   0117A6  ECF1  F08B         	call	_Nrf24_configRegister
 13606   0117AA  0012               	return		;funcret
 13607   0117AC                     __end_of_Nrf24_powerUpRx:
 13608                           	callstack 0
 13609                           
 13610 ;; *************** function _Nrf24_getStatus *****************
 13611 ;; Defined at:
 13612 ;;		line 297 in file "mirf.c"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;  dev             2   10[COMRAM] PTR struct .
 13615 ;;		 -> nrf_loop@dev(3), 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;  rv              1   12[COMRAM] unsigned char 
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1    wreg      unsigned char 
 13620 ;; Registers used:
 13621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;Total ram usage:        3 bytes
 13632 ;; Hardware stack levels used: 1
 13633 ;; Hardware stack levels required when called: 3
 13634 ;; This function calls:
 13635 ;;		_Nrf24_readRegister
 13636 ;; This function is called by:
 13637 ;;		_Nrf24_config
 13638 ;;		_Nrf24_dataReady
 13639 ;;		_Nrf24_printDetails
 13640 ;;		_Nrf24_getDataPipe
 13641 ;;		_Nrf24_send
 13642 ;;		_Nrf24_isSending
 13643 ;;		_Nrf24_isSend
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           	psect	text36
 13648   011812                     __ptext36:
 13649                           	callstack 0
 13650   011812                     _Nrf24_getStatus:
 13651                           	callstack 121
 13652   011812                     
 13653                           ;mirf.c: 298:  uint8_t rv;;mirf.c: 299:  Nrf24_readRegister(0x07, &rv, 1);
 13654   011812  0E0D               	movlw	low Nrf24_getStatus@rv
 13655   011814  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 13656   011816  0E05               	movlw	high Nrf24_getStatus@rv
 13657   011818  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13658   01181A  0E01               	movlw	1
 13659   01181C  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 13660   01181E  0E07               	movlw	7
 13661   011820  EC2C  F08B         	call	_Nrf24_readRegister
 13662   011824                     
 13663                           ;mirf.c: 300:  return rv;
 13664   011824  500D               	movf	Nrf24_getStatus@rv^(0+1280),w,c
 13665   011826  0012               	return		;funcret
 13666   011828                     __end_of_Nrf24_getStatus:
 13667                           	callstack 0
 13668                           
 13669 ;; *************** function _Nrf24_flushRx *****************
 13670 ;; Defined at:
 13671 ;;		line 311 in file "mirf.c"
 13672 ;; Parameters:    Size  Location     Type
 13673 ;;  dev             2    2[COMRAM] PTR struct .
 13674 ;;		 -> nrf_loop@dev(3), 
 13675 ;; Auto vars:     Size  Location     Type
 13676 ;;		None
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  1    wreg      void 
 13679 ;; Registers used:
 13680 ;;		wreg, status,2, status,0, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13690 ;;Total ram usage:        2 bytes
 13691 ;; Hardware stack levels used: 1
 13692 ;; Hardware stack levels required when called: 1
 13693 ;; This function calls:
 13694 ;;		_SPI1_ByteExchange
 13695 ;; This function is called by:
 13696 ;;		_Nrf24_config
 13697 ;; This function uses a non-reentrant model
 13698 ;;
 13699                           
 13700                           	psect	text37
 13701   011886                     __ptext37:
 13702                           	callstack 0
 13703   011886                     _Nrf24_flushRx:
 13704                           	callstack 123
 13705   011886  92C0               	bcf	192,1,c	;volatile
 13706   011888                     
 13707                           ;mirf.c: 314:  SPI1_ByteExchange(0xE2);
 13708   011888  0EE2               	movlw	226
 13709   01188A  EC88  F08B         	call	_SPI1_ByteExchange
 13710   01188E  82C0               	bsf	192,1,c	;volatile
 13711   011890  0012               	return		;funcret
 13712   011892                     __end_of_Nrf24_flushRx:
 13713                           	callstack 0
 13714                           
 13715 ;; *************** function _Nrf24_SetSpeedDataRates *****************
 13716 ;; Defined at:
 13717 ;;		line 343 in file "mirf.c"
 13718 ;; Parameters:    Size  Location     Type
 13719 ;;  dev             2   10[COMRAM] PTR struct .
 13720 ;;		 -> nrf_loop@dev(3), 
 13721 ;;  val             1   12[COMRAM] unsigned char 
 13722 ;; Auto vars:     Size  Location     Type
 13723 ;;  value           1   13[COMRAM] unsigned char 
 13724 ;; Return value:  Size  Location     Type
 13725 ;;                  1    wreg      void 
 13726 ;; Registers used:
 13727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13728 ;; Tracked objects:
 13729 ;;		On entry : 0/0
 13730 ;;		On exit  : 0/0
 13731 ;;		Unchanged: 0/0
 13732 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13737 ;;Total ram usage:        4 bytes
 13738 ;; Hardware stack levels used: 1
 13739 ;; Hardware stack levels required when called: 3
 13740 ;; This function calls:
 13741 ;;		_Nrf24_configRegister
 13742 ;;		_Nrf24_readRegister
 13743 ;; This function is called by:
 13744 ;;		_nrf_loop
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text38
 13749   0111DE                     __ptext38:
 13750                           	callstack 0
 13751   0111DE                     _Nrf24_SetSpeedDataRates:
 13752                           	callstack 122
 13753   0111DE                     
 13754                           ;mirf.c: 343: void Nrf24_SetSpeedDataRates(NRF24_t * dev, uint8_t val);mirf.c: 344: {;mi
      +                          rf.c: 345:  if (val > 2) return;
 13755   0111DE  0E02               	movlw	2
 13756   0111E0  640D               	cpfsgt	Nrf24_SetSpeedDataRates@val^(0+1280),c
 13757   0111E2  EFF5  F088         	goto	u2151
 13758   0111E6  EFF7  F088         	goto	u2150
 13759   0111EA                     u2151:
 13760   0111EA  EFF9  F088         	goto	l3212
 13761   0111EE                     u2150:
 13762   0111EE  EF25  F089         	goto	l634
 13763   0111F2                     l3212:
 13764                           
 13765                           ;mirf.c: 347:  uint8_t value;;mirf.c: 348:  Nrf24_readRegister(0x06, &value, 1);
 13766   0111F2  0E0E               	movlw	low Nrf24_SetSpeedDataRates@value
 13767   0111F4  6E07               	movwf	Nrf24_readRegister@value^(0+1280),c
 13768   0111F6  0E05               	movlw	high Nrf24_SetSpeedDataRates@value
 13769   0111F8  6E08               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13770   0111FA  0E01               	movlw	1
 13771   0111FC  6E09               	movwf	Nrf24_readRegister@len^(0+1280),c
 13772   0111FE  0E06               	movlw	6
 13773   011200  EC2C  F08B         	call	_Nrf24_readRegister
 13774   011204                     
 13775                           ;mirf.c: 349:  if(val == 2)
 13776   011204  0E02               	movlw	2
 13777   011206  180D               	xorwf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 13778   011208  A4D8               	btfss	status,2,c
 13779   01120A  EF09  F089         	goto	u2161
 13780   01120E  EF0B  F089         	goto	u2160
 13781   011212                     u2161:
 13782   011212  EF18  F089         	goto	l3220
 13783   011216                     u2160:
 13784   011216                     
 13785                           ;mirf.c: 350:  {;mirf.c: 351:   value = value | 0x20;
 13786   011216  500E               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13787   011218  0920               	iorlw	32
 13788   01121A  6E0E               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13789                           
 13790                           ;mirf.c: 352:   value = value & 0xF7;
 13791   01121C  500E               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13792   01121E  0BF7               	andlw	247
 13793   011220  6E0E               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13794   011222                     
 13795                           ;mirf.c: 353:      Nrf24_configRegister(0x06, value);
 13796   011222  C50E  F503         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 13797   011226  0E06               	movlw	6
 13798   011228  ECF1  F08B         	call	_Nrf24_configRegister
 13799                           
 13800                           ;mirf.c: 354:  }
 13801   01122C  EF25  F089         	goto	l634
 13802   011230                     l3220:
 13803                           
 13804                           ;mirf.c: 356:  {;mirf.c: 357:   value = value & 0xD7;
 13805   011230  500E               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13806   011232  0BD7               	andlw	215
 13807   011234  6E0E               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13808                           
 13809                           ;mirf.c: 358:   value = value | (val << 3);
 13810   011236  380D               	swapf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 13811   011238  42E8               	rrncf	wreg,f,c
 13812   01123A  0BF8               	andlw	248
 13813   01123C  100E               	iorwf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13814   01123E  6E0E               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13815   011240                     
 13816                           ;mirf.c: 359:   Nrf24_configRegister(0x06, value);
 13817   011240  C50E  F503         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 13818   011244  0E06               	movlw	6
 13819   011246  ECF1  F08B         	call	_Nrf24_configRegister
 13820   01124A                     l634:
 13821   01124A  0012               	return		;funcret
 13822   01124C                     __end_of_Nrf24_SetSpeedDataRates:
 13823                           	callstack 0
 13824                           
 13825 ;; *************** function _Nrf24_readRegister *****************
 13826 ;; Defined at:
 13827 ;;		line 207 in file "mirf.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  reg             1    wreg     unsigned char 
 13830 ;;  value           2    6[COMRAM] PTR unsigned char 
 13831 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 13832 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 13833 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 13834 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 13835 ;;  len             1    8[COMRAM] unsigned char 
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;  reg             1    9[COMRAM] unsigned char 
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  1    wreg      void 
 13840 ;; Registers used:
 13841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13842 ;; Tracked objects:
 13843 ;;		On entry : 0/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13847 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13850 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13851 ;;Total ram usage:        4 bytes
 13852 ;; Hardware stack levels used: 1
 13853 ;; Hardware stack levels required when called: 2
 13854 ;; This function calls:
 13855 ;;		_SPI1_ByteExchange
 13856 ;;		_SPI_read_buff
 13857 ;; This function is called by:
 13858 ;;		_Nrf24_setRADDR
 13859 ;;		_Nrf24_getStatus
 13860 ;;		_Nrf24_SetSpeedDataRates
 13861 ;;		_Nrf24_setRetransmitDelay
 13862 ;;		_Nrf24_print_address_register
 13863 ;;		_Nrf24_print_byte_register
 13864 ;;		_Nrf24_getDataRate
 13865 ;;		_Nrf24_getCRCLength
 13866 ;;		_Nrf24_getPALevel
 13867 ;;		_Nrf24_getRetransmitDelay
 13868 ;;		_Nrf24_setTADDR
 13869 ;;		_Nrf24_addRADDR
 13870 ;;		_Nrf24_rxFifoEmpty
 13871 ;;		_Nrf24_SetOutputRF_PWR
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text39
 13876   011658                     __ptext39:
 13877                           	callstack 0
 13878   011658                     _Nrf24_readRegister:
 13879                           	callstack 122
 13880                           
 13881                           ;incstack = 0
 13882                           ;Nrf24_readRegister@reg stored from wreg
 13883   011658  6E0A               	movwf	Nrf24_readRegister@reg^(0+1280),c
 13884   01165A                     
 13885                           ;mirf.c: 207: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c:
      +                           208: {;mirf.c: 209:     if(len) {
 13886   01165A  5009               	movf	Nrf24_readRegister@len^(0+1280),w,c
 13887   01165C  B4D8               	btfsc	status,2,c
 13888   01165E  EF33  F08B         	goto	u1931
 13889   011662  EF35  F08B         	goto	u1930
 13890   011666                     u1931:
 13891   011666  EF43  F08B         	goto	l560
 13892   01166A                     u1930:
 13893   01166A  92C0               	bcf	192,1,c	;volatile
 13894   01166C                     
 13895                           ;mirf.c: 211:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 13896   01166C  500A               	movf	Nrf24_readRegister@reg^(0+1280),w,c
 13897   01166E  0B1F               	andlw	31
 13898   011670  EC88  F08B         	call	_SPI1_ByteExchange
 13899   011674                     
 13900                           ;mirf.c: 212:         SPI_read_buff(value, len);
 13901   011674  C507  F503         	movff	Nrf24_readRegister@value,SPI_read_buff@buffer
 13902   011678  C508  F504         	movff	Nrf24_readRegister@value+1,SPI_read_buff@buffer+1
 13903   01167C  C509  F505         	movff	Nrf24_readRegister@len,SPI_read_buff@bytes
 13904   011680  ECE0  F08A         	call	_SPI_read_buff	;wreg free
 13905   011684  82C0               	bsf	192,1,c	;volatile
 13906   011686                     l560:
 13907   011686  0012               	return		;funcret
 13908   011688                     __end_of_Nrf24_readRegister:
 13909                           	callstack 0
 13910                           
 13911 ;; *************** function _SPI_read_buff *****************
 13912 ;; Defined at:
 13913 ;;		line 44 in file "mirf.c"
 13914 ;; Parameters:    Size  Location     Type
 13915 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 13916 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 13917 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 13918 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 13919 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), nrf_loop@buf(8), 
 13920 ;;  bytes           1    4[COMRAM] unsigned char 
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;  i               1    5[COMRAM] unsigned char 
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  1    wreg      void 
 13925 ;; Registers used:
 13926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13927 ;; Tracked objects:
 13928 ;;		On entry : 0/0
 13929 ;;		On exit  : 0/0
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13932 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13936 ;;Total ram usage:        4 bytes
 13937 ;; Hardware stack levels used: 1
 13938 ;; Hardware stack levels required when called: 1
 13939 ;; This function calls:
 13940 ;;		_SPI1_ByteExchange
 13941 ;; This function is called by:
 13942 ;;		_Nrf24_getData
 13943 ;;		_Nrf24_readRegister
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           	psect	text40
 13948   0115C0                     __ptext40:
 13949                           	callstack 0
 13950   0115C0                     _SPI_read_buff:
 13951                           	callstack 122
 13952   0115C0  92C0               	bcf	192,1,c	;volatile
 13953   0115C2                     
 13954                           ;mirf.c: 46:     unsigned char i;;mirf.c: 47:     for (i = 0; i < bytes; i++) {
 13955   0115C2  6A06               	clrf	SPI_read_buff@i^(0+1280),c
 13956   0115C4  EFEF  F08A         	goto	l2976
 13957   0115C8                     l2970:
 13958                           
 13959                           ;mirf.c: 48:         *buffer = SPI1_ByteExchange(0xFF);
 13960   0115C8  0EFF               	movlw	255
 13961   0115CA  EC88  F08B         	call	_SPI1_ByteExchange
 13962   0115CE  C503  F4D9         	movff	SPI_read_buff@buffer,fsr2l
 13963   0115D2  C504  F4DA         	movff	SPI_read_buff@buffer+1,fsr2h
 13964   0115D6  6EDF               	movwf	indf2,c
 13965   0115D8                     
 13966                           ;mirf.c: 49:         buffer++;
 13967   0115D8  4A03               	infsnz	SPI_read_buff@buffer^(0+1280),f,c
 13968   0115DA  2A04               	incf	(SPI_read_buff@buffer+1)^(0+1280),f,c
 13969   0115DC                     
 13970                           ;mirf.c: 50:     }
 13971   0115DC  2A06               	incf	SPI_read_buff@i^(0+1280),f,c
 13972   0115DE                     l2976:
 13973   0115DE  5005               	movf	SPI_read_buff@bytes^(0+1280),w,c
 13974   0115E0  5C06               	subwf	SPI_read_buff@i^(0+1280),w,c
 13975   0115E2  A0D8               	btfss	status,0,c
 13976   0115E4  EFF6  F08A         	goto	u1901
 13977   0115E8  EFF8  F08A         	goto	u1900
 13978   0115EC                     u1901:
 13979   0115EC  EFE4  F08A         	goto	l2970
 13980   0115F0                     u1900:
 13981   0115F0  82C0               	bsf	192,1,c	;volatile
 13982   0115F2  0012               	return		;funcret
 13983   0115F4                     __end_of_SPI_read_buff:
 13984                           	callstack 0
 13985                           
 13986 ;; *************** function _Nrf24_configRegister *****************
 13987 ;; Defined at:
 13988 ;;		line 198 in file "mirf.c"
 13989 ;; Parameters:    Size  Location     Type
 13990 ;;  reg             1    wreg     unsigned char 
 13991 ;;  value           1    2[COMRAM] unsigned char 
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;  reg             1    3[COMRAM] unsigned char 
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, status,2, status,0, cstack
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14007 ;;Total ram usage:        2 bytes
 14008 ;; Hardware stack levels used: 1
 14009 ;; Hardware stack levels required when called: 1
 14010 ;; This function calls:
 14011 ;;		_SPI1_ByteExchange
 14012 ;; This function is called by:
 14013 ;;		_Nrf24_config
 14014 ;;		_Nrf24_getData
 14015 ;;		_Nrf24_powerUpRx
 14016 ;;		_Nrf24_SetSpeedDataRates
 14017 ;;		_Nrf24_setRetransmitDelay
 14018 ;;		_Nrf24_addRADDR
 14019 ;;		_Nrf24_powerUpTx
 14020 ;;		_Nrf24_powerDown
 14021 ;;		_Nrf24_SetOutputRF_PWR
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           	psect	text41
 14026   0117E2                     __ptext41:
 14027                           	callstack 0
 14028   0117E2                     _Nrf24_configRegister:
 14029                           	callstack 123
 14030                           
 14031                           ;incstack = 0
 14032                           ;Nrf24_configRegister@reg stored from wreg
 14033   0117E2  6E04               	movwf	Nrf24_configRegister@reg^(0+1280),c
 14034   0117E4  92C0               	bcf	192,1,c	;volatile
 14035   0117E6                     
 14036                           ;mirf.c: 201:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 14037   0117E6  5004               	movf	Nrf24_configRegister@reg^(0+1280),w,c
 14038   0117E8  0B1F               	andlw	31
 14039   0117EA  0920               	iorlw	32
 14040   0117EC  EC88  F08B         	call	_SPI1_ByteExchange
 14041                           
 14042                           ;mirf.c: 202:  SPI1_ByteExchange(value);
 14043   0117F0  5003               	movf	Nrf24_configRegister@value^(0+1280),w,c
 14044   0117F2  EC88  F08B         	call	_SPI1_ByteExchange
 14045   0117F6  82C0               	bsf	192,1,c	;volatile
 14046   0117F8  0012               	return		;funcret
 14047   0117FA                     __end_of_Nrf24_configRegister:
 14048                           	callstack 0
 14049                           
 14050 ;; *************** function _SPI1_ByteExchange *****************
 14051 ;; Defined at:
 14052 ;;		line 208 in file "mcc_generated_files/spi/src/spi1.c"
 14053 ;; Parameters:    Size  Location     Type
 14054 ;;  byteData        1    wreg     unsigned char 
 14055 ;; Auto vars:     Size  Location     Type
 14056 ;;  byteData        1    0[COMRAM] unsigned char 
 14057 ;;  returnValue     1    1[COMRAM] unsigned char 
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1    wreg      unsigned char 
 14060 ;; Registers used:
 14061 ;;		wreg, status,2, status,0
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : 0/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14071 ;;Total ram usage:        2 bytes
 14072 ;; Hardware stack levels used: 1
 14073 ;; This function calls:
 14074 ;;		Nothing
 14075 ;; This function is called by:
 14076 ;;		_SPI_read_buff
 14077 ;;		_SPI_write_buff
 14078 ;;		_Nrf24_getData
 14079 ;;		_Nrf24_configRegister
 14080 ;;		_Nrf24_readRegister
 14081 ;;		_Nrf24_writeRegister
 14082 ;;		_Nrf24_flushRx
 14083 ;;		_Nrf24_send
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text42
 14088   011710                     __ptext42:
 14089                           	callstack 0
 14090   011710                     _SPI1_ByteExchange:
 14091                           	callstack 122
 14092                           
 14093                           ;incstack = 0
 14094                           ;SPI1_ByteExchange@byteData stored from wreg
 14095   011710  6E01               	movwf	SPI1_ByteExchange@byteData^(0+1280),c
 14096   011712                     
 14097                           ;mcc_generated_files/spi/src/spi1.c: 212:  SPI1STATUSbits.CLRBF = 1U;
 14098   011712  0100               	movlb	0	; () banked
 14099   011714  8587               	bsf	135,2,b	;volatile
 14100   011716                     
 14101                           ; BSR set to: 0
 14102                           ;mcc_generated_files/spi/src/spi1.c: 215:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 14103   011716  5186               	movf	134,w,b	;volatile
 14104   011718  0903               	iorlw	3
 14105   01171A  6F86               	movwf	134,b	;volatile
 14106   01171C                     
 14107                           ; BSR set to: 0
 14108                           ;mcc_generated_files/spi/src/spi1.c: 218:  SPI1TCNTH = 0U;
 14109   01171C  6B83               	clrf	131,b	;volatile
 14110   01171E                     
 14111                           ; BSR set to: 0
 14112                           ;mcc_generated_files/spi/src/spi1.c: 219:  SPI1TCNTL = 1U;
 14113   01171E  0E01               	movlw	1
 14114   011720  6F82               	movwf	130,b	;volatile
 14115   011722                     
 14116                           ; BSR set to: 0
 14117                           ;mcc_generated_files/spi/src/spi1.c: 221:  SPI1TXB = byteData;
 14118   011722  C501  F081         	movff	SPI1_ByteExchange@byteData,129	;volatile
 14119   011726                     l102:
 14120                           
 14121                           ;mcc_generated_files/spi/src/spi1.c: 223:  while(!PIR3bits.SPI1RXIF)
 14122   011726  A0B1               	btfss	177,0,c	;volatile
 14123   011728  EF98  F08B         	goto	u1761
 14124   01172C  EF9A  F08B         	goto	u1760
 14125   011730                     u1761:
 14126   011730  EF93  F08B         	goto	l102
 14127   011734                     u1760:
 14128   011734                     
 14129                           ;mcc_generated_files/spi/src/spi1.c: 227:  returnValue = SPI1RXB;
 14130   011734  C080 F502          	movff	128,SPI1_ByteExchange@returnValue	;volatile
 14131   011738                     
 14132                           ;mcc_generated_files/spi/src/spi1.c: 228:  return returnValue;
 14133   011738  5002               	movf	SPI1_ByteExchange@returnValue^(0+1280),w,c
 14134   01173A  0012               	return		;funcret
 14135   01173C                     __end_of_SPI1_ByteExchange:
 14136                           	callstack 0
 14137                           
 14138 ;; *************** function _DELAY_milliseconds *****************
 14139 ;; Defined at:
 14140 ;;		line 37 in file "mcc_generated_files/timer/src/delay.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;  milliseconds    2    0[COMRAM] unsigned short 
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;		None
 14145 ;; Return value:  Size  Location     Type
 14146 ;;                  1    wreg      void 
 14147 ;; Registers used:
 14148 ;;		wreg, status,2, status,0
 14149 ;; Tracked objects:
 14150 ;;		On entry : 0/0
 14151 ;;		On exit  : 0/0
 14152 ;;		Unchanged: 0/0
 14153 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14157 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14158 ;;Total ram usage:        3 bytes
 14159 ;; Hardware stack levels used: 1
 14160 ;; This function calls:
 14161 ;;		Nothing
 14162 ;; This function is called by:
 14163 ;;		_nrf_loop
 14164 ;;		_Nrf24_isSend
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text43
 14169   011688                     __ptext43:
 14170                           	callstack 0
 14171   011688                     _DELAY_milliseconds:
 14172                           	callstack 125
 14173   011688                     
 14174                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 14175   011688  EF4E  F08B         	goto	l3162
 14176   01168C                     l3160:
 14177                           
 14178                           ;mcc_generated_files/timer/src/delay.c: 39:         _delay((unsigned long)((1)*(64000000
      +                          U/4000.0)));
 14179   01168C  0E15               	movlw	21
 14180   01168E  6E03               	movwf	??_DELAY_milliseconds^(0+1280),c
 14181   011690  0EC6               	movlw	198
 14182   011692                     u2457:
 14183   011692  2EE8               	decfsz	wreg,f,c
 14184   011694  D7FE               	bra	u2457
 14185   011696  2E03               	decfsz	??_DELAY_milliseconds^(0+1280),f,c
 14186   011698  D7FC               	bra	u2457
 14187   01169A  D000               	nop2	
 14188   01169C                     l3162:
 14189                           
 14190                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 14191   01169C  0601               	decf	DELAY_milliseconds@milliseconds^(0+1280),f,c
 14192   01169E  A0D8               	btfss	status,0,c
 14193   0116A0  0602               	decf	(DELAY_milliseconds@milliseconds+1)^(0+1280),f,c
 14194   0116A2  2801               	incf	DELAY_milliseconds@milliseconds^(0+1280),w,c
 14195   0116A4  E106               	bnz	u2121
 14196   0116A6  2802               	incf	(DELAY_milliseconds@milliseconds+1)^(0+1280),w,c
 14197   0116A8  A4D8               	btfss	status,2,c
 14198   0116AA  EF59  F08B         	goto	u2121
 14199   0116AE  EF5B  F08B         	goto	u2120
 14200   0116B2                     u2121:
 14201   0116B2  EF46  F08B         	goto	l3160
 14202   0116B6                     u2120:
 14203   0116B6  0012               	return		;funcret
 14204   0116B8                     __end_of_DELAY_milliseconds:
 14205                           	callstack 0
 14206                           
 14207 ;; *************** function _SYSTEM_Initialize *****************
 14208 ;; Defined at:
 14209 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;		None
 14212 ;; Auto vars:     Size  Location     Type
 14213 ;;		None
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1    wreg      void 
 14216 ;; Registers used:
 14217 ;;		wreg, status,2, status,0, cstack
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14227 ;;Total ram usage:        0 bytes
 14228 ;; Hardware stack levels used: 1
 14229 ;; Hardware stack levels required when called: 2
 14230 ;; This function calls:
 14231 ;;		_CLOCK_Initialize
 14232 ;;		_INTERRUPT_Initialize
 14233 ;;		_PIN_MANAGER_Initialize
 14234 ;;		_SPI1_Initialize
 14235 ;; This function is called by:
 14236 ;;		_main
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           
 14240                           	psect	text44
 14241   01183C                     __ptext44:
 14242                           	callstack 0
 14243   01183C                     _SYSTEM_Initialize:
 14244                           	callstack 124
 14245   01183C                     
 14246                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 14247   01183C  EC14  F08C         	call	_CLOCK_Initialize	;wreg free
 14248                           
 14249                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 14250   011840  ECD6  F087         	call	_PIN_MANAGER_Initialize	;wreg free
 14251                           
 14252                           ;mcc_generated_files/system/src/system.c: 42:     SPI1_Initialize();
 14253   011844  ECFD  F08B         	call	_SPI1_Initialize	;wreg free
 14254   011848                     
 14255                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
 14256   011848  EC70  F08A         	call	_INTERRUPT_Initialize	;wreg free
 14257   01184C  0012               	return		;funcret
 14258   01184E                     __end_of_SYSTEM_Initialize:
 14259                           	callstack 0
 14260                           
 14261 ;; *************** function _SPI1_Initialize *****************
 14262 ;; Defined at:
 14263 ;;		line 68 in file "mcc_generated_files/spi/src/spi1.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;		None
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;		None
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  1    wreg      void 
 14270 ;; Registers used:
 14271 ;;		wreg, status,2
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14281 ;;Total ram usage:        0 bytes
 14282 ;; Hardware stack levels used: 1
 14283 ;; This function calls:
 14284 ;;		Nothing
 14285 ;; This function is called by:
 14286 ;;		_SYSTEM_Initialize
 14287 ;; This function uses a non-reentrant model
 14288 ;;
 14289                           
 14290                           	psect	text45
 14291   0117FA                     __ptext45:
 14292                           	callstack 0
 14293   0117FA                     _SPI1_Initialize:
 14294                           	callstack 125
 14295   0117FA                     
 14296                           ;mcc_generated_files/spi/src/spi1.c: 71:     PIE3bits.SPI1IE = 0U;
 14297   0117FA  94A1               	bcf	161,2,c	;volatile
 14298                           
 14299                           ;mcc_generated_files/spi/src/spi1.c: 72:     PIE3bits.SPI1TXIE = 0U;
 14300   0117FC  92A1               	bcf	161,1,c	;volatile
 14301                           
 14302                           ;mcc_generated_files/spi/src/spi1.c: 73:     PIE3bits.SPI1RXIE = 0U;
 14303   0117FE  90A1               	bcf	161,0,c	;volatile
 14304                           
 14305                           ;mcc_generated_files/spi/src/spi1.c: 76:     SPI1CON0 = 0x0;
 14306   011800  0100               	movlb	0	; () banked
 14307   011802  6B84               	clrf	132,b	;volatile
 14308   011804                     
 14309                           ; BSR set to: 0
 14310                           ;mcc_generated_files/spi/src/spi1.c: 77:     SPI1CON1 = 0x4;
 14311   011804  0E04               	movlw	4
 14312   011806  6F85               	movwf	133,b	;volatile
 14313   011808                     
 14314                           ; BSR set to: 0
 14315                           ;mcc_generated_files/spi/src/spi1.c: 78:     SPI1CON2 = 0x0;
 14316   011808  6B86               	clrf	134,b	;volatile
 14317   01180A                     
 14318                           ; BSR set to: 0
 14319                           ;mcc_generated_files/spi/src/spi1.c: 79:     SPI1BAUD = 0x0;
 14320   01180A  6B89               	clrf	137,b	;volatile
 14321   01180C                     
 14322                           ; BSR set to: 0
 14323                           ;mcc_generated_files/spi/src/spi1.c: 80:     SPI1CLK = 0x0;
 14324   01180C  6B8C               	clrf	140,b	;volatile
 14325   01180E                     
 14326                           ; BSR set to: 0
 14327                           ;mcc_generated_files/spi/src/spi1.c: 81:  SPI1STATUSbits.CLRBF = 1U;
 14328   01180E  8587               	bsf	135,2,b	;volatile
 14329   011810                     
 14330                           ; BSR set to: 0
 14331   011810  0012               	return		;funcret
 14332   011812                     __end_of_SPI1_Initialize:
 14333                           	callstack 0
 14334                           
 14335 ;; *************** function _PIN_MANAGER_Initialize *****************
 14336 ;; Defined at:
 14337 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;		None
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;		None
 14342 ;; Return value:  Size  Location     Type
 14343 ;;                  1    wreg      void 
 14344 ;; Registers used:
 14345 ;;		wreg, status,2
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 0/0
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14355 ;;Total ram usage:        0 bytes
 14356 ;; Hardware stack levels used: 1
 14357 ;; This function calls:
 14358 ;;		Nothing
 14359 ;; This function is called by:
 14360 ;;		_SYSTEM_Initialize
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text46
 14365   010FAC                     __ptext46:
 14366                           	callstack 0
 14367   010FAC                     _PIN_MANAGER_Initialize:
 14368                           	callstack 125
 14369   010FAC                     
 14370                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 14371   010FAC  6ABE               	clrf	190,c	;volatile
 14372                           
 14373                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 14374   010FAE  6ABF               	clrf	191,c	;volatile
 14375                           
 14376                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 14377   010FB0  6AC0               	clrf	192,c	;volatile
 14378                           
 14379                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
 14380   010FB2  6AC1               	clrf	193,c	;volatile
 14381                           
 14382                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
 14383   010FB4  6AC2               	clrf	194,c	;volatile
 14384                           
 14385                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
 14386   010FB6  6AC3               	clrf	195,c	;volatile
 14387                           
 14388                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
 14389   010FB8  0104               	movlb	4	; () banked
 14390   010FBA  6B02               	clrf	2,b	;volatile
 14391                           
 14392                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
 14393   010FBC  6B0A               	clrf	10,b	;volatile
 14394                           
 14395                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
 14396   010FBE  6B12               	clrf	18,b	;volatile
 14397                           
 14398                           ;mcc_generated_files/system/src/pins.c: 55:     ODCOND = 0x0;
 14399   010FC0  6B1A               	clrf	26,b	;volatile
 14400                           
 14401                           ;mcc_generated_files/system/src/pins.c: 56:     ODCONE = 0x0;
 14402   010FC2  6B22               	clrf	34,b	;volatile
 14403                           
 14404                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONF = 0x0;
 14405   010FC4  6B2A               	clrf	42,b	;volatile
 14406                           
 14407                           ;mcc_generated_files/system/src/pins.c: 62:     TRISA = 0xFF;
 14408   010FC6  68C6               	setf	198,c	;volatile
 14409                           
 14410                           ;mcc_generated_files/system/src/pins.c: 63:     TRISB = 0xFF;
 14411   010FC8  68C7               	setf	199,c	;volatile
 14412   010FCA                     
 14413                           ; BSR set to: 4
 14414                           ;mcc_generated_files/system/src/pins.c: 64:     TRISC = 0xE9;
 14415   010FCA  0EE9               	movlw	233
 14416   010FCC  6EC8               	movwf	200,c	;volatile
 14417   010FCE                     
 14418                           ; BSR set to: 4
 14419                           ;mcc_generated_files/system/src/pins.c: 65:     TRISD = 0xFF;
 14420   010FCE  68C9               	setf	201,c	;volatile
 14421                           
 14422                           ;mcc_generated_files/system/src/pins.c: 66:     TRISE = 0xF;
 14423   010FD0  0E0F               	movlw	15
 14424   010FD2  6ECA               	movwf	202,c	;volatile
 14425                           
 14426                           ;mcc_generated_files/system/src/pins.c: 67:     TRISF = 0xF7;
 14427   010FD4  0EF7               	movlw	247
 14428   010FD6  6ECB               	movwf	203,c	;volatile
 14429   010FD8                     
 14430                           ; BSR set to: 4
 14431                           ;mcc_generated_files/system/src/pins.c: 72:     ANSELA = 0xFF;
 14432   010FD8  6900               	setf	0,b	;volatile
 14433   010FDA                     
 14434                           ; BSR set to: 4
 14435                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELB = 0xFF;
 14436   010FDA  6908               	setf	8,b	;volatile
 14437                           
 14438                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELC = 0x89;
 14439   010FDC  0E89               	movlw	137
 14440   010FDE  6F10               	movwf	16,b	;volatile
 14441   010FE0                     
 14442                           ; BSR set to: 4
 14443                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELD = 0xFF;
 14444   010FE0  6918               	setf	24,b	;volatile
 14445                           
 14446                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELE = 0x7;
 14447   010FE2  0E07               	movlw	7
 14448   010FE4  6F20               	movwf	32,b	;volatile
 14449                           
 14450                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELF = 0xF7;
 14451   010FE6  0EF7               	movlw	247
 14452   010FE8  6F28               	movwf	40,b	;volatile
 14453   010FEA                     
 14454                           ; BSR set to: 4
 14455                           ;mcc_generated_files/system/src/pins.c: 82:     WPUA = 0x0;
 14456   010FEA  6B01               	clrf	1,b	;volatile
 14457   010FEC                     
 14458                           ; BSR set to: 4
 14459                           ;mcc_generated_files/system/src/pins.c: 83:     WPUB = 0x0;
 14460   010FEC  6B09               	clrf	9,b	;volatile
 14461   010FEE                     
 14462                           ; BSR set to: 4
 14463                           ;mcc_generated_files/system/src/pins.c: 84:     WPUC = 0x0;
 14464   010FEE  6B11               	clrf	17,b	;volatile
 14465   010FF0                     
 14466                           ; BSR set to: 4
 14467                           ;mcc_generated_files/system/src/pins.c: 85:     WPUD = 0x0;
 14468   010FF0  6B19               	clrf	25,b	;volatile
 14469   010FF2                     
 14470                           ; BSR set to: 4
 14471                           ;mcc_generated_files/system/src/pins.c: 86:     WPUE = 0x0;
 14472   010FF2  6B21               	clrf	33,b	;volatile
 14473   010FF4                     
 14474                           ; BSR set to: 4
 14475                           ;mcc_generated_files/system/src/pins.c: 87:     WPUF = 0x0;
 14476   010FF4  6B29               	clrf	41,b	;volatile
 14477   010FF6                     
 14478                           ; BSR set to: 4
 14479                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
 14480   010FF6  6903               	setf	3,b	;volatile
 14481   010FF8                     
 14482                           ; BSR set to: 4
 14483                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
 14484   010FF8  690B               	setf	11,b	;volatile
 14485   010FFA                     
 14486                           ; BSR set to: 4
 14487                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
 14488   010FFA  6913               	setf	19,b	;volatile
 14489   010FFC                     
 14490                           ; BSR set to: 4
 14491                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
 14492   010FFC  691B               	setf	27,b	;volatile
 14493                           
 14494                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
 14495   010FFE  0E07               	movlw	7
 14496   011000  6F23               	movwf	35,b	;volatile
 14497   011002                     
 14498                           ; BSR set to: 4
 14499                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
 14500   011002  692B               	setf	43,b	;volatile
 14501   011004                     
 14502                           ; BSR set to: 4
 14503                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
 14504   011004  6904               	setf	4,b	;volatile
 14505   011006                     
 14506                           ; BSR set to: 4
 14507                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
 14508   011006  690C               	setf	12,b	;volatile
 14509   011008                     
 14510                           ; BSR set to: 4
 14511                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
 14512   011008  6914               	setf	20,b	;volatile
 14513   01100A                     
 14514                           ; BSR set to: 4
 14515                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
 14516   01100A  691C               	setf	28,b	;volatile
 14517                           
 14518                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
 14519   01100C  0E0F               	movlw	15
 14520   01100E  6F24               	movwf	36,b	;volatile
 14521   011010                     
 14522                           ; BSR set to: 4
 14523                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
 14524   011010  692C               	setf	44,b	;volatile
 14525   011012                     
 14526                           ; BSR set to: 4
 14527                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x0;
 14528   011012  0102               	movlb	2	; () banked
 14529   011014  6B89               	clrf	137,b	;volatile
 14530   011016                     
 14531                           ; BSR set to: 2
 14532                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x0;
 14533   011016  6B88               	clrf	136,b	;volatile
 14534   011018                     
 14535                           ; BSR set to: 2
 14536                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
 14537   011018  6B87               	clrf	135,b	;volatile
 14538   01101A                     
 14539                           ; BSR set to: 2
 14540                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
 14541   01101A  6B86               	clrf	134,b	;volatile
 14542                           
 14543                           ;mcc_generated_files/system/src/pins.c: 120:     SPI1SDIPPS = 0x15;
 14544   01101C  0E15               	movlw	21
 14545   01101E  6F6B               	movwf	107,b	;volatile
 14546                           
 14547                           ;mcc_generated_files/system/src/pins.c: 121:     RC4PPS = 0x32;
 14548   011020  0E32               	movlw	50
 14549   011022  6F15               	movwf	21,b	;volatile
 14550                           
 14551                           ;mcc_generated_files/system/src/pins.c: 122:     SPI1SCKPPS = 0x16;
 14552   011024  0E16               	movlw	22
 14553   011026  6F6A               	movwf	106,b	;volatile
 14554                           
 14555                           ;mcc_generated_files/system/src/pins.c: 123:     RC6PPS = 0x31;
 14556   011028  0E31               	movlw	49
 14557   01102A  6F17               	movwf	23,b	;volatile
 14558   01102C                     
 14559                           ; BSR set to: 2
 14560                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAP = 0x0;
 14561   01102C  0104               	movlb	4	; () banked
 14562   01102E  6B05               	clrf	5,b	;volatile
 14563   011030                     
 14564                           ; BSR set to: 4
 14565                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAN = 0x0;
 14566   011030  6B06               	clrf	6,b	;volatile
 14567   011032                     
 14568                           ; BSR set to: 4
 14569                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAF = 0x0;
 14570   011032  6B07               	clrf	7,b	;volatile
 14571   011034                     
 14572                           ; BSR set to: 4
 14573                           ;mcc_generated_files/system/src/pins.c: 131:     IOCBP = 0x0;
 14574   011034  6B0D               	clrf	13,b	;volatile
 14575   011036                     
 14576                           ; BSR set to: 4
 14577                           ;mcc_generated_files/system/src/pins.c: 132:     IOCBN = 0x0;
 14578   011036  6B0E               	clrf	14,b	;volatile
 14579   011038                     
 14580                           ; BSR set to: 4
 14581                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBF = 0x0;
 14582   011038  6B0F               	clrf	15,b	;volatile
 14583   01103A                     
 14584                           ; BSR set to: 4
 14585                           ;mcc_generated_files/system/src/pins.c: 134:     IOCCP = 0x0;
 14586   01103A  6B15               	clrf	21,b	;volatile
 14587   01103C                     
 14588                           ; BSR set to: 4
 14589                           ;mcc_generated_files/system/src/pins.c: 135:     IOCCN = 0x0;
 14590   01103C  6B16               	clrf	22,b	;volatile
 14591   01103E                     
 14592                           ; BSR set to: 4
 14593                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCF = 0x0;
 14594   01103E  6B17               	clrf	23,b	;volatile
 14595   011040                     
 14596                           ; BSR set to: 4
 14597                           ;mcc_generated_files/system/src/pins.c: 137:     IOCEP = 0x0;
 14598   011040  6B25               	clrf	37,b	;volatile
 14599   011042                     
 14600                           ; BSR set to: 4
 14601                           ;mcc_generated_files/system/src/pins.c: 138:     IOCEN = 0x0;
 14602   011042  6B26               	clrf	38,b	;volatile
 14603   011044                     
 14604                           ; BSR set to: 4
 14605                           ;mcc_generated_files/system/src/pins.c: 139:     IOCEF = 0x0;
 14606   011044  6B27               	clrf	39,b	;volatile
 14607   011046                     
 14608                           ; BSR set to: 4
 14609   011046  0012               	return		;funcret
 14610   011048                     __end_of_PIN_MANAGER_Initialize:
 14611                           	callstack 0
 14612                           
 14613 ;; *************** function _INTERRUPT_Initialize *****************
 14614 ;; Defined at:
 14615 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;		None
 14618 ;; Auto vars:     Size  Location     Type
 14619 ;;		None
 14620 ;; Return value:  Size  Location     Type
 14621 ;;                  1    wreg      void 
 14622 ;; Registers used:
 14623 ;;		wreg, status,2, status,0, cstack
 14624 ;; Tracked objects:
 14625 ;;		On entry : 0/0
 14626 ;;		On exit  : 0/0
 14627 ;;		Unchanged: 0/0
 14628 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14633 ;;Total ram usage:        0 bytes
 14634 ;; Hardware stack levels used: 1
 14635 ;; Hardware stack levels required when called: 1
 14636 ;; This function calls:
 14637 ;;		_INT0_SetInterruptHandler
 14638 ;;		_INT1_SetInterruptHandler
 14639 ;;		_INT2_SetInterruptHandler
 14640 ;; This function is called by:
 14641 ;;		_SYSTEM_Initialize
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           	psect	text47
 14646   0114E0                     __ptext47:
 14647                           	callstack 0
 14648   0114E0                     _INTERRUPT_Initialize:
 14649                           	callstack 124
 14650   0114E0                     
 14651                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 14652   0114E0  9AD6               	bcf	214,5,c	;volatile
 14653                           
 14654                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 14655   0114E2  90AF               	bcf	175,0,c	;volatile
 14656                           
 14657                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
 14658   0114E4  80D6               	bsf	214,0,c	;volatile
 14659   0114E6                     
 14660                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 14661   0114E6  0E00               	movlw	0
 14662   0114E8  6E01               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
 14663   0114EA  0E00               	movlw	0
 14664   0114EC  6E02               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 14665   0114EE  0E00               	movlw	0
 14666   0114F0  6E03               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 14667   0114F2  EC3C  F08C         	call	_INT0_SetInterruptHandler	;wreg free
 14668   0114F6                     
 14669                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 14670   0114F6  90B4               	bcf	180,0,c	;volatile
 14671   0114F8                     
 14672                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 14673   0114F8  82D6               	bsf	214,1,c	;volatile
 14674                           
 14675                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 14676   0114FA  0E00               	movlw	0
 14677   0114FC  6E01               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
 14678   0114FE  0E00               	movlw	0
 14679   011500  6E02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 14680   011502  0E00               	movlw	0
 14681   011504  6E03               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 14682   011506  EC35  F08C         	call	_INT1_SetInterruptHandler	;wreg free
 14683   01150A                     
 14684                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 14685   01150A  90B8               	bcf	184,0,c	;volatile
 14686   01150C                     
 14687                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 14688   01150C  84D6               	bsf	214,2,c	;volatile
 14689                           
 14690                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 14691   01150E  0E00               	movlw	0
 14692   011510  6E01               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
 14693   011512  0E00               	movlw	0
 14694   011514  6E02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 14695   011516  0E00               	movlw	0
 14696   011518  6E03               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 14697   01151A  EC2E  F08C         	call	_INT2_SetInterruptHandler	;wreg free
 14698   01151E  0012               	return		;funcret
 14699   011520                     __end_of_INTERRUPT_Initialize:
 14700                           	callstack 0
 14701                           
 14702 ;; *************** function _INT2_SetInterruptHandler *****************
 14703 ;; Defined at:
 14704 ;;		line 144 in file "mcc_generated_files/system/src/interrupt.c"
 14705 ;; Parameters:    Size  Location     Type
 14706 ;;  InterruptHan    3    0[COMRAM] PTR FTN()void 
 14707 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;		None
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  1    wreg      void 
 14712 ;; Registers used:
 14713 ;;		wreg, status,2, status,0
 14714 ;; Tracked objects:
 14715 ;;		On entry : 0/0
 14716 ;;		On exit  : 0/0
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14719 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14722 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14723 ;;Total ram usage:        3 bytes
 14724 ;; Hardware stack levels used: 1
 14725 ;; This function calls:
 14726 ;;		Nothing
 14727 ;; This function is called by:
 14728 ;;		_INTERRUPT_Initialize
 14729 ;; This function uses a non-reentrant model
 14730 ;;
 14731                           
 14732                           	psect	text48
 14733   01185C                     __ptext48:
 14734                           	callstack 0
 14735   01185C                     _INT2_SetInterruptHandler:
 14736                           	callstack 124
 14737   01185C                     
 14738                           ;mcc_generated_files/system/src/interrupt.c: 145:     INT2_InterruptHandler = InterruptH
      +                          andler;
 14739   01185C  C501  F5D5         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 14740   011860  C502  F5D6         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 14741   011864  C503  F5D7         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 14742   011868  0012               	return		;funcret
 14743   01186A                     __end_of_INT2_SetInterruptHandler:
 14744                           	callstack 0
 14745                           
 14746 ;; *************** function _INT1_SetInterruptHandler *****************
 14747 ;; Defined at:
 14748 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;  InterruptHan    3    0[COMRAM] PTR FTN()void 
 14751 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;		None
 14754 ;; Return value:  Size  Location     Type
 14755 ;;                  1    wreg      void 
 14756 ;; Registers used:
 14757 ;;		wreg, status,2, status,0
 14758 ;; Tracked objects:
 14759 ;;		On entry : 0/0
 14760 ;;		On exit  : 0/0
 14761 ;;		Unchanged: 0/0
 14762 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14763 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14766 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14767 ;;Total ram usage:        3 bytes
 14768 ;; Hardware stack levels used: 1
 14769 ;; This function calls:
 14770 ;;		Nothing
 14771 ;; This function is called by:
 14772 ;;		_INTERRUPT_Initialize
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           	psect	text49
 14777   01186A                     __ptext49:
 14778                           	callstack 0
 14779   01186A                     _INT1_SetInterruptHandler:
 14780                           	callstack 124
 14781   01186A                     
 14782                           ;mcc_generated_files/system/src/interrupt.c: 119:     INT1_InterruptHandler = InterruptH
      +                          andler;
 14783   01186A  C501  F5D8         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 14784   01186E  C502  F5D9         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 14785   011872  C503  F5DA         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 14786   011876  0012               	return		;funcret
 14787   011878                     __end_of_INT1_SetInterruptHandler:
 14788                           	callstack 0
 14789                           
 14790 ;; *************** function _INT0_SetInterruptHandler *****************
 14791 ;; Defined at:
 14792 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  InterruptHan    3    0[COMRAM] PTR FTN()void 
 14795 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;		None
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg, status,2, status,0
 14802 ;; Tracked objects:
 14803 ;;		On entry : 0/0
 14804 ;;		On exit  : 0/0
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14807 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14810 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14811 ;;Total ram usage:        3 bytes
 14812 ;; Hardware stack levels used: 1
 14813 ;; This function calls:
 14814 ;;		Nothing
 14815 ;; This function is called by:
 14816 ;;		_INTERRUPT_Initialize
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text50
 14821   011878                     __ptext50:
 14822                           	callstack 0
 14823   011878                     _INT0_SetInterruptHandler:
 14824                           	callstack 124
 14825   011878                     
 14826                           ;mcc_generated_files/system/src/interrupt.c: 93:     INT0_InterruptHandler = InterruptHa
      +                          ndler;
 14827   011878  C501  F5DB         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 14828   01187C  C502  F5DC         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 14829   011880  C503  F5DD         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 14830   011884  0012               	return		;funcret
 14831   011886                     __end_of_INT0_SetInterruptHandler:
 14832                           	callstack 0
 14833                           
 14834 ;; *************** function _CLOCK_Initialize *****************
 14835 ;; Defined at:
 14836 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;		None
 14839 ;; Auto vars:     Size  Location     Type
 14840 ;;		None
 14841 ;; Return value:  Size  Location     Type
 14842 ;;                  1    wreg      void 
 14843 ;; Registers used:
 14844 ;;		wreg, status,2
 14845 ;; Tracked objects:
 14846 ;;		On entry : 0/0
 14847 ;;		On exit  : 0/0
 14848 ;;		Unchanged: 0/0
 14849 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14854 ;;Total ram usage:        0 bytes
 14855 ;; Hardware stack levels used: 1
 14856 ;; This function calls:
 14857 ;;		Nothing
 14858 ;; This function is called by:
 14859 ;;		_SYSTEM_Initialize
 14860 ;; This function uses a non-reentrant model
 14861 ;;
 14862                           
 14863                           	psect	text51
 14864   011828                     __ptext51:
 14865                           	callstack 0
 14866   011828                     _CLOCK_Initialize:
 14867                           	callstack 125
 14868   011828                     
 14869                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 14870   011828  0E60               	movlw	96
 14871   01182A  0100               	movlb	0	; () banked
 14872   01182C  6FAD               	movwf	173,b	;volatile
 14873   01182E                     
 14874                           ; BSR set to: 0
 14875                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 14876   01182E  6BAF               	clrf	175,b	;volatile
 14877   011830                     
 14878                           ; BSR set to: 0
 14879                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 14880   011830  6BB3               	clrf	179,b	;volatile
 14881                           
 14882                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 14883   011832  0E08               	movlw	8
 14884   011834  6FB1               	movwf	177,b	;volatile
 14885   011836                     
 14886                           ; BSR set to: 0
 14887                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 14888   011836  6BB0               	clrf	176,b	;volatile
 14889   011838                     
 14890                           ; BSR set to: 0
 14891                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 14892   011838  6BAC               	clrf	172,b	;volatile
 14893   01183A                     
 14894                           ; BSR set to: 0
 14895   01183A  0012               	return		;funcret
 14896   01183C                     __end_of_CLOCK_Initialize:
 14897                           	callstack 0
 14898                           
 14899                           	psect	rparam
 14900   000001                     ___rparam_used  equ	1
 14901   000000                     ___param_bank   equ	0
 14902   000000                     __Lparam        equ	__Lrparam
 14903   000000                     __Hparam        equ	__Hrparam
 14904                           
 14905                           	psect	idloc
 14906                           
 14907                           ;Config register IDLOC0 @ 0x200000
 14908                           ;	unspecified, using default values
 14909   200000                     	org	2097152
 14910   200000  FFFF               	dw	65535
 14911                           
 14912                           ;Config register IDLOC1 @ 0x200002
 14913                           ;	unspecified, using default values
 14914   200002                     	org	2097154
 14915   200002  FFFF               	dw	65535
 14916                           
 14917                           ;Config register IDLOC2 @ 0x200004
 14918                           ;	unspecified, using default values
 14919   200004                     	org	2097156
 14920   200004  FFFF               	dw	65535
 14921                           
 14922                           ;Config register IDLOC3 @ 0x200006
 14923                           ;	unspecified, using default values
 14924   200006                     	org	2097158
 14925   200006  FFFF               	dw	65535
 14926                           
 14927                           ;Config register IDLOC4 @ 0x200008
 14928                           ;	unspecified, using default values
 14929   200008                     	org	2097160
 14930   200008  FFFF               	dw	65535
 14931                           
 14932                           ;Config register IDLOC5 @ 0x20000A
 14933                           ;	unspecified, using default values
 14934   20000A                     	org	2097162
 14935   20000A  FFFF               	dw	65535
 14936                           
 14937                           ;Config register IDLOC6 @ 0x20000C
 14938                           ;	unspecified, using default values
 14939   20000C                     	org	2097164
 14940   20000C  FFFF               	dw	65535
 14941                           
 14942                           ;Config register IDLOC7 @ 0x20000E
 14943                           ;	unspecified, using default values
 14944   20000E                     	org	2097166
 14945   20000E  FFFF               	dw	65535
 14946                           
 14947                           ;Config register IDLOC8 @ 0x200010
 14948                           ;	unspecified, using default values
 14949   200010                     	org	2097168
 14950   200010  FFFF               	dw	65535
 14951                           
 14952                           ;Config register IDLOC9 @ 0x200012
 14953                           ;	unspecified, using default values
 14954   200012                     	org	2097170
 14955   200012  FFFF               	dw	65535
 14956                           
 14957                           ;Config register IDLOC10 @ 0x200014
 14958                           ;	unspecified, using default values
 14959   200014                     	org	2097172
 14960   200014  FFFF               	dw	65535
 14961                           
 14962                           ;Config register IDLOC11 @ 0x200016
 14963                           ;	unspecified, using default values
 14964   200016                     	org	2097174
 14965   200016  FFFF               	dw	65535
 14966                           
 14967                           ;Config register IDLOC12 @ 0x200018
 14968                           ;	unspecified, using default values
 14969   200018                     	org	2097176
 14970   200018  FFFF               	dw	65535
 14971                           
 14972                           ;Config register IDLOC13 @ 0x20001A
 14973                           ;	unspecified, using default values
 14974   20001A                     	org	2097178
 14975   20001A  FFFF               	dw	65535
 14976                           
 14977                           ;Config register IDLOC14 @ 0x20001C
 14978                           ;	unspecified, using default values
 14979   20001C                     	org	2097180
 14980   20001C  FFFF               	dw	65535
 14981                           
 14982                           ;Config register IDLOC15 @ 0x20001E
 14983                           ;	unspecified, using default values
 14984   20001E                     	org	2097182
 14985   20001E  FFFF               	dw	65535
 14986                           
 14987                           ;Config register IDLOC16 @ 0x200020
 14988                           ;	unspecified, using default values
 14989   200020                     	org	2097184
 14990   200020  FFFF               	dw	65535
 14991                           
 14992                           ;Config register IDLOC17 @ 0x200022
 14993                           ;	unspecified, using default values
 14994   200022                     	org	2097186
 14995   200022  FFFF               	dw	65535
 14996                           
 14997                           ;Config register IDLOC18 @ 0x200024
 14998                           ;	unspecified, using default values
 14999   200024                     	org	2097188
 15000   200024  FFFF               	dw	65535
 15001                           
 15002                           ;Config register IDLOC19 @ 0x200026
 15003                           ;	unspecified, using default values
 15004   200026                     	org	2097190
 15005   200026  FFFF               	dw	65535
 15006                           
 15007                           ;Config register IDLOC20 @ 0x200028
 15008                           ;	unspecified, using default values
 15009   200028                     	org	2097192
 15010   200028  FFFF               	dw	65535
 15011                           
 15012                           ;Config register IDLOC21 @ 0x20002A
 15013                           ;	unspecified, using default values
 15014   20002A                     	org	2097194
 15015   20002A  FFFF               	dw	65535
 15016                           
 15017                           ;Config register IDLOC22 @ 0x20002C
 15018                           ;	unspecified, using default values
 15019   20002C                     	org	2097196
 15020   20002C  FFFF               	dw	65535
 15021                           
 15022                           ;Config register IDLOC23 @ 0x20002E
 15023                           ;	unspecified, using default values
 15024   20002E                     	org	2097198
 15025   20002E  FFFF               	dw	65535
 15026                           
 15027                           ;Config register IDLOC24 @ 0x200030
 15028                           ;	unspecified, using default values
 15029   200030                     	org	2097200
 15030   200030  FFFF               	dw	65535
 15031                           
 15032                           ;Config register IDLOC25 @ 0x200032
 15033                           ;	unspecified, using default values
 15034   200032                     	org	2097202
 15035   200032  FFFF               	dw	65535
 15036                           
 15037                           ;Config register IDLOC26 @ 0x200034
 15038                           ;	unspecified, using default values
 15039   200034                     	org	2097204
 15040   200034  FFFF               	dw	65535
 15041                           
 15042                           ;Config register IDLOC27 @ 0x200036
 15043                           ;	unspecified, using default values
 15044   200036                     	org	2097206
 15045   200036  FFFF               	dw	65535
 15046                           
 15047                           ;Config register IDLOC28 @ 0x200038
 15048                           ;	unspecified, using default values
 15049   200038                     	org	2097208
 15050   200038  FFFF               	dw	65535
 15051                           
 15052                           ;Config register IDLOC29 @ 0x20003A
 15053                           ;	unspecified, using default values
 15054   20003A                     	org	2097210
 15055   20003A  FFFF               	dw	65535
 15056                           
 15057                           ;Config register IDLOC30 @ 0x20003C
 15058                           ;	unspecified, using default values
 15059   20003C                     	org	2097212
 15060   20003C  FFFF               	dw	65535
 15061                           
 15062                           ;Config register IDLOC31 @ 0x20003E
 15063                           ;	unspecified, using default values
 15064   20003E                     	org	2097214
 15065   20003E  FFFF               	dw	65535
 15066                           
 15067                           	psect	config
 15068                           
 15069                           ;Config register CONFIG1 @ 0x300000
 15070                           ;	External Oscillator Selection
 15071                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 15072                           ;	Reset Oscillator Selection
 15073                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 15074   300000                     	org	3145728
 15075   300000  8F                 	db	143
 15076                           
 15077                           ;Config register CONFIG2 @ 0x300001
 15078                           ;	Clock out Enable bit
 15079                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15080                           ;	PRLOCKED One-Way Set Enable bit
 15081                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 15082                           ;	Clock Switch Enable bit
 15083                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15084                           ;	Fail-Safe Clock Monitor Enable bit
 15085                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15086   300001                     	org	3145729
 15087   300001  FF                 	db	255
 15088                           
 15089                           ;Config register CONFIG3 @ 0x300002
 15090                           ;	MCLR Enable bit
 15091                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15092                           ;	Power-up timer selection bits
 15093                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15094                           ;	Multi-vector enable bit
 15095                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 15096                           ;	IVTLOCK bit One-way set enable bit
 15097                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 15098                           ;	Low Power BOR Enable bit
 15099                           ;	LPBOREN = OFF, Low-Power BOR disabled
 15100                           ;	Brown-out Reset Enable bits
 15101                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15102   300002                     	org	3145730
 15103   300002  F7                 	db	247
 15104                           
 15105                           ;Config register CONFIG4 @ 0x300003
 15106                           ;	Brown-out Reset Voltage Selection bits
 15107                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 15108                           ;	ZCD Disable bit
 15109                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 15110                           ;	PPSLOCK bit One-Way Set Enable bit
 15111                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 15112                           ;	Stack Full/Underflow Reset Enable bit
 15113                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15114                           ;	Low Voltage Programming Enable bit
 15115                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15116                           ;	Extended Instruction Set Enable bit
 15117                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15118   300003                     	org	3145731
 15119   300003  FF                 	db	255
 15120                           
 15121                           ;Config register CONFIG5 @ 0x300004
 15122                           ;	WDT Period selection bits
 15123                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15124                           ;	WDT operating mode
 15125                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15126   300004                     	org	3145732
 15127   300004  9F                 	db	159
 15128                           
 15129                           ;Config register CONFIG6 @ 0x300005
 15130                           ;	WDT Window Select bits
 15131                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15132                           ;	WDT input clock selector
 15133                           ;	WDTCCS = SC, Software Control
 15134   300005                     	org	3145733
 15135   300005  FF                 	db	255
 15136                           
 15137                           ;Config register CONFIG7 @ 0x300006
 15138                           ;	Boot Block Size selection bits
 15139                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15140                           ;	Boot Block enable bit
 15141                           ;	BBEN = OFF, Boot block disabled
 15142                           ;	Storage Area Flash enable bit
 15143                           ;	SAFEN = OFF, SAF disabled
 15144                           ;	Background Debugger
 15145                           ;	DEBUG = 0x1, unprogrammed default
 15146   300006                     	org	3145734
 15147   300006  FF                 	db	255
 15148                           
 15149                           ;Config register CONFIG8 @ 0x300007
 15150                           ;	Boot Block Write Protection bit
 15151                           ;	WRTB = OFF, Boot Block not Write protected
 15152                           ;	Configuration Register Write Protection bit
 15153                           ;	WRTC = OFF, Configuration registers not Write protected
 15154                           ;	Data EEPROM Write Protection bit
 15155                           ;	WRTD = OFF, Data EEPROM not Write protected
 15156                           ;	SAF Write protection bit
 15157                           ;	WRTSAF = OFF, SAF not Write Protected
 15158                           ;	Application Block write protection bit
 15159                           ;	WRTAPP = OFF, Application Block not write protected
 15160   300007                     	org	3145735
 15161   300007  FF                 	db	255
 15162                           
 15163                           ;Config register CONFIG10 @ 0x300009
 15164                           ;	PFM and Data EEPROM Code Protection bit
 15165                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15166   300009                     	org	3145737
 15167   300009  FF                 	db	255
 15168                           tosu	equ	0x4FF
 15169                           tosh	equ	0x4FE
 15170                           tosl	equ	0x4FD
 15171                           stkptr	equ	0x4FC
 15172                           pclatu	equ	0x4FB
 15173                           pclath	equ	0x4FA
 15174                           pcl	equ	0x4F9
 15175                           tblptru	equ	0x4F8
 15176                           tblptrh	equ	0x4F7
 15177                           tblptrl	equ	0x4F6
 15178                           tablat	equ	0x4F5
 15179                           prodh	equ	0x4F4
 15180                           prodl	equ	0x4F3
 15181                           indf0	equ	0x4EF
 15182                           postinc0	equ	0x4EE
 15183                           postdec0	equ	0x4ED
 15184                           preinc0	equ	0x4EC
 15185                           plusw0	equ	0x4EB
 15186                           fsr0h	equ	0x4EA
 15187                           fsr0l	equ	0x4E9
 15188                           wreg	equ	0x4E8
 15189                           indf1	equ	0x4E7
 15190                           postinc1	equ	0x4E6
 15191                           postdec1	equ	0x4E5
 15192                           preinc1	equ	0x4E4
 15193                           plusw1	equ	0x4E3
 15194                           fsr1h	equ	0x4E2
 15195                           fsr1l	equ	0x4E1
 15196                           bsr	equ	0x4E0
 15197                           indf2	equ	0x4DF
 15198                           postinc2	equ	0x4DE
 15199                           postdec2	equ	0x4DD
 15200                           preinc2	equ	0x4DC
 15201                           plusw2	equ	0x4DB
 15202                           fsr2h	equ	0x4DA
 15203                           fsr2l	equ	0x4D9
 15204                           status	equ	0x4D8

Data Sizes:
    Strings     327
    Constant    82
    Data        56
    BSS         37
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK5           160     25     126
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> nrf_loop@msg(BANK5[5]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> nrf_loop@msg(BANK5[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 8
		 -> nrf_loop@buf(BANK5[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 8
		 -> nrf_loop@buf(BANK5[8]), 

    Nrf24_config@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_dataReady@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_flushRx@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_getCRCLength@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_getData@data	PTR unsigned char  size(2) Largest target is 8
		 -> nrf_loop@buf(BANK5[8]), 

    Nrf24_getData@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_getDataRate@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_getPALevel@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_getRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_getStatus@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_init@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_powerUpRx@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_print_address_register@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_print_address_register@name	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_5(CODE[9]), 

    Nrf24_print_byte_register@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_print_byte_register@name	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_4(CODE[13]), 
		 -> STR_6(CODE[11]), STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    Nrf24_printDetails@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_readRegister@value	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(COMRAM[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), 

    Nrf24_setRADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    Nrf24_setRADDR@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_setRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_SetSpeedDataRates@dev	PTR struct . size(2) Largest target is 3
		 -> nrf_loop@dev(BANK5[3]), 

    Nrf24_writeRegister@value	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    NULL$0	PTR FTN()void  size(3) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1632$buffer	PTR unsigned char  size(2) Largest target is 0

    S1632$source	PTR const unsigned char  size(2) Largest target is 0

    S40$4$0	PTR void  size(2) Largest target is 0

    S40$5$0	PTR void  size(2) Largest target is 0

    S40$6$0	PTR void  size(2) Largest target is 0

    S40SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S40SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    S40SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S40SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S40SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    S40SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S40SPI_INTERFACE$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    S40SPI_INTERFACE$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S40SPI_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    S40SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S40SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S40SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    S40SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S40SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> nrf_loop@msg(BANK5[5]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__Nrf24_getDataRateString	PTR unsigned char  size(2) Largest target is 24
		 -> rf24_datarates(BANK5[24]), 

    sp__Nrf24_getPALevelString	PTR unsigned char  size(2) Largest target is 32
		 -> rf24_pa_dbm(BANK5[32]), 

    SPI1_nrf24$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_nrf24$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_nrf24$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_nrf24$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_nrf24$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_nrf24$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_nrf24$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_nrf24$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_nrf24$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_nrf24$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_nrf24$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_nrf24$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_nrf24$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI1_nrf24$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI_read_buff@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(COMRAM[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), nrf_loop@buf(BANK5[8]), 

    SPI_write_buff@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK5[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_25(CODE[7]), 
		 -> STR_3(CODE[13]), STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), 
		 -> STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK5[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_3(CODE[13]), 
		 -> STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), STR_7(CODE[7]), 
		 -> STR_8(CODE[10]), STR_9(CODE[7]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _nrf_loop->_Nrf24_printDetails
    _Nrf24_setRetransmitDelay->_Nrf24_readRegister
    _Nrf24_setRADDR->_Nrf24_readRegister
    _Nrf24_setRADDR->_Nrf24_writeRegister
    _Nrf24_writeRegister->_SPI_write_buff
    _SPI_write_buff->_DELAY_microseconds
    _SPI_write_buff->_SPI1_ByteExchange
    _Nrf24_printDetails->_Nrf24_print_address_register
    _Nrf24_print_status->_printf
    _Nrf24_print_byte_register->_printf
    _Nrf24_print_address_register->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Nrf24_getRetransmitDelay->_Nrf24_readRegister
    _Nrf24_getPALevel->_Nrf24_readRegister
    _Nrf24_getDataRate->_Nrf24_readRegister
    _Nrf24_getCRCLength->_Nrf24_readRegister
    _Nrf24_init->_SPI1_Open
    _Nrf24_getData->_SPI_read_buff
    _Nrf24_dataReady->_Nrf24_getStatus
    _Nrf24_config->_Nrf24_getStatus
    _Nrf24_powerUpRx->_Nrf24_configRegister
    _Nrf24_getStatus->_Nrf24_readRegister
    _Nrf24_flushRx->_SPI1_ByteExchange
    _Nrf24_SetSpeedDataRates->_Nrf24_readRegister
    _Nrf24_readRegister->_SPI_read_buff
    _SPI_read_buff->_SPI1_ByteExchange
    _Nrf24_configRegister->_SPI1_ByteExchange
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _main in BANK5

    _main->_nrf_loop
    _nrf_loop->_Nrf24_printDetails

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27528
                  _SYSTEM_Initialize
                           _nrf_loop
 ---------------------------------------------------------------------------------
 (1) _nrf_loop                                            20    20      0   27459
                                              7 BANK5     18    18      0
                 _DELAY_milliseconds
            _Nrf24_SetSpeedDataRates
                       _Nrf24_config
                    _Nrf24_dataReady
                      _Nrf24_getData
                         _Nrf24_init
                 _Nrf24_printDetails
                     _Nrf24_setRADDR
           _Nrf24_setRetransmitDelay
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setRetransmitDelay                             4     1      3     549
                                             10 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setRADDR                                      16    12      4     837
                                             10 COMRAM    16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_writeRegister                                  4     1      3     326
                                              6 COMRAM     4     1      3
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_write_buff                                       4     1      3     172
                                              2 COMRAM     4     1      3
                 _DELAY_microseconds
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _DELAY_microseconds                                   2     0      2      46
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Nrf24_printDetails                                   9     7      2   22967
                                             91 COMRAM     2     0      2
                                              0 BANK5      7     7      0
                 _Nrf24_getCRCLength
                  _Nrf24_getDataRate
                   _Nrf24_getPALevel
           _Nrf24_getRetransmitDelay
                    _Nrf24_getStatus
       _Nrf24_print_address_register
          _Nrf24_print_byte_register
                 _Nrf24_print_status
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_status                                   2     2      0    5049
                                             77 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_byte_register                            7     1      6    5324
                                             77 COMRAM     7     1      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_address_register                        14     8      6    5369
                                             77 COMRAM    14     8      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18     4     14    4875
                                             61 COMRAM    16     2     14
                 _Nrf24_getCRCLength (ARG)
                  _Nrf24_getDataRate (ARG)
                   _Nrf24_getPALevel (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    4802
                                             53 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    10      6    4658
                                             38 COMRAM    15     9      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                13     9      4    1060
                                             25 COMRAM    13     9      4
                                _pad
 ---------------------------------------------------------------------------------
 (6) _stoa                                                14    10      4     557
                                              9 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     5      4     182
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     8      4    1840
                                             25 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     3      6     762
                                             16 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     339
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     238
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getRetransmitDelay                             3     1      2     351
                                             10 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getPALevel                                     3     1      2     375
                                             10 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getDataRate                                    4     2      2     422
                                             10 COMRAM     4     2      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getCRCLength                                   5     3      2     467
                                             10 COMRAM     5     3      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_init                                           2     0      2     199
                                              1 COMRAM     2     0      2
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Nrf24_getData                                        4     0      4     356
                                              6 COMRAM     4     0      4
               _Nrf24_configRegister
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (2) _Nrf24_dataReady                                      3     1      2     405
                                             13 COMRAM     3     1      2
                    _Nrf24_getStatus
 ---------------------------------------------------------------------------------
 (2) _Nrf24_config                                         4     0      4     919
                                             13 COMRAM     4     0      4
               _Nrf24_configRegister
                      _Nrf24_flushRx
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpRx                                      2     0      2     155
                                              4 COMRAM     2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getStatus                                      3     1      2     358
                                             10 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_flushRx                                        2     0      2      54
                                              2 COMRAM     2     0      2
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (2) _Nrf24_SetSpeedDataRates                              4     1      3     661
                                             10 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_readRegister                                   4     1      3     304
                                              6 COMRAM     4     1      3
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_read_buff                                        4     1      3     126
                                              2 COMRAM     4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (3) _Nrf24_configRegister                                 2     1      1     129
                                              2 COMRAM     2     1      1
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    2     2      0      53
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2      25
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      69
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      23
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      23
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      23
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _nrf_loop
     _DELAY_milliseconds
     _Nrf24_SetSpeedDataRates
       _Nrf24_configRegister
         _SPI1_ByteExchange
       _Nrf24_readRegister
         _SPI1_ByteExchange
         _SPI_read_buff
           _SPI1_ByteExchange
     _Nrf24_config
       _Nrf24_configRegister
       _Nrf24_flushRx
         _SPI1_ByteExchange
       _Nrf24_getStatus
         _Nrf24_readRegister
       _Nrf24_powerUpRx
         _Nrf24_configRegister
     _Nrf24_dataReady
       _Nrf24_getStatus
     _Nrf24_getData
       _Nrf24_configRegister
       _SPI1_ByteExchange
       _SPI_read_buff
     _Nrf24_init
       _SPI1_Open
     _Nrf24_printDetails
       _Nrf24_getCRCLength
         _Nrf24_readRegister
       _Nrf24_getDataRate
         _Nrf24_readRegister
       _Nrf24_getPALevel
         _Nrf24_readRegister
       _Nrf24_getRetransmitDelay
         _Nrf24_readRegister
       _Nrf24_getStatus
       _Nrf24_print_address_register
         _Nrf24_readRegister
         _printf
           _Nrf24_getCRCLength (ARG)
           _Nrf24_getDataRate (ARG)
           _Nrf24_getPALevel (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
               _read_prec_or_width
               _stoa
                 _fputc
               _xtoa
                 _pad
       _Nrf24_print_byte_register
         _Nrf24_readRegister
         _printf
       _Nrf24_print_status
         _printf
       _printf
     _Nrf24_setRADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
         _SPI1_ByteExchange
         _SPI_write_buff
           _DELAY_microseconds
           _SPI1_ByteExchange
     _Nrf24_setRetransmitDelay
       _Nrf24_configRegister
       _Nrf24_readRegister
     _memcpy

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1150      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     25     126     78.8%
BITBIGSFRll        120      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     93      94     98.9%
BITBIGSFRlh          7      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     220      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Mar 30 23:01:40 2025

                       _SPI1_ByteExchange 1710                         ??_Nrf24_powerUpRx 0507  
                    ??_Nrf24_printDetails 05BC                                        l61 1810  
                                      l67 0CFA                                        l69 0CFA  
                      ?_SPI1_ByteExchange 0501                       ?_Nrf24_print_status 0501  
                            ___awdiv@sign 0506                                       l102 1726  
                                     l104 1734                                       l105 173A  
                                     l301 151E                                       l311 1884  
                                     l136 183A                                       l324 1876  
                                     l500 170E                                       l421 1858  
                                     l510 10D8                                       l263 1046  
                                     l351 184C                                       l512 10E0  
                                     l337 1868                                       l506 11DC  
                                     l611 17AA                                       l604 1826  
                                     l532 1786                                       l541 1626  
                                     l470 15C0                                       l614 1886  
                                     l471 15C2                  Nrf24_getCRCLength@config 050F  
                                     l368 16B6                                       l552 17F8  
                                     l560 1686                                       l480 1458  
                                     l545 1656                                       l377 1362  
                                     l481 145A                                       l634 124A  
                                     l618 1890                                       l642 0594  
                                     l475 15F0                                       l548 17E4  
                                     l556 166A                                       l564 1606  
                                     l477 15F2                                       l653 0F0C  
                                     l645 1160                                       l485 1498  
                                     l487 149A                                       l639 16E2  
                                     l672 12B0                                       l664 1402  
                                     l680 17C8                                       l568 1624  
                                     l674 1296                                       l666 1406  
                                     l659 1310                                       l677 12B2  
                                     l686 17E0                                       l926 0DBC  
                                     l939 0E6A                __end_of_DELAY_milliseconds 16B8  
              ??_INT0_SetInterruptHandler 0504                                       _abs 158C  
                                     _pad 0F0E                       ??_SPI1_ByteExchange 0501  
                            ___awmod@sign 0506                  Nrf24_getCRCLength@result 050D  
                                     prod 04F3                                       wreg 04E8  
                                    ?_abs 0507                                      l2100 0FE0  
                                    l2110 0FF2                                      l2102 0FEA  
                                    l2120 0FFC                                      l2112 0FF4  
                                    l2104 0FEC                                      l3000 17F6  
                                    l2130 100A                                      l2122 1002  
                                    l2114 0FF6                                      l2106 0FEE  
                                    l3002 165A                                      l1410 0FAA  
                                    l3010 173C                                      l2140 101A  
                                    l2132 1010                                      l2124 1004  
                                    l2116 0FF8                                      l2108 0FF0  
                                    l3004 166C                                      l3020 0CF2  
                                    l3100 13C8                                      l1500 15A6  
                                    l3012 1744                                      l1405 0F46  
                                    l1413 05F4                                      l3030 185C  
                                    l2150 1036                                      l2142 102C  
                                    l2134 1012                                      l2126 1006  
                                    l2118 0FFA                                      l2070 1804  
                                    l3006 1674                                      l3022 0CF4  
                                    l3110 1404                                      l3102 13CE  
                                    l1503 15BE                                      l2080 1828  
                                    l2160 1040                                      l2152 1038  
                                    l2144 1030                                      l2136 1016  
                                    l2128 1008                                      l2072 1808  
                                    l3008 1684                                      l3032 1812  
                                    l3040 1792                                      l3024 0CF6  
                                    l3016 0C34                                      l3120 1266  
                                    l3104 13E0                                      l1408 0F88  
                                    l1440 082C                                      l3200 107C  
                                    l1433 077C                                      l2082 182E  
                                    l3026 1878                                      l2162 1042  
                                    l2154 103A                                      l2146 1032  
                                    l2138 1018                                      l2090 0FAC  
                                    l2074 180A                                      l3050 188E  
                                    l3034 1824                                      l3042 1794  
                                    l3018 0C44                                      l3122 1278  
                                    l3114 124C                                      l3106 13E8  
                                    l1426 070A                                      l3202 10B4  
                                    l1515 0C30                                      l1523 14DE  
                                    l2084 1830                                      l3028 186A  
                                    l2164 1044                                      l2156 103C  
                                    l2148 1034                                      l2092 0FCA  
                                    l2076 180C                                      l2068 17FA  
                                    l3220 1230                                      l3212 11F2  
                                    l3044 179E                                      l3124 1286  
                                    l3116 124E                                      l3108 13FA  
                                    l3132 17AC                                      l3140 17CA  
                                    l3060 10E4                                      l3052 15F6  
                                    l3204 10B8                                      l1372 1456  
                                    l3300 093A                                      l1461 0B5E  
                                    l1445 0874                                      l2086 1836  
                                    l3150 14F6                                      l2158 103E  
                                    l2094 0FCE                                      l2078 180E  
                                    l3222 1240                                      l3214 1204  
                                    l3046 17A0                                      l3038 1788  
                                    l3126 12A4                                      l3118 1260  
                                    l3134 17BE                                      l3142 17DC  
                                    l1526 1892                                      l3070 0EA4  
                                    l3062 0E6C                                      l3054 1608  
                                    l3206 10BC                                      l3230 16D8  
                                    l3302 0956                                      l2088 1838  
                                    l3152 14F8                                      l2096 0FD8  
                                    l3160 168C                                      l3216 1216  
                                    l3208 11DE                                      l3048 1888  
                                    l3240 1762                                      l3128 12AC  
                                    l3136 17C6                                      l1480 038E  
                                    l3080 0ED2                                      l3064 0E84  
                                    l3232 0390                                      l3056 1612  
                                    l3224 16B8                                      l3304 0986  
                                    l1465 0B66                                      l1457 0A9A  
                                    l1481 021C                                      l1385 1760  
                                    l3154 150A                                      l3146 14E0  
                                    l2098 0FDA                                      l3162 169C  
                                    l3218 1222                                      l3242 1770  
                                    l3170 170A                                      l2610 0B8C  
                                    l3066 0E96                                      l3082 0EEE  
                                    l3090 12DE                                      l3234 0548  
                                    l3058 1622                                      l3226 16CA  
                                    l3330 184E                                      l3156 150C  
                                    l3148 14E6                                      l3180 1198  
                                    l3244 177E                                      l3252 1628  
                                    l3172 170C                                      l3164 16E4  
                                    l2700 0E4A                                      l2612 0B96  
                                    l2620 149C                                      l3084 0F00  
                                    l3076 0EAC                                      l3068 0E98  
                                    l3092 12E0                                      l3236 0558  
                                    l3228 16D0                                      l3260 1408  
                                    l3332 1852                                      l3158 1688  
                                    l3182 11AE                                      l3174 1162  
                                    l3254 162E                                      l3166 16EA  
                                    l2630 0CFE                                      l2702 0E5A  
                                    l2614 0BB4                                      l2606 0B68  
                                    l2622 14A8                                      l2710 0F1C  
                                    l3078 0ECE                                      l3094 12F2  
                                    l3086 12B4                                      l3238 0580  
                                    l3190 1050                                      l3262 141C  
                                    l3270 143C                                      l3334 1854  
                                    l3272 183C                                      l3184 11C4  
                                    l3176 1182                                      l3248 1784  
                                    l3256 164A                                      l3168 16FA  
                                    l2640 0D2E                                      l2632 0D0C  
                                    l2704 0E62                                      l2616 0BEA  
                                    l2608 0B7A                                      l2624 14BA  
                                    l2720 0F6A                                      l2712 0F30  
                                    l2800 0812                                      l1496 13B4  
                                    l3096 1304                                      l3088 12CC  
                                    l3192 1062                                      l3264 1428  
                                    l3280 0882                                      l3274 1848  
                                    l3186 11D0                                      l3178 118E  
                                    l3258 164C                                      l3098 13B6  
                                    l2650 0D5C                                      l2642 0D32  
                                    l2634 0D14                                      l2626 14BE  
                                    l2722 0F96                                      l2714 0F3E  
                                    l2730 059A                                      l2810 0998  
                                    l3194 1074                                      l3266 142C  
                                    l3290 08D6                                      l3282 0882  
                                    l2660 0D90                                      l2652 0D6A  
                                    l2644 0D3A                                      l2636 0D18  
                                    l2628 0CFC                                      l2724 158C  
                                    l2716 0F52                                      l2708 0F0E  
                                    l2740 05DC                                      l2732 05AE  
                                    l2804 083E                                      l2820 09C0  
                                    l2812 099C                                      l2900 00CA  
                                    l3188 1048                                      l3268 1438  
                                    l3292 08F6                                      l3284 0896  
                                    l3276 0876                                      l2662 0D96  
                                    l2654 0D70                                      l2646 0D4C  
                                    l2638 0D26                                      l2726 159A  
                                    l2718 0F66                                      l2750 060A  
                                    l2742 05E8                                      l2734 05B6  
                                    l2806 0852                                      l2830 09EE  
                                    l2822 09D0                                      l2814 09AC  
                                    l2910 0168                                      l2902 00D4  
                                    l3294 0902                                      l3286 08B2  
                                    l3278 0882                                      l2656 0D86  
                                    l2648 0D54                                      l2664 0D9C  
                                    l2680 0DDA                                      l2672 0DBE  
                                    l2760 067A                                      l2752 063C  
                                    l2744 05F0                                      l2736 05C6  
                                    l2728 0596                                      l2808 0856  
                                    l2840 0A52                                      l2832 09F4  
                                    l2824 09D8                                      l2816 09B4  
                                    l2904 00E4                                      l3288 08C6  
                                    l2666 0DAC                                      l2658 0D8E  
                                    l2690 0E12                                      l2682 0DE8  
                                    l2674 0DC0                                      l2770 06D4  
                                    l2762 068C                                      l2754 063E  
                                    l2746 05FC                                      l2738 05CC  
                                    l2850 0AA4                                      l2842 0A6C  
                                    l2826 09DC                                      l2818 09BA  
                                    l2834 0A14                                      l2930 0254  
                                    l2914 0180                                      l2906 0104  
                                    l3298 0922                                      l2860 1712  
                                    l2668 0DB4                                      l2692 0E20  
                                    l2684 0DF0                                      l2676 0DCE  
                                    l2772 06DA                                      l2764 069C  
                                    l2756 0644                                      l2748 0604  
                                    l2852 0ACC                                      l2780 0726  
                                    l2836 0A30                                      l2844 0A7A  
                                    l2828 09EC                                      l2932 025C  
                                    l2924 0200                                      l2916 01A0  
                                    l2908 0124                                      l2870 1738  
                                    l2862 1716                                      l2694 0E36  
                                    l2686 0E02                                      l2678 0DD6  
                                    l2774 06EA                                      l2766 06B6  
                                    l2758 0660                                      l2854 0B06  
                                    l2790 079E                                      l2782 072E  
                                    l2838 0A42                                      l2934 0284  
                                    l2942 0308                                      l2926 021E  
                                    l2918 01E8                                      ?_pad 0511  
                                    l2864 171C                                      l2696 0E3E  
                                    l2688 0E0A                                      l2768 06C4  
                                    l2856 0B24                                      l2848 0A9C  
                                    l2792 07B2                                      l2784 073A  
                                    l2944 0318                                      l2936 02BC  
                                    l2928 0246                                      l2880 0044  
                                    l2952 0362                                      l2960 1316  
                                    l2866 171E                                      l2970 15C8  
                                    l2698 0E44                                      l2858 0B32  
                                    l2794 07B6                                      l2786 073E  
                                    l2778 070C                                      l2938 02F4  
                                    l2882 0048                                      l2874 0000  
                                    l2962 131E                                      l2868 1722  
                                    l2972 15D8                                      l2796 07D8  
                                    l2948 0350                                      l2892 006A  
                                    l2884 004E                                      l2876 0028  
                                    l2980 1370                                      l2964 1326  
                                    l2974 15DC                                      l2798 080E  
                                    l2886 0050                                      l2894 008E  
                                    l2878 0036                                      l2982 138C  
                                    l2966 1340                                      l2958 1312  
                                    l2990 1474                                      l2976 15DE  
                                    l2896 009E                                      l2888 0062  
                                    l2984 13AC                                      l2968 1348  
                                    l2992 1478                                      l2898 00BA  
                                    l2978 1364                                      l2994 1484  
                                    l2988 1460                                      l2996 1486  
                                    l2998 17E6                                      STR_1 FFF4  
                                    STR_2 FEFD                                      STR_3 FF88  
                                    STR_4 FF95                                      STR_5 FFB7  
                                    STR_6 FFA2                                      STR_7 FFE0  
                                    STR_8 FFAD                                      STR_9 FFE7  
                    ??_Nrf24_print_status 054E                                      u2000 112E  
                                    u2001 1128                                      u2010 1130  
                                    u2100 1296                                      u1300 14DE  
                                    u2020 1156                                      u2101 1292  
                                    u1301 14DA                                      u2021 1150  
                                    u2110 12A4                                      u1310 0D0C  
                                    u2030 1158                                      u2111 12A0  
                                    u1311 0D08                                      u2120 16B6  
                                    u1320 0D26                                      u1400 0E20  
                                    u2040 0EEE                                      u2200 091E  
                                    u2121 16B2                                      u1321 0D22  
                                    u1401 0E1C                                      u2041 0EEA  
                                    u2201 091A                                      u1330 0D4C  
                                    u1410 0E36                                      u2050 0F00  
                                    u2130 10B4                                      u2210 0956  
                                    u1331 0D48                                      u1411 0E32  
                                    u2051 0EFC                                      u2131 10B0  
                                    u2211 0952                                      u1340 0D6A  
                                    u1420 0E5A                                      u1260 0B7A  
                                    u1500 05C6                                      u2060 1304  
                                    u2140 10D8                                      u1341 0D66  
                                    u1421 0E56                                      u1261 0B76  
                                    u1501 05C2                                      u2061 1300  
                                    u2141 10D4                                      _LATA 04BE  
                                    u2150 11EE                                      u2070 13E0  
                                    u1350 0D86                                      u1270 0B8C  
                                    u1430 0F1C                                      u1510 05DC  
                                    _LATB 04BF                                      u2151 11EA  
                                    u2071 13DC                                      u1351 0D82  
                                    u1271 0B88                                      u1431 0F18  
                                    u1511 05D8                                      _LATC 04C0  
                                    u2160 1216                                      u2080 13FA  
                                    u1360 0DAC                                      u1280 0BB4  
                                    u1440 0F3E                                      u1520 067A  
                                    u1600 077C                                      _LATD 04C1  
                                    u2161 1212                                      u2081 13F6  
                                    u1361 0DA8                                      u1281 0BB0  
                                    u1441 0F3A                                      u1521 0676  
                                    u1601 0778                                      _LATE 04C2  
                                    u2170 177E                                      u2090 1286  
                                    u1370 0DCE                                      u1290 0BEA  
                                    u1450 0F88                                      u1530 068C  
                                    u1610 079A                                      _LATF 04C3  
                                    u2171 177A                                      u2091 1282  
                                    u1371 0DCA                                      u1291 0BE6  
                                    u1451 0F84                                      u1531 0688  
                                    u1611 0796                                      u1380 0DE8  
                                    u1460 0F96                                      u1540 069C  
                                    u1620 07D4                                      u1700 0A42  
                                    u2180 1456                                      u1381 0DE4  
                                    u1461 0F92                                      u1541 0698  
                                    u1621 07D0                                      u1701 0A3E  
                                    u2181 1452                                      u1390 0E02  
                                    u1470 159A                                      u1550 06B6  
                                    u1630 07FA                                      u1710 0A52  
                                    u2190 08C6                                      u1391 0DFE  
                                    u1471 1596                                      u1551 06B2  
                                    u1711 0A4E                                      u2191 08C2  
                                    u1560 06C4                                      u1480 05AA  
                                    u1640 082C                                      u1720 0A6C  
                                    u1800 0104                                      u1561 06C0  
                                    u1481 05A4                                      u1641 0828  
                                    u1721 0A68                                      u1801 0100  
                                    u1570 06D4                                      u1490 05AC  
                                    u1650 083A                                      u1730 0A7A  
                                    u1810 0124                                      u1571 06D0  
                                    u1651 0836                                      u1731 0A76  
                                    u1811 0120                                      u1900 15F0  
                                    u1740 0ACC                                      u1660 0874  
                                    u1580 0726                                      u1820 01A0  
                                    u1901 15EC                                      u1741 0AC8  
                                    u1661 0870                                      u1637 07F0  
                                    u1581 0722                                      u1821 019C  
                                    u2437 1318                                      u1750 0B5E  
                                    u1590 076C                                      u1670 09D0  
                                    u1830 0246                                      u1910 13AC  
                                    u1751 0B5A                                      u1671 09CC  
                                    u1831 0242                                      u1911 13A8  
                                    u2447 1342                                      u1760 1734  
                                    u1840 0284                                      u1920 1498  
                                    u2457 1692                                      u1761 1730  
                                    u1841 0280                                      u1921 1494  
                                    u1930 166A                                      u1690 0A30  
                                    u1850 02BC                                      u1770 0028  
                                    u1931 1666                                      u1691 0A2C  
                                    u1851 02B8                                      u1771 0024  
                                    u1940 0C44                                      u1860 02F4  
                                    u1780 009E                                      u1941 0C40  
                                    u1597 0762                                      u1685 0A00  
                                    u1861 02F0                                      u1781 009A  
                                    u1870 0318                                      u1790 00CA  
                                    u1950 1606                                      u1871 0314  
                                    u1791 00C6                                      u1951 1602  
                                    u1960 1102                                      u1880 133C  
                                    u1961 10FC                                      u1881 1338  
                                    u1970 1104                                      u1890 1362  
                                    u1891 135E                                      u1980 1118  
                                    u1981 1112                                      u1990 111A  
                                    _WPUA 0401                                      _WPUB 0409  
                                    _WPUC 0411                                      _WPUD 0419  
                                    _WPUE 0421                                      _WPUF 0429  
                                    abs@a 0507                                      _dbuf 059C  
                                    _main 184E                                      _dtoa 0596  
                                    _prec 059A                                      pad@i 0518  
                                    pad@p 0515                                      fsr0h 04EA  
                                    fsr1h 04E2                                      indf0 04EF  
                                    fsr2h 04DA                                      fsr0l 04E9  
                                    indf2 04DF                                      fsr1l 04E1  
                                    fsr2l 04D9                                      _stoa 070C  
                                    _xtoa 0998                 ?_INT2_SetInterruptHandler 0501  
                                    prodh 04F4                                      prodl 04F3  
                                    start FFFC                 __end_of_SPI1_ByteExchange 173C  
                          _SPI1STATUSbits 0087                              ___param_bank 0000  
                                   ??_abs 0509                                     ??_pad 0517  
                                   ?_main 0501                                     ?_dtoa 051A  
                         __end_of___awdiv 0DBE                                     STR_10 FFC0  
                                   STR_11 FFC9                                     STR_20 FFD4  
                                   STR_12 FF7A                                     STR_21 FEFA  
                                   STR_13 FF59                                     STR_22 FFEE  
                                   STR_14 FF47                                     STR_23 FFD1  
                                   STR_15 FF6A                                     STR_24 FEFA  
                                   STR_16 FF32                                     STR_25 FFD9  
                                   STR_17 FEB7                                     STR_18 FFEE  
                                   STR_19 FFFA                           __end_of___awmod 0E6C  
                                   ?_stoa 050A                            SPI_read_buff@i 0506  
                         ___awdiv@divisor 0503                                     ?_xtoa 051A  
                                   _IOCAF 0407                                     _IOCBF 040F  
                                   _IOCCF 0417                                     _IOCAN 0406  
                                   _IOCEF 0427                                     _IOCAP 0405  
                                   _IOCBN 040E                                     _IOCBP 040D  
                                   _IOCCN 0416                                     _IOCCP 0415  
                                   _IOCEN 0426                                     _IOCEP 0425  
                                   _PCON0 04F0                           ___awdiv@counter 0505  
                                   _OSCEN 00B3                              vfpfcnvrt@fmt 0529  
                                   _TRISA 04C6                                     _TRISB 04C7  
                                   _TRISC 04C8                                     _TRISD 04C9  
                                   _TRISE 04CA                                     _TRISF 04CB  
                              _Nrf24_init 16E4                    ??_Nrf24_configRegister 0504  
                                   _flags 055E                       read_prec_or_width@c 0507  
                     read_prec_or_width@n 0508                                     _fputc 0B68  
                                   _fputs 149C                                     pad@fp 0511  
                                   _width 0598                                     _putch 1892  
                                   dtoa@d 051C                                     dtoa@i 0524  
                                   dtoa@p 0520                                     dtoa@s 0523  
                                   dtoa@w 0521                  _INT1_SetInterruptHandler 186A  
                                   tablat 04F5                                     stoa@l 0516  
                                   stoa@p 0510                                     stoa@s 050C  
                                   stoa@w 0512                                     status 04D8  
                                   xtoa@c 0524                                     xtoa@d 051C  
                                   xtoa@i 0525                                     xtoa@p 0521  
                                   xtoa@w 0522                   _Nrf24_SetSpeedDataRates 11DE  
                         __initialization 1558                  Nrf24_writeRegister@value 0507  
                           _SPI_read_buff 15C0                              __end_of_main 185C  
                            __end_of_dtoa 070C                   Nrf24_configRegister@reg 0504  
                            __end_of_stoa 0876                              __end_of_xtoa 0A9C  
            SPI1_ByteExchange@returnValue 0502              Nrf24_print_byte_register@dev 054E  
            Nrf24_print_byte_register@reg 0552              Nrf24_print_byte_register@qty 0553  
               Nrf24_configRegister@value 0503                                    ??_main 055E  
                                  ??_dtoa 051E                       Nrf24_config@channel 0510  
                                  ??_stoa 050E                                    ??_xtoa 051E  
                           __activetblptr 0003                           _Nrf24_dataReady 1762  
             ??_Nrf24_print_byte_register 0554                      __end_of_Nrf24_config 11DE  
              __end_of_read_prec_or_width 0B68                        Nrf24_dataReady@dev 050E  
                     Nrf24_config@payload 0511                                    ?_fputc 0501  
                                  _ACTCON 00AC                                    ?_fputs 050A  
                        ___awdiv@dividend 0501                                    _ANSELA 0400  
                                  ?_putch 0501                                    _ANSELB 0408  
                                  _ANSELC 0410                                    _ANSELD 0418  
                                  _ANSELE 0420                                    _ANSELF 0428  
                                  _RB1I2C 0289                                    _RB2I2C 0288  
                                  _RC3I2C 0287                                    _RC4I2C 0286  
                                  _RC4PPS 0215                                    _ODCONA 0402  
                                  _ODCONB 040A                                    _ODCONC 0412  
                                  _RC6PPS 0217                                    _ODCOND 041A  
                                  _ODCONE 0422                                    _ODCONF 042A  
                                  _INLVLA 0404                                    _INLVLB 040C  
                                  _INLVLC 0414                                    _INLVLD 041C  
                                  _INLVLE 0424                                    _INLVLF 042C  
                         _Nrf24_getStatus 1812                                    _OSCFRQ 00B1  
                           vfpfcnvrt@done 0533           Nrf24_print_byte_register@buffer 0554  
                       __end_of_SPI1_Open 0CFC                            ?_SPI_read_buff 0503  
                            vfprintf@cfmt 053C                                 ??___awdiv 0505  
                               ??___awmod 0505                                    _memcpy 1408  
           Nrf24_getRetransmitDelay@value 050D                      read_prec_or_width@ap 0503  
                                  clear_0 157E                          ___awdiv@quotient 0507  
                         ___awmod@divisor 0503                                    isa$std 0001  
                         ___awmod@counter 0505                                    _printf 173C  
                                  pad@buf 0513                                    dtoa@fp 051A  
                       ?_CLOCK_Initialize 0501                          __end_of_nrf_loop 0998  
                                  fputc@c 0501              _INT2_DefaultInterruptHandler 0000  
                                  fputs@c 050E                                    fputs@i 050F  
                                  fputs@s 050A                        ??_CLOCK_Initialize 0501  
                            __mediumconst FE64                                    tblptrh 04F7  
                                  tblptrl 04F6                                    tblptru 04F8  
                             ?_Nrf24_init 0502                                    stoa@cp 0514  
                                  stoa@fp 050A                                    putch@c 0501  
                        __end_of_vfprintf 13B6  INT2_SetInterruptHandler@InterruptHandler 0501  
INT1_SetInterruptHandler@InterruptHandler 0501  INT0_SetInterruptHandler@InterruptHandler 0501  
                                  xtoa@fp 051A                            _SPI1_IsRxReady 0000  
                          _SPI1_IsTxReady 0000                         _SYSTEM_Initialize 183C  
                         _Nrf24_powerUpRx 1788                                __accesstop 0560  
                 __end_of__initialization 1586                     Nrf24_getCRCLength@dev 050B  
               ??_Nrf24_SetSpeedDataRates 050E                            _SPI1_ByteWrite 0000  
               _Nrf24_print_byte_register 12B4                        ?_SYSTEM_Initialize 0501  
                      _Nrf24_getCRCLength 124C                             ___rparam_used 0001  
           Nrf24_setRetransmitDelay@value 050E                            __pcstackCOMRAM 0501  
                            __pidataBANK5 1520                       ??_SYSTEM_Initialize 0504  
                     ?_Nrf24_getCRCLength 050B                   __end_of_Nrf24_dataReady 1788  
                           __end_of_fputc 0C32                             __end_of_fputs 14E0  
                       ??_SPI1_Initialize 0501                        _DELAY_microseconds 1312  
                           __end_of_putch 1894                 ?_Nrf24_getRetransmitDelay 050B  
               ?_Nrf24_setRetransmitDelay 050B                        _spi1_configuration FE8F  
            Nrf24_SetSpeedDataRates@value 050E                       ?_DELAY_microseconds 0501  
                     SPI_write_buff@bytes 0505          __end_of_INT2_SetInterruptHandler 186A  
           Nrf24_print_byte_register@name 0550                   __end_of_Nrf24_getStatus 1828  
                    ??_Nrf24_getCRCLength 050D                                   ??_fputc 0505  
               __end_of_SYSTEM_Initialize 184E                                   ??_fputs 050E  
                                 ??_putch 0501                            _rf24_datarates 0580  
                              __pbssBANK5 0598                     Nrf24_dataReady@status 0510  
                      _DELAY_milliseconds 1688                     _INT0_InterruptHandler 05DB  
                   __end_of_Nrf24_getData 1658                          _Nrf24_getPALevel 17AC  
                         ??_SPI_read_buff 0506                      ??_DELAY_microseconds 0503  
                          _rf24_crclength FE99                     __end_of_Nrf24_flushRx 1892  
      Nrf24_print_address_register@buffer 0555                       ?_DELAY_milliseconds 0501  
                                 ?_memcpy 0501                                   ?_printf 053E  
              ??_INT1_SetInterruptHandler 0504                      Nrf24_getDataRate@dev 050B  
                    ??_DELAY_milliseconds 0503                                   _OSCCON1 00AD  
                                 _OSCCON3 00AF                                   _SPI1CLK 008C  
                 __end_of_Nrf24_powerUpRx 17AC                                   _SPI1RXB 0080  
                                 _SPI1TXB 0081                __end_of_Nrf24_readRegister 1688  
                                 _OSCTUNE 00B0                                   _SLRCONA 0403  
                                 _SLRCONB 040B                                   _SLRCONC 0413  
                                 _SLRCOND 041B                                   _SLRCONE 0423  
                                 _SLRCONF 042B                                   _WDTCON0 0078  
                                 _WDTCON1 0079                               nrf_loop@dev 05D2  
                             nrf_loop@buf 05C3                               nrf_loop@msg 05CD  
                             nrf_loop@ret 05CB                    __end_of_rf24_crclength FEB7  
               ?_INT0_SetInterruptHandler 0501                                   __Hparam 0000  
                               ?_nrf_loop 0501                              _Nrf24_config 1162  
                                 __Lparam 0000                        __end_of_SPI1_nrf24 FE8F  
                     _Nrf24_writeRegister 15F4                            _SPI_write_buff 1458  
                                 ___awdiv 0CFC                                   ___awmod 0DBE  
                        ?_Nrf24_dataReady 050E                                 ?_vfprintf 0536  
                      SPI_read_buff@bytes 0505                                   __pcinit 1558  
                                 __ramtop 2600                                   __ptext0 184E  
                                 __ptext1 0876                                   __ptext2 1408  
                                 __ptext3 16B8                                   __ptext4 1048  
                                 __ptext5 15F4                                   __ptext6 1458  
                                 __ptext7 1312                                   __ptext8 0390  
                                 __ptext9 10E2                     read_prec_or_width@fmt 0501  
                        ___awmod@dividend 0501                  ??_PIN_MANAGER_Initialize 0501  
                        ?_Nrf24_getStatus 050B                      ?_Nrf24_writeRegister 0507  
                    end_of_initialization 1586                  _INT2_SetInterruptHandler 185C  
                         Nrf24_config@dev 050E                                   memcpy@d 0507  
                                 memcpy@n 0505                                 _PIR10bits 04B8  
                                 memcpy@s 0509                                   fputc@fp 0503  
                                 fputs@fp 050C                        _read_prec_or_width 0A9C  
           Nrf24_print_address_register@i 055A                                ??_nrf_loop 055E  
                  __end_of_SPI_write_buff 149C                         __end_of_vfpfcnvrt 0390  
                         _SPI1_BufferRead 0000                                 _SPI1TCNTH 0083  
                               _SPI1TCNTL 0082                                   postdec1 04E5  
                                 postdec2 04DD                       ?_read_prec_or_width 0501  
                                 postinc0 04EE                                   postinc1 04E6  
                                 postinc2 04DE                          vfpfcnvrt@convarg 052F  
                              ??_vfprintf 053C                                 _SPI1_Open 0C32  
                   _INT1_InterruptHandler 05D8                     Nrf24_printDetails@dev 055C  
                     _SPI1_BufferExchange 0000                       Nrf24_getPALevel@dev 050B  
                            ??_Nrf24_init 0504                                 _TRISCbits 04C8  
                         Nrf24_setRADDR@i 0519                          ?_Nrf24_powerUpRx 0505  
                   ??_Nrf24_writeRegister 050A                      ??_read_prec_or_width 0505  
                         _SPI1_Initialize 17FA          __end_of_Nrf24_getRetransmitDelay 17E2  
        __end_of_Nrf24_setRetransmitDelay 16E4                           ?_SPI_write_buff 0503  
            __end_of_INTERRUPT_Initialize 1520                        __end_of_Nrf24_init 1710  
                             _rf24_pa_dbm 0560              _INT0_DefaultInterruptHandler 0000  
                              ?_SPI1_Open 0501                               vfpfcnvrt@ap 052B  
                             vfpfcnvrt@cp 0534                               vfpfcnvrt@fp 0527  
                      Nrf24_getStatus@dev 050B                            __end_of_memcpy 1458  
                          __end_of_printf 1762                  __end_of_Nrf24_getPALevel 17CA  
                     start_initialization 1558                               __end_of_abs 15C0  
                             __end_of_pad 0FAC                      SPI_write_buff@buffer 0503  
                             vfprintf@fmt 0538                            _Nrf24_setRADDR 1048  
    __end_of_Nrf24_print_address_register 0F0E              _Nrf24_print_address_register 0E6C  
                             __pdataBANK5 0560                                  ??_memcpy 0507  
                                ??_printf 054C                      Nrf24_getCRCLength@AA 050E  
                           _SPI1_ByteRead 0000                               __pbssCOMRAM 055E  
        __end_of_INT0_SetInterruptHandler 1886                             __pcstackBANK5 05BC  
                 __end_of_SPI1_Initialize 1812                        Nrf24_powerUpRx@dev 0505  
                Nrf24_print_status@status 054F                  ?_Nrf24_SetSpeedDataRates 050B  
                   _INT2_InterruptHandler 05D5                                 __pnvBANK5 05D5  
                      _Nrf24_readRegister 1658                    __end_of_Nrf24_setRADDR 10E2  
                  _PIN_MANAGER_Initialize 0FAC                                 _dtoa$1697 051E  
                       Nrf24_getData@data 0509                     __end_of_SPI_read_buff 15F4  
              __end_of_Nrf24_printDetails 0596                             __pmediumconst FE64  
                                ?___awdiv 0501                                  ?___awmod 0501  
                       _Nrf24_getDataRate 13B6                  _Nrf24_getRetransmitDelay 17CA  
                _Nrf24_setRetransmitDelay 16B8                               ??_SPI1_Open 0501  
                     ?_Nrf24_readRegister 0507             ?_Nrf24_print_address_register 054E  
                     Nrf24_getDataRate@dr 050E                        ?_Nrf24_getDataRate 050B  
        Nrf24_print_address_register@name 0550            DELAY_microseconds@microseconds 0501  
              ??_INT2_SetInterruptHandler 0504                       ??_Nrf24_getDataRate 050D  
              __end_of_Nrf24_print_status 1162                           SPI_write_buff@i 0506  
                    ??_Nrf24_readRegister 050A                      _INTERRUPT_Initialize 14E0  
                   Nrf24_readRegister@len 0509                     Nrf24_readRegister@reg 050A  
                        _CLOCK_Initialize 1828                                  _LATCbits 04C0  
               ?_INT1_SetInterruptHandler 0501                                  _PIE3bits 04A1  
                            _SPI1CON0bits 0084                           ?_Nrf24_setRADDR 050B  
                                _PIR1bits 04AF                                  _SPI1BAUD 0089  
                                _PIR3bits 04B1                                  _SPI1CON0 0084  
                                _SPI1CON1 0085                                  _SPI1CON2 0086  
               __end_of_Nrf24_getDataRate 1408                                  _PIR6bits 04B4  
          DELAY_milliseconds@milliseconds 0501              __end_of_Nrf24_configRegister 17FA  
                               _vfpfcnvrt 0000                              _SPI1INTFbits 008A  
                       _SPI1_Deinitialize 0000               Nrf24_getRetransmitDelay@dev 050B  
         __end_of_Nrf24_SetSpeedDataRates 124C               Nrf24_setRetransmitDelay@dev 050B  
             Nrf24_setRetransmitDelay@val 050D                          ?_SPI1_Initialize 0501  
                       Nrf24_getStatus@rv 050D                               _INTCON0bits 04D6  
                               copy_data0 156C                     ?_INTERRUPT_Initialize 0501  
              Nrf24_SetSpeedDataRates@dev 050B                  _INT0_SetInterruptHandler 1878  
              Nrf24_SetSpeedDataRates@val 050D                    Nrf24_writeRegister@len 0509  
                  Nrf24_writeRegister@reg 050A                          ??_SPI_write_buff 0506  
                           _Nrf24_getData 1626                                  __Hrparam 0000  
                               memcpy@tmp 050B                                vfprintf@ap 053A  
                                __Lrparam 0000                                vfprintf@fp 0536  
                           _Nrf24_flushRx 1886                                ?_vfpfcnvrt 0527  
             __end_of_Nrf24_writeRegister 1626                       SPI_read_buff@buffer 0503  
          ??_Nrf24_print_address_register 0554                         ?_Nrf24_getPALevel 050B  
                        Nrf24_getData@dev 0507                                  __ptext10 12B4  
                                __ptext11 0E6C                                  __ptext20 149C  
                                __ptext12 173C                                  __ptext21 0B68  
                                __ptext13 1364                                  __ptext30 16E4  
                                __ptext22 1892                                  __ptext14 0000  
                                __ptext31 0C32                                  __ptext23 158C  
                                __ptext15 0998                                  __ptext40 15C0  
                                __ptext32 1626                                  __ptext24 0DBE  
                                __ptext16 070C                                  __ptext41 17E2  
                                __ptext33 1762                                  __ptext25 0CFC  
                                __ptext17 0A9C                                  __ptext50 1878  
                                __ptext42 1710                                  __ptext34 1162  
                                __ptext26 17CA                                  __ptext18 0596  
                                __ptext51 1828                                  __ptext43 1688  
                                __ptext35 1788                                  __ptext27 17AC  
                                __ptext19 0F0E                                  __ptext44 183C  
                                __ptext36 1812                                  __ptext28 13B6  
                                __ptext45 17FA                                  __ptext37 1886  
                                __ptext29 124C                                  __ptext46 0FAC  
                                __ptext38 11DE                                  __ptext47 14E0  
                                __ptext39 1658                                  __ptext48 185C  
                                __ptext49 186A                        ??_Nrf24_getPALevel 050D  
         Nrf24_print_address_register@dev 054E           Nrf24_print_address_register@reg 0552  
         Nrf24_print_address_register@qty 0553                   Nrf24_readRegister@value 0507  
                          ?_Nrf24_getData 0507                                  _nrf_loop 0876  
                          ?_Nrf24_flushRx 0503                                  isa$xinst 0000  
                           Nrf24_init@dev 0502                                  _vfprintf 1364  
                               printf@fmt 053E              _INT1_DefaultInterruptHandler 0000  
              ?_Nrf24_print_byte_register 054E                                  memcpy@d1 0501  
                                memcpy@s1 0503                    ??_INTERRUPT_Initialize 0504  
                    _Nrf24_configRegister 17E2                         ??_Nrf24_dataReady 0510  
                 Nrf24_getDataRate@result 050D                   ?_PIN_MANAGER_Initialize 0501  
               SPI1_ByteExchange@byteData 0501                ??_Nrf24_getRetransmitDelay 050D  
              ??_Nrf24_setRetransmitDelay 050E                             ?_Nrf24_config 050E  
                       ??_Nrf24_getStatus 050D                                _SPI1SDIPPS 026B  
                              _SPI1SCKPPS 026A                                  printf@ap 054C  
                        _SPI1_BufferWrite 0000                               ??_vfpfcnvrt 052D  
                 Nrf24_printDetails@delay 05C0                  __end_of_CLOCK_Initialize 183C  
                              _SPI1_Close 0000              Nrf24_printDetails@retransmit 05C2  
                   Nrf24_getPALevel@level 050D                        _Nrf24_printDetails 0390  
                              _SPI1_nrf24 FE65         __end_of_Nrf24_print_byte_register 1312  
        __end_of_INT1_SetInterruptHandler 1878                __end_of_Nrf24_getCRCLength 12B4  
                        Nrf24_flushRx@dev 0503                     ?_Nrf24_configRegister 0503  
                     ?_Nrf24_printDetails 055C            __end_of_PIN_MANAGER_Initialize 1048  
                         ??_Nrf24_getData 050B                      Nrf24_setRADDR@buffer 0512  
                        ??_Nrf24_setRADDR 050F                __end_of_DELAY_microseconds 1364  
                         ??_Nrf24_flushRx 0505                   SPI1_Open@spiConfigIndex 0501  
                          ??_Nrf24_config 0512                        _Nrf24_print_status 10E2  
                       Nrf24_setRADDR@adr 050D                         Nrf24_setRADDR@dev 050B  
              __end_of_spi1_configuration FE99                         Nrf24_setRADDR@ret 0517  
